<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Athlonreg&#39;s Blog</title>
  
  <subtitle>套陆的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.iamzhl.top/"/>
  <updated>2018-03-19T15:26:23.936Z</updated>
  <id>https://blog.iamzhl.top/</id>
  
  <author>
    <name>athlonreg/套陆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How to change your username on your mac</title>
    <link href="https://blog.iamzhl.top/How-to-change-your-username-on-your-mac.html"/>
    <id>https://blog.iamzhl.top/How-to-change-your-username-on-your-mac.html</id>
    <published>2018-03-15T09:19:00.000Z</published>
    <updated>2018-03-19T15:26:23.936Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="帐户信息修改"><a href="#帐户信息修改" class="headerlink" title="帐户信息修改"></a>帐户信息修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System Preferences &gt; Users &amp; Groups &gt; 右单击当前用户 &gt; Advanced Options</span><br></pre></td></tr></table></figure><p><em>注意：用了一段时间的电脑不建议修改，可能会导致很多软件要重新安装。</em></p><h3 id="主机名修改"><a href="#主机名修改" class="headerlink" title="主机名修改"></a>主机名修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo scutil --set HostName MacBookPro</span><br></pre></td></tr></table></figure><h3 id="计算机名修改"><a href="#计算机名修改" class="headerlink" title="计算机名修改"></a>计算机名修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo scutil --set ComputerName MacBookPro</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      更改 mac 的帐户名、主机名和计算机名
    
    </summary>
    
      <category term="Hackintosh" scheme="https://blog.iamzhl.top/categories/Hackintosh/"/>
    
    
      <category term="账户名" scheme="https://blog.iamzhl.top/tags/%E8%B4%A6%E6%88%B7%E5%90%8D/"/>
    
      <category term="主机名" scheme="https://blog.iamzhl.top/tags/%E4%B8%BB%E6%9C%BA%E5%90%8D/"/>
    
      <category term="计算机名" scheme="https://blog.iamzhl.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%90%8D/"/>
    
      <category term="mac" scheme="https://blog.iamzhl.top/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>How to unzip packages without .DS_store</title>
    <link href="https://blog.iamzhl.top/How-to-unzip-packages-without-DS-store.html"/>
    <id>https://blog.iamzhl.top/How-to-unzip-packages-without-DS-store.html</id>
    <published>2018-03-15T09:11:43.000Z</published>
    <updated>2018-03-19T15:26:23.936Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="Mac下面压缩的时候总会自动生成-DS-store-文件，用户可以自行选择是否需要生成，执行下面命令之后需要重启Mac生效。"><a href="#Mac下面压缩的时候总会自动生成-DS-store-文件，用户可以自行选择是否需要生成，执行下面命令之后需要重启Mac生效。" class="headerlink" title="Mac下面压缩的时候总会自动生成 .DS_store 文件，用户可以自行选择是否需要生成，执行下面命令之后需要重启Mac生效。"></a>Mac下面压缩的时候总会自动生成 .DS_store 文件，用户可以自行选择是否需要生成，执行下面命令之后需要重启Mac生效。</h3><ul><li>禁止 .DS_store生成：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE</span><br></pre></td></tr></table></figure><ul><li>恢复 .DS_store生成：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults delete com.apple.desktopservices DSDontWriteNetworkStores</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      mac 下解压压缩包避免生产.DS_store文件
    
    </summary>
    
      <category term="Hackintosh" scheme="https://blog.iamzhl.top/categories/Hackintosh/"/>
    
    
      <category term=".DS_store" scheme="https://blog.iamzhl.top/tags/DS-store/"/>
    
  </entry>
  
  <entry>
    <title>0-1 backpack</title>
    <link href="https://blog.iamzhl.top/0-1-backpack.html"/>
    <id>https://blog.iamzhl.top/0-1-backpack.html</id>
    <published>2018-01-17T08:51:25.000Z</published>
    <updated>2018-01-17T09:25:12.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 5</span><br><span class="line">#define c 10</span><br><span class="line"></span><br><span class="line">int weight[n]=&#123;2,2,6,5,4&#125;, value[n]=&#123;6,3,5,4,6&#125;;</span><br><span class="line"></span><br><span class="line">int f(int i,int j)&#123;</span><br><span class="line">    int m1,m2;</span><br><span class="line">    if(i==n-1)&#123;</span><br><span class="line">        if(j&gt;=weight[i])</span><br><span class="line">            return value[i];</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    if(j&lt;weight[i])</span><br><span class="line">        return f(i+1,j);</span><br><span class="line">    m1=f(i+1,j);</span><br><span class="line">    m2=f(i+1,j-weight[i])+value[i];</span><br><span class="line">    return m1&gt;m2?m1:m2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    printf(&quot;%d\n&quot;,f(0,c));</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-05.png" alt="2018-01-17-05"></p><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 5</span><br><span class="line">#define c 10</span><br><span class="line"></span><br><span class="line">int weight[n]=&#123;2,2,6,5,4&#125;, value[n]=&#123;6,3,5,4,6&#125;;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    int s[n][c+1];</span><br><span class="line">    int i,j;</span><br><span class="line">    for(j=0;j&lt;=c;j++)&#123;</span><br><span class="line">        if(j&gt;weight[n-1])</span><br><span class="line">            s[n-1][j]=value[n-1];</span><br><span class="line">        else</span><br><span class="line">            s[n-1][j]=0;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=n-2;i&gt;=0;i--)&#123;</span><br><span class="line">        for(j=0;j&lt;=c;j++)&#123;</span><br><span class="line">            if(j&lt;weight[i])</span><br><span class="line">                s[i][j]=s[i+1][j];</span><br><span class="line">            else</span><br><span class="line">                s[i][j]=s[i+1][j]&gt;(s[i+1][j-weight[i]]+value[i])?s[i+1][j]:(s[i+1][j-weight[i]]+value[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%d\n&quot;,s[0][c]);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-07.png" alt="2018-01-17-07"></p><h3 id="回溯"><a href="#回溯" class="headerlink" title="回溯"></a>回溯</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 5</span><br><span class="line">#define c 10</span><br><span class="line"></span><br><span class="line">int weight[n]=&#123;2,2,6,5,4&#125;, value[n]=&#123;6,3,5,4,6&#125;;</span><br><span class="line">int maxvalue, tempvalue, tempweight;</span><br><span class="line"></span><br><span class="line">void traceback(int t)&#123;</span><br><span class="line">    if(t==n)&#123;</span><br><span class="line">        if(tempvalue&gt;maxvalue)</span><br><span class="line">            maxvalue=tempvalue;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if(tempweight+weight[t]&lt;=c)&#123;</span><br><span class="line">        tempweight+=weight[t];</span><br><span class="line">        tempvalue+=value[t];</span><br><span class="line">        traceback(t+1);</span><br><span class="line">        tempweight-=weight[t];</span><br><span class="line">        tempvalue-=value[t];</span><br><span class="line">    &#125;</span><br><span class="line">    traceback(t+1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    traceback(0);</span><br><span class="line">    printf(&quot;%d\n&quot;,maxvalue);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果-2"><a href="#运行结果-2" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-06.png" alt="2018-01-17-06"></p>]]></content>
    
    <summary type="html">
    
      0-1背包问题
    
    </summary>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/categories/algorithm/"/>
    
    
      <category term="0-1背包问题" scheme="https://blog.iamzhl.top/tags/0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/tags/algorithm/"/>
    
      <category term="算法" scheme="https://blog.iamzhl.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Reverse part of array</title>
    <link href="https://blog.iamzhl.top/Reverse-part-of-array.html"/>
    <id>https://blog.iamzhl.top/Reverse-part-of-array.html</id>
    <published>2018-01-17T08:23:37.000Z</published>
    <updated>2018-01-17T08:27:36.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 8</span><br><span class="line"></span><br><span class="line">int a[n]=&#123;1,4,2,6,8,5,7,3&#125;;</span><br><span class="line"></span><br><span class="line">void print()&#123;</span><br><span class="line">    for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">        printf(&quot;%3d&quot;, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    putchar(&apos;\n&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void swap(int *a, int *b)&#123;</span><br><span class="line">    int temp=*a;</span><br><span class="line">    *a=*b;</span><br><span class="line">    *b=temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void swapposition(int a[], int low, int high, int k)&#123;</span><br><span class="line">    int i, j;</span><br><span class="line">    for(i=low,j=k-1;i&lt;j;i++,j--)</span><br><span class="line">        swap(&amp;a[i], &amp;a[j]);</span><br><span class="line">    for(i=k,j=high;i&lt;j;i++,j--)</span><br><span class="line">        swap(&amp;a[i], &amp;a[j]);</span><br><span class="line">    for(i=low,j=high;i&lt;j;i++,j--)</span><br><span class="line">        swap(&amp;a[i], &amp;a[j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    int k;</span><br><span class="line">    print();</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;k);</span><br><span class="line">    swapposition(a, 0, n-1, k);</span><br><span class="line">    print();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-04.png" alt="2018-01-17-04"></p>]]></content>
    
    <summary type="html">
    
      将数组从指定位置逆置，如从4开始逆置{1，4，2，6，8，5，7，3}，则输出{8，5，7，3，1，4，2，6}。
    
    </summary>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/tags/algorithm/"/>
    
      <category term="算法" scheme="https://blog.iamzhl.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="逆置" scheme="https://blog.iamzhl.top/tags/%E9%80%86%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>n queen</title>
    <link href="https://blog.iamzhl.top/n-queen.html"/>
    <id>https://blog.iamzhl.top/n-queen.html</id>
    <published>2018-01-17T08:04:05.000Z</published>
    <updated>2018-01-17T08:05:58.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 8</span><br><span class="line"></span><br><span class="line">int a[n];</span><br><span class="line">int count=0;</span><br><span class="line"></span><br><span class="line">int judge(int t)&#123;</span><br><span class="line">    if(t==n)</span><br><span class="line">        return 0;</span><br><span class="line">    for(int i=0;i&lt;t;i++)&#123;</span><br><span class="line">        for(int j=i+1;j&lt;=t;j++)&#123;</span><br><span class="line">            if(a[i]==a[j])</span><br><span class="line">                return 0;</span><br><span class="line">            if(abs(i-j)==abs(a[i]-a[j]))</span><br><span class="line">                return 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void traceback(int t)&#123;</span><br><span class="line">    int i;</span><br><span class="line">    if(t==n)&#123;</span><br><span class="line">        count++;</span><br><span class="line">        for(i=0;i&lt;n;i++)</span><br><span class="line">            printf(&quot;%3d&quot;, a[i]);</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=0;i&lt;n;i++)&#123;</span><br><span class="line">        a[t]=i;</span><br><span class="line">        if(judge(t))</span><br><span class="line">            traceback(t+1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    traceback(0);</span><br><span class="line">    printf(&quot;%d\n&quot;, count);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-03.png" alt="2018-01-17-03"></p>]]></content>
    
    <summary type="html">
    
      n皇后问题
    
    </summary>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/tags/algorithm/"/>
    
      <category term="算法" scheme="https://blog.iamzhl.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="n皇后问题" scheme="https://blog.iamzhl.top/tags/n%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>RecurMatrix</title>
    <link href="https://blog.iamzhl.top/RecurMatrix.html"/>
    <id>https://blog.iamzhl.top/RecurMatrix.html</id>
    <published>2018-01-17T07:54:02.000Z</published>
    <updated>2018-01-17T07:55:50.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 6</span><br><span class="line"></span><br><span class="line">int a[n+1]=&#123;30,35,15,5,10,20,25&#125;;</span><br><span class="line">int b[n+1][n+1];</span><br><span class="line"></span><br><span class="line">int RecurMatrix(int i, int j)&#123;</span><br><span class="line">    if(i==j)</span><br><span class="line">        return 0;</span><br><span class="line">    int minvalue=RecurMatrix(i, i)+RecurMatrix(i+1, j)+a[i-1]*a[i]*a[j];</span><br><span class="line">    b[i][j]=i;</span><br><span class="line">    for(int k=i+1;k&lt;j;k++)&#123;</span><br><span class="line">        int tempvalue=RecurMatrix(i, k)+RecurMatrix(k+1, j)+a[i-1]*a[k]*a[j];</span><br><span class="line">        if(tempvalue&lt;minvalue)&#123;</span><br><span class="line">            minvalue=tempvalue;</span><br><span class="line">            b[i][j]=k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return minvalue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void traceback(int i, int j)&#123;</span><br><span class="line">    if(i==j)</span><br><span class="line">        return;</span><br><span class="line">    traceback(i, b[i][j]);</span><br><span class="line">    traceback(b[i][j]+1, j);</span><br><span class="line">    printf(&quot;A[%d-%d]*A[%d-%d]\n&quot;, i, b[i][j], b[i][j]+1, j);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    printf(&quot;%d\n&quot;, RecurMatrix(1, n));</span><br><span class="line">    traceback(1, n);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-02.png" alt="2018-01-17-02"></p>]]></content>
    
    <summary type="html">
    
      矩阵连乘问题
    
    </summary>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/tags/algorithm/"/>
    
      <category term="算法" scheme="https://blog.iamzhl.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="矩阵连乘问题" scheme="https://blog.iamzhl.top/tags/%E7%9F%A9%E9%98%B5%E8%BF%9E%E4%B9%98%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>BinarySearch</title>
    <link href="https://blog.iamzhl.top/BinarySearch.html"/>
    <id>https://blog.iamzhl.top/BinarySearch.html</id>
    <published>2018-01-17T07:29:36.000Z</published>
    <updated>2018-01-17T07:32:27.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 5</span><br><span class="line"></span><br><span class="line">int arr[n]=&#123;1,2,3,4,5&#125;;</span><br><span class="line"></span><br><span class="line">int BinarySearch(int a[], int low, int high, int k)&#123;</span><br><span class="line">    while(low&lt;high)&#123;</span><br><span class="line">        int mid=(low+high)/2;</span><br><span class="line">        if(a[mid]==k)</span><br><span class="line">            return mid;</span><br><span class="line">        else if(a[mid]&gt;k)</span><br><span class="line">            return BinarySearch(a, low, mid-1, k);</span><br><span class="line">        else</span><br><span class="line">            return BinarySearch(a, mid+1, high, k);</span><br><span class="line">    &#125;</span><br><span class="line">    return -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    int x=4;</span><br><span class="line">    printf(&quot;%d\n&quot;, BinarySearch(arr, 0, n-1, x));</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-01.png" alt="2018-01-17-01"></p>]]></content>
    
    <summary type="html">
    
      二分查找
    
    </summary>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/tags/algorithm/"/>
    
      <category term="算法" scheme="https://blog.iamzhl.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="二分查找" scheme="https://blog.iamzhl.top/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    
  </entry>
  
  <entry>
    <title>Ldu crawl based on nodejs</title>
    <link href="https://blog.iamzhl.top/ldu-crawl-based-on-nodejs.html"/>
    <id>https://blog.iamzhl.top/ldu-crawl-based-on-nodejs.html</id>
    <published>2018-01-10T11:40:02.000Z</published>
    <updated>2018-01-10T14:36:24.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>基于Nodejs实现的网络爬虫，爬取鲁东大学官网指定数量的新闻保存至本地。</p><h3 id="项目下载"><a href="#项目下载" class="headerlink" title="项目下载"></a>项目下载</h3><p>终端执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/athlonreg/ldu-crawl-based-on-nodejs.git</span><br></pre></td></tr></table></figure><p><code>Windows</code>用户请去项目首页下载，如图：</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15155892546769.jpg" alt="15155892546769"></p><h3 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h3><p>项目目录共有<code>data</code>、<code>image</code>、<code>node_modules</code>三个文件夹，其中<code>node_modules</code>为项目用到的<code>node</code>模块包，<code>data</code>和<code>image</code>分别用以存储抓取到的所有新闻，<code>data</code>用以保存文本内容，<code>image</code>用以保存所有文章内的图片，以文章标题命名。如下图所示：</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15155845693616.jpg" alt="15155845693616"></p><p><code>index.html</code>是程序的<code>web</code>主页面；<br><code>server.js</code>用以启动服务器；<br><code>spider.js</code>是爬虫主程序；<br><code>test.sh</code>用以启动爬虫开始抓取工作。</p><h3 id="程序运行方法"><a href="#程序运行方法" class="headerlink" title="程序运行方法"></a>程序运行方法</h3><h4 id="For-Windows"><a href="#For-Windows" class="headerlink" title="For Windows"></a>For Windows</h4><blockquote><p>两种方式，首先将项目放到桌面：</p></blockquote><p>1、在根目录利用<code>cmd</code>或者<code>Git Bash</code>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node spider.js</span><br></pre></td></tr></table></figure><p>爬虫程序即开始执行。</p><p>2、双击<code>test.sh</code>或者利用<code>Git Bash</code>执行(若执行闪退请在<code>Git Bash</code>执行)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x test.sh</span><br><span class="line">$ ./test.sh</span><br></pre></td></tr></table></figure><p>即可自动完成所有工作，抓取工作完成后，命令行自动退出。</p><h4 id="For-macOS"><a href="#For-macOS" class="headerlink" title="For macOS"></a>For macOS</h4><blockquote><p>两种方式</p></blockquote><p>1、假设项目放于桌面，打开终端执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/Desktop/ldu_crawl/</span><br><span class="line">$ chmod +x test.sh</span><br><span class="line">$ ./test.sh</span><br></pre></td></tr></table></figure><p>即可自动完成所有工作，抓取工作完成后，命令行自动退出。</p><p>2、假设项目放于桌面，打开终端执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/Desktop/ldu_crawl/</span><br><span class="line">$ node spider.js</span><br></pre></td></tr></table></figure><h3 id="预设界面查看"><a href="#预设界面查看" class="headerlink" title="预设界面查看"></a>预设界面查看</h3><h4 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h4><p>终端执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node server.js</span><br></pre></td></tr></table></figure><p><img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-10.png" alt="2018-01-10"></p><h4 id="打开浏览器"><a href="#打开浏览器" class="headerlink" title="打开浏览器"></a>打开浏览器</h4><p>网址输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8080/</span><br></pre></td></tr></table></figure><p>即可打开项目首页。如图所示：</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15155856514536.jpg" alt="15155856514536"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15155856857593.jpg" alt="15155856857593"></p><p>点击了解使用方法即可查看详细使用说明。</p>]]></content>
    
    <summary type="html">
    
      基于Nodejs实现的网络爬虫
    
    </summary>
    
      <category term="Study" scheme="https://blog.iamzhl.top/categories/Study/"/>
    
    
      <category term="Nodejs" scheme="https://blog.iamzhl.top/tags/Nodejs/"/>
    
      <category term="crawl" scheme="https://blog.iamzhl.top/tags/crawl/"/>
    
      <category term="爬虫" scheme="https://blog.iamzhl.top/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Install and config mysql on mac</title>
    <link href="https://blog.iamzhl.top/Install-and-config-mysql-on-mac.html"/>
    <id>https://blog.iamzhl.top/Install-and-config-mysql-on-mac.html</id>
    <published>2017-12-20T09:01:00.000Z</published>
    <updated>2017-12-20T09:31:46.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="安装HomeBrew"><a href="#安装HomeBrew" class="headerlink" title="安装HomeBrew"></a>安装<code>HomeBrew</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><p>等待安装完成即可</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装<code>MySQL</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install mysql</span><br></pre></td></tr></table></figure><p>等待安装完成，如下图</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-20-1.png" alt="2017-12-20-1"></p><h3 id="检查安装是否正常"><a href="#检查安装是否正常" class="headerlink" title="检查安装是否正常"></a>检查安装是否正常</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql --version</span><br></pre></td></tr></table></figure><p>如果出现版本号，则正常，如下图</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-20-2.png" alt="2017-12-20-2"></p><p>若提示<code>command not found</code>，则依次执行下面两条命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/bin/</span><br><span class="line">$ sudo ln -fs /usr/local/mysql/bin/mysql mysql</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="配置root账号的密码，默认无密码"><a href="#配置root账号的密码，默认无密码" class="headerlink" title="配置root账号的密码，默认无密码"></a>配置root账号的密码，默认无密码</h3><h4 id="开启安全模式启动mysql"><a href="#开启安全模式启动mysql" class="headerlink" title="开启安全模式启动mysql"></a>开启安全模式启动<code>mysql</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables</span><br></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><h4 id="首先登录mysql"><a href="#首先登录mysql" class="headerlink" title="首先登录mysql"></a>首先登录<code>mysql</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root</span><br></pre></td></tr></table></figure><h4 id="配置root账号的密码"><a href="#配置root账号的密码" class="headerlink" title="配置root账号的密码"></a>配置<code>root</code>账号的密码</h4><blockquote><p>命令中的<code>****</code>为要修改的密码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE mysql.user SET authentication_string=PASSWORD(&apos;****&apos;) WHERE User=&apos;root&apos;;</span><br></pre></td></tr></table></figure><h4 id="刷新权限"><a href="#刷新权限" class="headerlink" title="刷新权限"></a>刷新权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h4 id="退出mysql"><a href="#退出mysql" class="headerlink" title="退出mysql"></a>退出<code>mysql</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\q</span><br></pre></td></tr></table></figure><h2 id="验证密码"><a href="#验证密码" class="headerlink" title="验证密码"></a>验证密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p</span><br></pre></td></tr></table></figure><p>会提示输入密码，输入刚才设定的密码后如果能够进入<code>mysql</code>则说明配置成功。</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-20-3.png" alt="2017-12-20-3"></p><h2 id="终端开启和关闭mysql服务"><a href="#终端开启和关闭mysql服务" class="headerlink" title="终端开启和关闭mysql服务"></a>终端开启和关闭<code>mysql</code>服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /usr/local/mysql/support-files/mysql.server start</span><br><span class="line">$ sudo /usr/local/mysql/support-files/mysql.server stop</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      在 Mac 安装和配置 MySQL
    
    </summary>
    
      <category term="Study" scheme="https://blog.iamzhl.top/categories/Study/"/>
    
    
      <category term="Mac" scheme="https://blog.iamzhl.top/tags/Mac/"/>
    
      <category term="MySQL" scheme="https://blog.iamzhl.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Clover ACPI hotpatch</title>
    <link href="https://blog.iamzhl.top/Clover-ACPI-hotpatch.html"/>
    <id>https://blog.iamzhl.top/Clover-ACPI-hotpatch.html</id>
    <published>2017-12-17T07:30:15.000Z</published>
    <updated>2017-12-24T11:36:15.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Preface–序言"><a href="#Preface–序言" class="headerlink" title="Preface–序言"></a>Preface–序言</h2><p>This blog is created by me to introduce how to using Clover to hotpatch ACPI，and provide an Chinese version。</p><blockquote><p>我写这篇博客是为了介绍如何使用<code>Clover</code>对<code>ACPI</code>使用<code>hotpatch</code>，并翻译原贴提供中文参考帖。</p></blockquote><h2 id="Brief-description-for-hotpatch–hotpatch概要"><a href="#Brief-description-for-hotpatch–hotpatch概要" class="headerlink" title="Brief description for hotpatch–hotpatch概要"></a>Brief description for hotpatch–<code>hotpatch</code>概要</h2><p>In RehabMan’s GitHub homepage, a repository named <code>OS-X-Clover-Laptop-Config</code> Contains some Clover <code>config.plist</code> for common Intel graphics and hotpatch for common configurations.More information in <a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config" target="_blank" rel="noopener">here</a>.</p><blockquote><p><code>RehabMan</code>的<code>GitHub</code>有一个仓库–<code>OS-X-Clover-Laptop-Config</code>,里面包含了一些适用于常见的英特尔核芯显卡的<code>config.plist</code>,还有<code>hotpatch</code>。点击<a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config" target="_blank" rel="noopener">这里</a>了解更多。</p></blockquote><p>There are some handy SSDTs for use with Clover ACPI hotpatch (in conjunction with hotpatch/config.plist) If you understand ACPI, you may find the SSDTs and hotpatch/config.plist quite useful.</p><blockquote><p>这儿有许多针对使用Clover ACPI hotpatch(连同使用hotpatch/config.plist)的SSDT。如果你理解了ACPI，你会发现这些<code>SSDT</code>和<code>hotpatch/config.plist</code>相当重要。</p></blockquote><p>Read here for the hotpatch guide: <a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/</a></p><blockquote><p>这里是<code>hotpatch</code>的‘入门引导贴。<br><a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/</a></p></blockquote><h2 id="A-brief-description-of-each-hotpatch-SSDT-is-provided-below–下面是每一个-hotpatch-SSDT-的概要"><a href="#A-brief-description-of-each-hotpatch-SSDT-is-provided-below–下面是每一个-hotpatch-SSDT-的概要" class="headerlink" title="A brief description of each hotpatch SSDT is provided below–下面是每一个 hotpatch SSDT 的概要"></a>A brief description of each hotpatch SSDT is provided below–下面是每一个 <code>hotpatch SSDT</code> 的概要</h2><p><code>SSDT-Config.dsl</code>: This file provides configuration data for other SSDTs. Read the comments within the file for more information.</p><blockquote><p><code>SSDT-Config.dsl</code>:这个文件为其他<code>SSDT</code>提供参数。请阅读文件中的注释以获得更多信息。</p></blockquote><p><code>SSDT-Debug.dsl</code>: This SSDT is for use with ACPIDebug.kext. Instead of patching your DSDT to add the RMDT device, you can use this SSDT and refer to the methods with External. See ACPIDebug.kext documentation for more information regarding the RMDT methods.</p><blockquote><p>这个<code>SSDT</code>和<code>ACPIDebug.kext</code>一起使用。不需要对你的<code>DSDT</code>打补丁增加<code>RMDT</code>设备，你可以使用这个<code>SSDT</code>通过<code>External</code>导入这个方法。关于<code>RMDT</code>方法，要了解更多请参阅<code>ACPIDebug.kext</code>文档。</p></blockquote><p><code>SSDT-XOSI.dsl</code>: This SSDT provides the XOSI method, which is a replacement for the system provided _OSI object when the _OSI-&gt;XOSI patch is being used. This is actually one of the examples in the Clover ACPI hotpatch guide, linked above.</p><blockquote><p>这个<code>SSDT</code>提供了<code>XOSI</code>方法，当打了<code>_OSI-&gt;XOSI</code>补丁时，<code>XOSI</code>方法会替换系统提供的<code>_OSI</code>对象。实际上，这就是<code>Clover ACPI hotpatch</code>入门参考帖的一个例子，链接在下面。</p></blockquote><p>SSDT-IGPU.dsl This SSDT injects Intel GPU properties depending on the configuration data in SSDT-Config and the device-id that is discovered to be present on the system. It assumes the IGPU is named IGPU (typical is GFX0, requring GFX0-&gt;IGPU rename). Configured with RMCF.TYPE, RMCF.HIGH, RMCF.IGPI, and SSDT-SkylakeSpoof.aml.</p><blockquote><p>这个<code>SSDT</code>根据<code>SSDT-config</code>的配置数据和系统中发现的设备id注入了Intel GPU–核芯显卡属性。它假定<code>IGPU</code>被命名成<code>IGPU</code>(通常是<code>GFX0</code>，需要重命名<code>GFX0-&gt;IGPU</code>)。通过<code>RMCF.TYPE, RMCF.HIGH, RMCF.IGPI, and SSDT-SkylakeSpoof.aml</code>来配置。</p></blockquote><p><code>SSDT-SkylakeSpoof.aml</code>: This SSDT is an optional SSDT that can be paired with SSDT-IGPU.dsl. When present, SSDT-IGPU uses the data within as an override for various KabyLake graphics devices which spoofs those devices as Skylake. Prior to 10.12.6, Skylake spoofing is the only option for KabyLake graphics. And even with 10.12.6 (or later, including 10.13.x), it still may be useful to spoof KabyLake graphics as Skyake. Keep in mind complete Skylake spoofing requires FakePCIID.kext + FakePCIID_Intel_HD_Graphics.kext.</p><blockquote><p>这个<code>SSDT</code>是一个可选的<code>SSDT</code>,它可以配合<code>SSDT-IGPU.dsl</code>使用。<code>SSDT-IGPU</code>使用这些数据对<code>KabyLake</code>图形设备的数据进行覆盖重写，把<code>KabyLake</code>仿冒成<code>Skylake</code>。10.12.6之前,<code>KabyLake</code>只有仿冒成’SkyLake’驱动核显，即使在10.12.6之后(或者更新的版本，包括10.13.x)，将<code>KabyLake</code>仿冒成’SkyLake’仍然是很有用的，需要注意的是完整的仿冒需要<code>FakePCIID.kext + FakePCIID_Intel_HD_Graphics.kext</code>。</p></blockquote><p><code>SSDT-IMEI.dsl</code>: This SSDT injects fake device-id as required for IMEI when using mixed HD3000/7-series or HD4000/6-series. Be sure to read the comments within carefully, as customization is required if your system already has an IMEI identity in ACPI.</p><blockquote><p>当使用混合的hd3000/7系或hd4000/6系时，该SSDT为IMEI注入了仿冒的设备id。一定要仔细阅读注释，因为如果您的系统已经在ACPI中有了IMEI标识，那么就需要进行定制。</p></blockquote><p><code>SSDT-PNLF.dsl</code>: This SSDT injects a PNLF device that works with IntelBacklight.kext or AppleBacklight.kext. Configured with RMCF.BKLT, RMCF.LMAX, RMCF.FBTP. See guide for more information: <a href="https://www.tonymacx86.com/threads/guide-laptop-backlight-control-using-applebacklightinjector-kext.218222/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-laptop-backlight-control-using-applebacklightinjector-kext.218222/</a></p><blockquote><p>这个SSDT注入了一个<code>PNLF</code>设备，它可以与<code>IntelBacklight.kext</code> 或者<code>AppleBacklight.kext</code>一起工作。通过<code>RMCF.BKLT</code> ,<code>RMCF.LMAX</code> <code>RMCF.FBTP</code>。更多信息参见指南:</p></blockquote><p><code>SSDT-LPC.dsl</code>:This SSDT injects properties to force AppleLPC to load for various unsupported LPC device-ids. It assumes the LPC device is named LPCB.</p><blockquote><p>这个SSDT:注入属性以强制<code>AppleLPC</code>加载各种不支持的<code>LPC</code>设备id。需要<code>LPC</code>设备被命名为<code>LPCB</code>。</p></blockquote><p><code>SSDT-SATA.dsl</code>: This SSDT injects properties (fake device-id, compatible) to enable the SATA controller with certain unsupported SATA controllers. It assumes the SATA device is named SATA (typical is SAT0, thus requiring SAT0-&gt;SATA rename).</p><blockquote><p>这个SSDT注入了一些属性(仿冒的设备id，兼容的)，以使某些不受支持的<code>SATA</code>控制器启用<code>SATA</code>控制器。它假设<code>SATA</code>设备被命名为<code>SATA</code>(常见的是<code>SAT0</code>，因此需要<code>SAT0-SATA</code>重命名)。</p></blockquote><p><code>SSDT-Disable_DGPU.dsl</code>: This SSDT provides an _INI method that will call _OFF for a couple of common paths for a discrete GPU in a switched/dual GPU scenario. This SSDT can work to disable the Nvidia or AMD graphics device, if the path matches (or is modified to math) and your _OFF method code path has no EC related code. Refer to the hotpatch guide for a complete example.</p><blockquote><p>这个SSDT提供了一个<code>INI</code>方法，它将在可切换的/双<code>GPU</code>中为独立显卡提供一些通用的路径来调用<code>_OFF</code>。如果路径匹配(或被自定义来匹配)而且你的<code>_OFF</code>方法代码路径则没有与<code>EC</code>相关的代码，那么这个<code>SSDT</code>可以禁用<code>Nvidia</code>或<code>AMD</code>图形设备。有关一个完整的示例，请参阅热补丁指南。</p></blockquote><p><code>SSDT-SMBUS.dsl</code>:This SSDT injects the missing DVL0 device. Mostly used with Sandy Bridge and Ivy Bridge systems.</p><blockquote><p>这个SSDT注入了丢失的<code>DVL0</code>设备。主要用于<code>Sandy Bridge</code>和<code>Ivy Bridge</code>平台。</p></blockquote><p><code>SSDT-GPRW.dsl</code> and <code>SSDT-UPRW.dsl</code>: These SSDTs is used in conjuction with the GPRW-&gt;XPRW or UPRW-&gt;XPRW patch. Used together this SSDT can fix “instant-wake” by disabling “wake on USB”. It overrides the _PRW package return for GPE indexes 0x0d or 0x6d. Potential companion patches are provided in hotpatch/config.plist</p><blockquote><p>这些SSDT与<code>GPRW-XPRW</code>或<code>UPRW-XPRW</code>补丁一起使用。通过使用这些<code>SSDT</code>，可以通过禁用<code>wake on USB</code>来修复<code>instant wake</code>。它重写了<code>GPE</code>的索引<code>0x0d</code>或<code>0x6d</code>的<code>PRW</code>包返回值。在<code>hotpatch</code>/<code>config.plist</code>中提供了潜在的伙伴补丁。</p></blockquote><p><code>SSDT-LANC_PRW.dsl</code>: Also part of fixing “instant wake”, but this is for _PRW on the Ethernet device. Potential companion patches are provided in hotpatch/config.plist.</p><blockquote><p>这也是修复<code>instant wake</code>的一部分，但这是在以太网设备上进行修复的。在<code>hotpatch</code>/<code>config.plist</code>中提供了潜在的伙伴补丁。</p></blockquote><p><code>SSDT-PTSWAK.dsl</code>: This SSDT provides overrides for both _PTS and _WAK. When combined with the appropriate companion patches from hotpatch/config.plist, these methods can provide various fixes. The actions are controlled by RMCF.DPTS, RMCF.SHUT, RMCF.XPEE, RMCF.SSTF. Refer to SSDT-Config.dsl for more information on those options.</p><blockquote><p>这个SSDT提供了对<code>_PTS</code>和<code>_WAK</code>的重写。当与来自<code>hotpatch</code>/<code>config.plist</code>的适当的补丁相结合使用时，这些方法可以提供一系列的修复。这些行为是由<code>RMCF.DPTS</code>, <code>RMCF.SHUT</code>,<code>RMCF.XPEE</code>,<code>RMCF.XPEE</code> ,<code>RMCF.SSTF</code>.更多关于这些选项的信息参阅<code>SSDT-Config</code>。</p></blockquote><p><code>SSDT-Disable_EHCI.dsl</code>: This SSDT can disable both EHCI controllers. It is assumed both have been renamed to EH01/EH02 (typically original names are EHC1/EHC2).</p><blockquote><p>这个SSDT可以禁用<code>EHCI</code>控制器。要求这两种情况都被重新命名为<code>EH01/EH02</code>(通常原来的名字是<code>EHC1/EHC2</code>).</p></blockquote><p><code>SSDT-Disable_EH01.dsl</code>, <code>SSDT-Disable_EH02.dsl</code>: Each of these SSDTs is just SSDT-Disable_EHCI.dsl broken down to only disable EH01 or only EH02. Use as appropriate depending on which EHCI controllers are active/present in your ACPI set.</p><blockquote><p>这些SSDT每一个都是<code>SSDT-Disable_EHCI.dsl</code>分解的，仅仅用以禁用<code>EH01</code>或<code>EH02</code>。取决于在你的<code>ACPI</code>集合中使用哪个<code>EHCI</code>控制器是合适的。</p></blockquote><p><code>SSDT-XWAK.dsl</code>, <code>SSDT-XSEL.dsl</code>, <code>SSDT-ESEL.dsl</code>: Each of these SSDTs provides an empty XWAK, XSEL, and ESEL methods (respectively). Use with the appropriate companion patch from hotpatch/config.plist. Typically, these methods are disabled (by having no code in them) to disable certain actions native ACPI may be doing on wake from sleep or during startup that cause problems with the xHCI/EHCI configuration.</p><blockquote><p>这些SSDT分别提供了一个空的<code>XWAK</code>、<code>XSEL</code>和<code>ESEL</code>方法(独立地)。配合<code>hotpatch/config.plist</code>中适当的补丁一起使用。通常情况下，这些方法被禁用(因为在它们中没有代码)，以禁用本地<code>ACPI</code>可能在唤醒睡眠或在启动时导致<code>xHCI/EHCI</code>i配置问题的某些动作。</p></blockquote><p><code>SSDT-PluginType1.dsl</code>: This SSDT injects “plugin-type”=1 on CPU0. It assumes ACPI Processor objects are in Scope(_PR). It can be used to enable native CPU power management on Haswell and later CPUs. See guide for more information: <a href="https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/</a>.</p><blockquote><p>这个SSDT在<code>CPU0</code>注入<code>“plugin-type”=1</code>。它要求<code>ACPI</code>处理器对象在<code>Scope(_PR)</code>范围内。它可以用于在<code>Haswell</code>和更新的<code>CPU</code>启用原生电源管理。更多信息见指南：<a href="https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/</a>.</p></blockquote><p><code>SSDT-HDEF.dsl</code> and <code>SSDT-HDAU.dsl</code>: Injects layout-id, hda-gfx, and PinConfiguration properties on HDEF and HDAU in order to implement audio with patched AppleHDA.kext Configured with: RMCF.AUDL.</p><blockquote><p>在<code>HDEF</code>和<code>HDAU</code>上注入<code>layout-id</code>、<code>hda-gfx</code>和<code>PinConfiguration</code>属性，以通过对<code>AppleHDA</code>的<code>patch</code>实现音频。通过<code>RMCF.AUDL</code>配置.</p></blockquote><p><code>SSDT-EH01.dsl</code>,<code>SSDT-EH02.dsl</code>, and <code>SSDT-XHC.dsl</code>:These SSDTs inject USB power properties and control over FakePCIID_XHCIMux (dending on SSDT-Disable_EH*.dsl).</p><blockquote><p>这些SSDT注入<code>USB</code>电源属性并通过<code>FakePCIID_XHCIMux</code>控制(取决于<code>SSDT-Disable_EH*.dsl</code>)。</p></blockquote><p><code>SSDT-ALS0.dsl</code>: Injects a fake ALS device (ambient light sensor). This SSDT is used to fix problems with restoring brightness upon reboot.</p><blockquote><p>注入仿冒<code>ALS</code>设备(环境光传感器)。这个<code>SSDT</code>用于修复重新启动时还原亮度的问题。</p></blockquote><h2 id="Introduction-说明文档"><a href="#Introduction-说明文档" class="headerlink" title="Introduction-说明文档"></a>Introduction-说明文档</h2><p>Patching ACPI is always necessary to enable (near) full functionality when installing OS X on non-Apple hardware.</p><blockquote><p>在非苹果硬件上安装OS X时，修补<code>ACPI</code>以启用(接近)完整的功能总是必要的。</p></blockquote><p>There is a complete guide here: <a href="http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/" target="_blank" rel="noopener">http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/</a></p><blockquote><p>这里有一个完整的指南: <a href="http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/" target="_blank" rel="noopener">http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/</a></p></blockquote><p>That guide uses what is known as “static patching”. In order to inject patched ACPI files, we extract native ACPI, disassemble them, make changes, then recompile and place the files in ACPI/patched, so that Clover injects the patched ACPI instead of native ACPI. With the techniques detailed in this guide, the changes can be made directly to the ACPI binaries provided by BIOS, skipping the extract, disassembly, and recompilation steps.</p><blockquote><p>该指南使用了所谓的“静态补丁”。为了注入打了补丁的<code>ACPI</code>文件，我们提取本地的ACPI，将它们反编译，进行修改，然后重新编译，并将文件放在<code>ACPI/patched</code>中，这样Clover就注入了打过补丁的<code>ACPI</code>，而不是原生的<code>ACPI</code>。通过本指南中详细介绍的技术，可以直接对<code>BIOS</code>提供的<code>ACPI</code>二进制文件进行更改，跳过提取、分解和重新编译步骤。</p></blockquote><p>You should have a solid understanding of static ACPI patching before attempting to hotpatch. You should also have an understanding of the ACPI spec, binary patching, programming, and ACPI concepts. Don’t expect step-by-step and spoon feeding in this thread.</p><blockquote><p>在尝试<code>hotpatch</code>之前，你应该对静态的<code>ACPI</code>补丁有一定的了解。你还应该了解<code>ACPI</code>规范、二进制补丁、语法和<code>ACPI</code>概念。不要指望在这个过程中循序渐进地学习。</p></blockquote><h3 id="Clover-mechanisms-Clover机制"><a href="#Clover-mechanisms-Clover机制" class="headerlink" title="Clover mechanisms-Clover机制"></a>Clover mechanisms-<code>Clover</code>机制</h3><p>Clover provides a few methods for accomplishing ACPI hotpatch:</p><blockquote><p>Clover提供了一些新的方法来实现<code>ACPI hotpatch</code>.</p></blockquote><ul><li>config.plist/ACPI/DSDT/Fixes</li><li>config.plist/ACPI/DSDT/Patches</li><li>ability to inject additional SSDTs</li></ul><p><code>DSDT/Fixes</code> provide fixed function ACPI patching. Each “Fix” can do a particular kind of patching that can be used instead of typical patching you might do with MaciASL and static patching. For example, “IRQ Fix” can be accomplished with “FixHPET_0010” “FixIPIC_0040” “FIX_RTC_20000” and “FIX_TMR_40000”. As an other example, “Fix _WAK Arg0 v2” can be accomplished with “FIX_WAK_200000”. You can read the Clover wiki for more information on each patch. Most of the time, there are not many DSDT “Fixes” needed for basic functionality. DSDT “Fixes” are useful for implementing patches that are difficult or impossible to implement with ACPI/DSDT/Patches or additional SSDTs.</p><blockquote><p><code>DSDT/Fixes</code>提供了具有修复功能的<code>ACPI</code>补丁。每一个<code>Fix</code>都可以使用一种特殊的补丁，从而不需要你使用<code>MaciASL</code>和静态补丁。例如，<code>IRQ Fix</code>可以用<code>FixHPET_0010</code>、<code>FixIPIC_0040</code>、<code>FIX_RTC_20000</code>和<code>FIX_TMR_40000</code>来完成。再举一个例子，<code>Fix _WAK Arg0 v2</code>可以用<code>FIX_WAK_200000</code>来完成。对于每个补丁阅读<code>Clover wiki</code>以获得更多信息。大多数情况下，基本功能所需的DSDT<code>Fix</code>并不多。对于用<code>ACPI/DSDT/Patches</code>或附加的<code>SSDT</code>很难实现甚至不可能实现的补丁,利用DSDT<code>Fixes</code>实现非常有用。</p></blockquote><p>DSDT/Patches allows for binary search and replace by Clover. Clover loads the native ACPI files, applies the patches specified in ACPI/Patches using binary search/replace, then injects the patched ACPI. You need to have an understanding of the binary AML format. It is fully documented in the ACPI spec.</p><blockquote><p><code>DSDT/Patches</code>允许通过<code>Clover</code>对二进制进行查找并替换。<code>Clover</code>加载本地的<code>ACPI</code>文件，在<code>ACPI/Patches</code>中使用二进制查找替换以应用指定的补丁，然后注入打过补丁的<code>ACPI</code>。您需要了解二进制<code>AML</code>格式。它在<code>ACPI</code>规范中有完整的文档记录。</p></blockquote><p>ACPI namespace is built by merging the DSDT and SSDTs at load time. By placing additional SSDTs into ACPI/patched, we can essentially add code to this ACPI set. Since many OS X patches involve adding properties to ioreg with a _DSM method, it is often adequate to simply add an SSDT which contains the additional _DSM method instead of patching the native ACPI files. A perfect example you’re already familiar with is the SSDT.aml that is generated by Pike’s ssdtPRgen.sh.</p><blockquote><p>ACPI命名空间在加载时通过合并<code>DSDT</code>和<code>SSDT</code>构建。通过将额外的<code>SSDT</code>放到<code>ACPI/patched</code>,我们可以添加代码到<code>ACPI</code>集。因为许多<code>OS X</code>补丁涉及<code>_DSM</code>方法添加属性到<code>ioreg</code> ,通常是适当的<code>SSDT</code>包含额外的一个<code>_DSM</code>方法而不是对本地<code>ACPI</code>文件打补丁。你已经熟悉的一个很好的例子是<code>Pike</code>的<code>ssdtprgensh.sh</code>脚本生成的<code>SSDT.aml</code>。</p></blockquote><p>In some cases, more than one mechanism must be used to accomplish a single goal. For example, you might use binary patching to disable or rename components in the native ACPI set, and then replace it with additional SSDTs.</p><blockquote><p>在某些情况下，必须使用不止一个机制来完成某一个目标。例如，你可能使用二进制补丁来禁用或重命名本地<code>ACPI</code>集合中的组件，然后用额外的<code>SSDT</code>替换它。</p></blockquote><h3 id="Renaming-ACPI-objects-重命名ACPI对象"><a href="#Renaming-ACPI-objects-重命名ACPI对象" class="headerlink" title="Renaming ACPI objects-重命名ACPI对象"></a>Renaming ACPI objects-重命名<code>ACPI</code>对象</h3><p>Since OS X can depend on specific ACPI object names used by Macs, a common patch is to rename an object in the native ACPI set. For example, most PC laptops use GFX0 for the integrated Intel GPU object (Intel HD Graphics). In OS X, power management for Intel graphics is not enabled unless this device is named IGPU. Using static patching, we apply “Rename IGPU to GFX0” in order to rename this object. The patch must be applied to the DSDT and all SSDTs that reference it.</p><blockquote><p>由于<code>OS X</code>可以依赖于<code>Mac</code>所使用的特定的<code>ACPI</code>对象名称，一个常见的补丁是在本地的ACPI集合中重命名一个对象，例如，大多数<code>PC</code>笔记本使用<code>GFX0</code>作为集成的<code>Intel GPU</code>对象(<code>Intel HD</code>显卡)。在<code>OS X</code>中，除非这个设备被命名为<code>IGPU</code>，否则英特尔图形的电源管理是不能启用的。使用静态补丁，我们应用<code>Rename IGPU to GFX0</code>来重命名这个对象。这个补丁必须应用到<code>DSDT</code>和所有有引用<code>GFX0</code>的<code>SSDT</code>上。</p></blockquote><p>With hotpatch, we can rename GFX0 to IGPU using a simple Clover patch in ACPI/DSDT/Patches. Such patches apply to DSDT and all native SSDTs (DSDT/Patches do not apply to SSDTs that are added via ACPI/patched). The patch for the rename would be:</p><blockquote><p>使用<code>hotpatch</code>，我们可以在<code>ACPI/DSDT/Patches</code>使用一个简单的四叶草补丁将<code>GFX0</code>重命名为<code>IGPU</code>。这些补丁适用于<code>DSDT</code>和所有本地的<code>SSDTs</code>(<code>(DSDT/Patches</code>不能被应用到通过<code>ACPI/patched</code>添加的<code>SSDT</code>)。重命名的补丁是:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comment: Rename GFX0 to IGPU</span><br><span class="line">Find: &lt;4746 5830&gt;</span><br><span class="line">Replace: &lt;4947 5055&gt;</span><br></pre></td></tr></table></figure><p>The hex values in Find and Replaces are the ASCII codes for GFX0 and IGPU, respectively.</p><blockquote><p>查找和替换的十六进制值分别是<code>GFX0</code>和<code>IGPU</code>的<code>ASCII</code>码,分别是：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ echo -n GFX0|xxd</span><br><span class="line">0000000: 4746 5830                                GFX0</span><br><span class="line">$ echo -n IGPU|xxd</span><br><span class="line">0000000: 4947 5055                                IGPU</span><br></pre></td></tr></table></figure><p>There are number of common renames, and most are in the config.plist that are part of my Clover/hoptpatch project:</p><p><a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch" target="_blank" rel="noopener">https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch</a></p><blockquote><p>有许多通用的重命名，而且很多都在<code>config.plist</code>里，这个<code>config.plist</code>是我的<code>Clover/hotpatch</code>项目的一部分:<a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch" target="_blank" rel="noopener">https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch</a></p></blockquote><p>In fact, the hotpatch SSDTs that are part of the same project depend on the renames being implemented.</p><blockquote><p>事实上，这些<code>hotpach</code>的<code>SSDT</code>也是上面那个项目的一部分，并且它们要求这些重命名必须被实现。</p></blockquote><p>Common renames:</p><blockquote><p>通用的重命名：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GFX0 -&gt; IGPU</span><br><span class="line">SAT0 -&gt; SATA</span><br><span class="line">EHC1 -&gt; EH01</span><br><span class="line">EHC2 -&gt; EH02</span><br><span class="line">XHCI -&gt; XHC</span><br><span class="line">HECI -&gt; IMEI</span><br><span class="line">MEI -&gt; IMEI</span><br><span class="line">LPC -&gt; LPCB</span><br><span class="line">HDAS -&gt; HDEF</span><br><span class="line">AZAL -&gt; HDEF</span><br></pre></td></tr></table></figure><p>Note: All ACPI identifiers are 4 characters. Shorter names are padded with underscore. So, for example, XHC is represented in the AML binary as XHC_, EC would be EC__, EC0 would be EC_, MEI would be MEI_, etc.</p><blockquote><p>注意：所有的<code>ACPI</code>标识符都是4个字符。较短的名字用下划线填充。例如，<code>XHC</code>在<code>AML</code>二进制文件中被表示为<code>XHC_</code>，<code>EC</code>是<code>EC__</code>，<code>EC0</code>是<code>EC0_</code>，<code>MEI</code>是<code>MEI_</code>，等等。</p></blockquote><h3 id="Removing-methods-移除方法"><a href="#Removing-methods-移除方法" class="headerlink" title="Removing methods-移除方法"></a>Removing methods-移除方法</h3><p>It is very difficult to remove ACPI objects, (methods, names, devices, etc) using Clover binary patches. Commonly, we must add _DSM methods to inject properties that describe various hardware properties. But added _DSM methods can conflict with existing _DSM methods that may already be in the native ACPI files. With static patching, “Remove _DSM methods” would be used.</p><blockquote><p>使用<code>Clover</code>二进制补丁来移除<code>ACPI</code>对象(方法、名称、设备等等)是非常困难的。通常，我们必须添加<code>_DSM</code>方法来注入各种描述硬件属性的属性。但是，添加<code>_DSM</code>方法可能与本地<code>ACPI</code>文件现有的<code>_DSM</code>方法冲突。这时，就会用到静态补丁<code>Remove _DSM methods</code>。</p></blockquote><p>Since it is difficult to remove the methods, but we don’t want the native methods to conflict with new _DSM methods that are added, the fix is to rename the native methods to something else.</p><blockquote><p>由于很难删除这些方法，但是我们又不希望本地方法与添加的新<code>_DSM</code>方法相冲突，所以就将本地方法重命名为其他名字来修复这个问题。</p></blockquote><p>So… again, we use a simple rename patch:</p><blockquote><p>那么…同样地，我们使用一个简单的重命名补丁:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comment: Rename _DSM to XDSM</span><br><span class="line">Find: &lt;5f44534d&gt;</span><br><span class="line">Replace: &lt;5844534d&gt;</span><br></pre></td></tr></table></figure><p>Sometimes, you might rename an object to effectively disable it so it does not cause problems. For example, my Intel DH67GD DSDT defines an APSS object. If this object is left in the DSDT it interferes with power management (causes panic). I use a rename from APSS -&gt; APXX. Because AppleIntelCPUPowerManagement is looking for APSS, it does not cause a problem once renamed to APXX.</p><blockquote><p>有时，你可能会重命名一个对象，以便有效地禁用它，这样它就不会造成问题。例如，我的<code>Intel DH67GD</code>的 <code>DSDT</code>定义了<code>APSS</code>对象。如果这个对象留在<code>DSDT</code>中，它会干扰电源管理(引起<code>KP</code>)。我使用<code>APSS-&gt;APXX</code>的重命名。因为<code>AppleIntelCPUPowerManagement</code>会查找<code>APSS</code>,只要改名为<code>APXX</code>就不会引起问题。</p></blockquote><h3 id="Redirect-and-Replace-重定向和替换"><a href="#Redirect-and-Replace-重定向和替换" class="headerlink" title="Redirect and Replace-重定向和替换"></a>Redirect and Replace-重定向和替换</h3><p>In some cases, we would like to replace code to change the behavior. For this, we can rename the object and provide an alternate implementation in an SSDT.</p><blockquote><p>在某些情况下，我们希望替换代码来改变某些动作。为此，我们可以重命名这个对象，并在<code>SSDT</code>中提供一个用来替代的对象以达到目的。</p></blockquote><p>A common fix is spoofing the ACPI code in DSDT and SSDTs such that it behaves as if a certain version of Windows is the ACPI host. When static patching, we might use “OS Check Fix (Windows 8)”. When applied, it changes code from:</p><blockquote><p>一个常见的修复是在<code>DSDT</code>和<code>SSDT</code>中仿冒<code>ACPI</code>代码，使其表现得就像是<code>ACPI</code>主机的某个版本的<code>Windows</code>一样。当利用静态补丁时，我们可能会使用<code>OS Check Fix (Windows 8)</code>。当应用这个补丁时，它会将代码从:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If (_OSI(&quot;Windows 2012&quot;))</span><br></pre></td></tr></table></figure><p>To:</p><blockquote><p>改为：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If (LOr(_OSI(&quot;Darwin&quot;),_OSI(&quot;Windows 2012&quot;))</span><br></pre></td></tr></table></figure><p>Since the _OSI implementation in OS X only responds to “Darwin” the code is changed so that this specific _OSI check also accomodates “Darwin”.</p><blockquote><p>由于<code>OS X</code>中<code>_OSI</code>方法的实现只对被修改了代码的<code>Darwin</code>作出响应，所以这个特定的<code>_OSI check</code>补丁也能响应<code>Darwin</code>。</p></blockquote><p>With hotpatching, the opposite approach is taken. Instead of changing the code using _OSI, we change the code so it calls a different method that emulates the _OSI implementation that would be in the Windows ACPI host.</p><blockquote><p>而热补丁则采用相反的方法，我们不使用<code>_OSI</code>修改代码，而是改变代码让它调用一种不同的方法来模拟在<code>Windows ACPI</code>主机上的<code>_OSI</code>实现。</p></blockquote><p>This technique relies on two of the techniques… a patch to change all calls from _OSI to XOSI… and an implementation of XOSI that emulates what Windows would do for a certain Windows version.</p><blockquote><p>这项技术依赖于两种技术，一个补丁来改变从<code>_OSI</code>到<code>XOSI</code>的所有调用。另一个是<code>XOSI</code>的实现，即模拟<code>Windows</code>对某个<code>Windows</code>版本的操作。</p></blockquote><p>First, changing the code to call XOSI instead of _OSI:</p><blockquote><p>首先，改变代码来调用<code>XOSI</code>而不是<code>_OSI</code>:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comment: Change _OSI to XOSI</span><br><span class="line">Find: &lt;5f4f 5349&gt;</span><br><span class="line">Replace: &lt;584f 5349&gt;</span><br></pre></td></tr></table></figure><p>The hex codes above should be no mystery (they are ASCII for _OSI and XOSI, respectively).</p><blockquote><p>上面的十六进制代码没有什么神秘的(它们分别是<code>_OSI</code>和<code>XOSI</code>的<code>ASCII</code>码)。</p></blockquote><p>Now the code mentioned above, after patching by Clover, will read:</p><blockquote><p>现在，上面提到的代码，在通过<code>Clover</code>打了补丁之后，将会读到:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If (XOSI(&quot;Windows 2012&quot;))</span><br></pre></td></tr></table></figure><p>Now we need an SSDT that implements XOSI. You will find such an implementation in the repository (SSDT-XOSI.dsl).</p><blockquote><p>现在我们需要一个实现<code>XOSI</code>的<code>SSDT</code>。你可以我的<code>GitHub</code>仓库中找到这样的实现(SSDT-XOSI.dsl).</p></blockquote><p>Note that without the SSDT that implements the XOSI method, the (patched) calls to XOSI would cause an ACPI abort (ACPI abort causes execution of the ACPI method to be terminated immediately with an error). Don’t use the _OSI-&gt;XOSI patch without the XOSI method.</p><blockquote><p>注意，如果没有实现<code>XOSI</code>方法的<code>SSDT</code>，这个补丁对<code>XOSI</code>的调用将导致<code>ACPI</code>的加载被终止(<code>ACPI</code>中止导致<code>ACPI</code>方法的执行被错误立即终止)。如果没有<code>XOSI</code>方法不要使用<code>_OSI</code>-&gt;<code>XOSI</code>补丁。</p></blockquote><h3 id="Rename-and-Replace-重命名和替换"><a href="#Rename-and-Replace-重命名和替换" class="headerlink" title="Rename and Replace-重命名和替换"></a>Rename and Replace-重命名和替换</h3><p>A second pattern, similar to “Redirect and Replace” is “Rename and Replace”. In this case, instead of changing all the call sites, we change the method definition such that the method is named something different than it was originally, but leave the original method name at the call sites. This allows the method that is the target of the calls to be replaced.</p><p>For example, it is very common for USB devices to cause “instant wake”. As a work around, wake on USB can be disabled. Most laptops don’t have a BIOS option for it, so instead the _PRW methods that control this feature are patched.</p><p>For example, the native _SB.PCI0.EHC1._PRW method might read:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake</span><br><span class="line">&#123;</span><br><span class="line">Return (GPRW (0x6D, 0x03))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In order to patch it so USB devices on EHCI#1 cannot cause wake, it would be changed:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake</span><br><span class="line">&#123;</span><br><span class="line">Return (GPRW (0x6D, 0))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Usually, there are several such call sites to GPRW that need to be changed (also, keep in mind not all ACPI sets use the specific name GPRW). Instead of trying to patch all the call sites as above, we can instead patch the method definition of GPRW instead:</p><p>With the original code:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Method (GPRW, 2, NotSerialized)</span><br><span class="line">&#123;</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>If we change it to:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Method (XPRW, 2, NotSerialized)</span><br><span class="line">&#123;</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Since you don’t want to change any call sites, the patch must be constructed such that it affects only the method itself and not the call sites. According to ACPI spec, a method definition starts with bytecode 14, is followed by the method size, the method name, argument count/flags. You can use the “-l” option in iasl to generate a mixed listing of your ACPI file. For example, the Lenovo u430 GPRW method mixed listing:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4323:          Method (GPRW, 2, NotSerialized)</span><br><span class="line">00003F95:  14 45 08 47 50 52 57 02     &quot;.E.GPRW.&quot;</span><br><span class="line">4324:          &#123;</span><br><span class="line">4325:              Store (Arg0, Index (PRWP, Zero))</span><br><span class="line">00003F9D:  70 68 ..................    &quot;ph&quot;</span><br><span class="line">00003F9F:  88 50 52 57 50 00 00 ...    &quot;.PRWP..&quot;</span><br></pre></td></tr></table></figure><p>We could do a find replace using the method header bytes:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;14 45 08 47 50 52 57 02&gt;</span><br><span class="line">Replace: &lt;14 45 08 58 50 52 57 02&gt;</span><br></pre></td></tr></table></figure><p>But what happens if the method differs slightly between different versions of BIOS or models that are similar, but not exactly the same? In that case, the byte following the 14 will change due to the change in the method length.</p><p>My thought is that the beginning of the method body is less likely to be different than the total length of the method, so it helps to add a few extra bytes from the body of the method to the find/replace specification:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;47 50 52 57 02 70 68&gt;</span><br><span class="line">Replace: &lt;58 50 52 57 02 70 68&gt;</span><br></pre></td></tr></table></figure><p>The number of follow-on bytes that you use depends on how many you need to make the find/replace affect only the method definition. You can verify by looking at the native AML binary in a hex editor such as Hex Fiend (it is a nice hex editor and is also open source).</p><p>Note: Although you could search just for the method name + arg count/flags, it is possible that the same pattern will find a call site to the method which you don’t want to change. In the case of the u430 that wasn’t the case, so I was able to find/replace with just the method name+flags.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;47505257 02&gt;</span><br><span class="line">Replace: &lt;58505257 02&gt;</span><br></pre></td></tr></table></figure><p>In the case of the ProBook UPRW, it was necessary to use the follow-on bytes that are part of the method body:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;55505257 0a7012&gt;</span><br><span class="line">Replace: &lt;58505257 0a7012&gt;</span><br></pre></td></tr></table></figure><p>Now any code that calls GPRW (or UPRW in the ProBook example) will not call the implementation in XPRW because the name doesn’t match. The original XPRW is now unreachable code. Which means the GPRW implementation can be changed for our purpose:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Method(GPRW, 2)</span><br><span class="line">&#123;</span><br><span class="line">If (0x6d == Arg0) &#123; Return(Package() &#123; 0x6d, 0, &#125;) &#125;</span><br><span class="line">    External(\XPRW, MethodObj)</span><br><span class="line">    Return(XPRW(Arg0, Arg1))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Explaining the code: For any call to GPRW with the first argument set to 0x6d (the GPE we are trying to disable for wake), instead of returning what the original GPRW would, we return a package with 0x6d and 0 (which disables wake). And for other GPE values, the code simply calls the original GPRW method now named XPRW.</p><p>Another simple case is patching EC query methods to fix the brightness keys. A simple rename of the _Qxx methods involved to XQxx, and a new definition of the method with the original name is all that is needed.</p><p>For example, in the HP Envy Haswell repo:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// _Q13 called on brightness/mirror display key</span><br><span class="line">Method (_Q13, 0, Serialized)  // _Qxx: EC Query</span><br><span class="line">&#123;</span><br><span class="line">External(\HKNO, FieldUnitObj)</span><br><span class="line">Store(HKNO, Local0)</span><br><span class="line">If (LEqual(Local0,7))</span><br><span class="line">&#123;</span><br><span class="line">// Brightness Down</span><br><span class="line">Notify(\_SB.PCI0.LPCB.PS2K, 0x0405)</span><br><span class="line">&#125;</span><br><span class="line">If (LEqual(Local0,8))</span><br><span class="line">&#123;</span><br><span class="line">// Brightness Up</span><br><span class="line">Notify(\_SB.PCI0.LPCB.PS2K, 0x0406)</span><br><span class="line">&#125;</span><br><span class="line">If (LEqual(Local0,4))</span><br><span class="line">&#123;</span><br><span class="line">// Mirror toggle</span><br><span class="line">Notify(\_SB.PCI0.LPCB.PS2K, 0x046e)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>And the associated patch:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comment: change Method(_Q13,0,S) to XQ13</span><br><span class="line">Find: &lt;5f513133 08&gt;</span><br><span class="line">Replace: &lt;58513133 08&gt;</span><br></pre></td></tr></table></figure><p>This same “Rename and Replace” mechanism can be used in cases that are much more complex than this. For example, it is typically used to patch battery methods, which need to be patched to avoid access to multibyte EC fields.</p><h4 id="Tips-for-complex-Rename-and-Replace"><a href="#Tips-for-complex-Rename-and-Replace" class="headerlink" title="Tips for complex Rename and Replace"></a>Tips for complex Rename and Replace</h4><p>As you probably already know, patching for battery status (multibyte EC fields) can be very complex and can involve a lot of code changes to many methods.</p><p>This section will detail some of the techniques and procedures used for battery patching.</p><p>It is advisable to patch for battery without using hotpatch first. After you get it working, then attempt hotpatch. Also, the difference between the code not patched for battery and the code patched for battery is very helpful. You can use a tool like ‘diffmerge’ to compare each. This is especially true if there is already a static battery patch for your laptop in my laptop repository.</p><p>General procedure:</p><ul><li>start with native ACPI</li><li>patch for battery status using static patching (verify it works)</li><li>use diffmerge to compare the unpatched code with patched code</li><li>for each method that is different, implement the “Rename and Replace” pattern</li><li>for the EC fields, create another EC OperationRegion (use a name that is different from the original) and Field definition as a sort of “overlay” which contains only the EC fields you need to patch</li><li>to create the EC overlay, you can use the patched Field/OperationRegion in the patched DSDT, then eliminate unpatched fields</li><li>use External to allow the replacement methods in the SSDT to access the fields defined elsewhere in the ACPI set (usually DSDT)</li><li>let the compiler point out where you need to use External</li><li>watch out for symbols with duplicate names in different scopes</li></ul><p>An example is provided in post #2 of this thread.</p><h3 id="Code-value-patching"><a href="#Code-value-patching" class="headerlink" title="Code value patching"></a>Code value patching</h3><p>Consider the case of “Fix Mutex with non-zero SyncLevel”. This patch finds all Mutex objects and replaces the SyncLevel with 0. We use this patch since OS X does not support Mutex debugging correctly and aborts on any Acquire with a Mutex that has a non-zero SyncLevel.</p><p>As an example, the u430 has Mutexes delcared as such:</p><pre><code>Mutex (MSMI, 0x07)</code></pre><p>To make it compatible with OS X it must be changed:</p><pre><code>Mutex (MSMI, 0)</code></pre><p>The ACPI spec defines how a Mutex object is encoded in the AML, but it can be helpful to look at a mixed disassembly of a small ACPI file:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock (&quot;&quot;, &quot;DSDT&quot;, 2, &quot;test&quot;, &quot;test&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">    Mutex(ABCD, 7)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The iasl compiler can create a mixed listing file with the “-l” option.</p><p>If we compile the above file with: iasl -l test.dsl, test.lst contains:</p><pre><code>       1:  DefinitionBlock (&quot;&quot;, &quot;DSDT&quot;, 2, &quot;test&quot;, &quot;test&quot;, 0)00000000:  44 53 44 54 2B 00 00 00     &quot;DSDT+...&quot;00000008:  02 36 74 65 73 74 00 00     &quot;.6test..&quot;00000010:  74 65 73 74 00 00 00 00     &quot;test....&quot;00000018:  00 00 00 00 49 4E 54 4C     &quot;....INTL&quot;00000020:  10 04 16 20 ............    &quot;... &quot;       2:  {       3:          Mutex(ABCD, 7)00000024:  5B 01 41 42 43 44 07 ...    &quot;[.ABCD.&quot;       4:  }   </code></pre><p>As you can see, the <code>Mutex(ABCD, 7)</code>, is encoded as <code>&lt;5B 01 41 42 43 44 07&gt;</code></p><p>It is now very easy to construct a patch for it:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comment: Change Mutex(ABCD,7) to Mutex(ABCD,0)</span><br><span class="line">Find: &lt;5B 01 41 42 43 44 07&gt;</span><br><span class="line">Replace: &lt;5B 01 41 42 43 44 00&gt;</span><br></pre></td></tr></table></figure><h3 id="Clover-ACPI-configuration"><a href="#Clover-ACPI-configuration" class="headerlink" title="Clover ACPI configuration"></a>Clover ACPI configuration</h3><p>With static patching, DropOem=true is used and patched DSDT and SSDTs are added to ACPI/patched. With hotpatch, instead use DropOem=false, and only add-on SSDTs are placed in ACPI/patched.</p><p>It is important to note that config.plist/ACPI/patches are applied only to native SSDTs, and not the SSDTs in ACPI/patched. This means that if you are renaming objects using config.plist, the add-on SSDTs must refer to the new names, not the old names. Unlike SSDTs in ACPI/patched, binary patches in ACPI/Patches <em>do apply</em> to DSDT.aml that might be in ACPI/patched. Keep this in mind if you’re using a combination of static and hotpatching.</p><p>Also, with static patching, SortedOrder is used to specify the order of SSDTs in ACPI/patched. With hotpatch it is not strictly necessary as it is possible to construct the code in each SSDT such that the code is not order dependent. Especially if you place all add-on code in a single SSDT such as many of my laptop repo examples. Unless your add-on SSDTs are order dependent, you do not have to name each one in SortedOrder.</p><p>It is also not necessary to choose “numbered names” for each SSDT. Instead you can use meaningful names, such as “SSDT-USB.aml”, SSDT-XOSI.aml”, etc. Using numbers instead of meaningul names will just confuse you. Don’t do it.</p><h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><p>You can use patchmatic to look at your complete ACPI set as injected by Clover after patching. By runnning ‘patchmatic -extract’, patchmatic will write all injected DSDT.aml and SSDT<em>.aml in the order they were injected by Clover. You can disassemble them with ‘iasl -da -dl </em>.aml’. If iasl shows errors with the disassembly (for example duplicate symbols), it is likley OS X is also rejecting the conflicting SSDTs.</p><p>If you’re a novice with this technique, it is a good idea to implement one patch at a time, and slowly build it up to a full set of working patches + SSDTs. Trying to do all at once can make it difficult to locate your mistake.</p><h2 id="Battery-Status-Hotpatch"><a href="#Battery-Status-Hotpatch" class="headerlink" title="Battery Status Hotpatch"></a>Battery Status Hotpatch</h2><p>This second post is dedicated to patching battery status with Clover hotpatch. To demonstrate the process, we will work through an example DSDT. The example files used are from the guide for disabling discrete graphics, an “Asus UX303LN”.</p><p><a href="https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/</a></p><p>You should download the ACPI/origin files that are attached to that guide, so you can follow along.</p><p>As mentioned in post #1, the general procedures are as follows:</p><ul><li>start with native ACPI</li><li>patch for battery status using static patching (verify it works)</li><li>use diffmerge to compare the unpatched code with patched code</li><li>for each method that is different, implement the “Rename and Replace” pattern</li><li>for the EC fields, create another EC OperationRegion (use a name that is different from the original) and Field definition as a sort of “overlay” which contains only the EC fields you need to patch</li><li>to create the EC overlay, you can use the patched Field/OperationRegion in the patched DSDT, then eliminate unpatched fields</li><li>use External to allow the replacement methods in the SSDT to access the fields defined elsewhere in the ACPI set (usually DSDT)</li><li>let the compiler point out where you need to use External</li><li>watch out for symbols with duplicate names in different scopes</li></ul><h3 id="Using-diffmerge-to-find-patched-vs-native-differences"><a href="#Using-diffmerge-to-find-patched-vs-native-differences" class="headerlink" title="Using diffmerge to find patched vs. native differences"></a>Using diffmerge to find patched vs. native differences</h3><p>Start by disassembling the origin files: iasl -da -dl *.aml<br>(you should be familiar with this part as it is part of normal ACPI patching)</p><p>Next apply the battery patch only using MaciASL to DSDT.dsl. In this case, we apply the “ASUS N55SL/VivoBook”. There is no need to fix any errors, as we are interested only in the differences created by applying the battery patch. Save the patched file as DSDT_patched.dsl.</p><p>Now you can run diffmerge to see the differences between DSDT.dsl and DSDT_patched.dsl. I usually just do this from Terminal:</p><p><code>$ diffmerge DSDT.dsl DSDT_patched.dsl</code></p><p>The initial diffmerge window will look something like this:<br><img src="http://ovefvi4g3.bkt.clouddn.com/batthot_diffmerge_initial.png" alt="batthot_diffmerge_initial"></p><p>From there, we can examine the parts that have changes by clicking on the markers in the left column.</p><p>In the examples, the groups of changes you find:</p><ul><li>group 1: is the changes to the EC fields (multibyte to single byte)</li><li>group 2: addition of RDBA, WRBA, RDBB, WRBB methods</li><li>group 3: patched FBST, _BIX, B1FA methods</li><li>group 4: patched SMBR, SMBW, ECSB methods</li><li>group 5: patched TACH method</li><li>final group: addition of B1B2 method</li></ul><h3 id="Constructing-the-initial-SSDT"><a href="#Constructing-the-initial-SSDT" class="headerlink" title="Constructing the initial SSDT"></a>Constructing the initial SSDT</h3><p>Start with an empty SSDT in MaciASL:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Next, add all methods that were added by the patch. In the example, this includes RDBA, WRBA, RDBB, WRBB and B1B2 methods. You can copy them directly from the DSDT_patched.dsl.</p><p>You want to be certain each method is placed in the same scope. For example, here is the “group 2” methods added:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    Scope (_SB.PCI0.LPCB.EC0)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }}</code></pre><p>And with B1B2 added:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }    // added methods (group 2)    Scope (_SB.PCI0.LPCB.EC0)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }}</code></pre><p>Don’t worry that the code does not compile at the moment. It is not expected at this point, due to the EC fields (and other identifiers) that are not defined in this file. They will need to be definined or referenced via External (eventually).</p><p>Now let’s add the patched methods. Just like the methods that were added methods, the patched methods are just copied from the DSDT_patched.dsl:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    // patched methods    Scope (_SB.PCI0)    {        Scope (BAT0)        {            Method (FBST, 4, NotSerialized)            {                And (Arg1, 0xFFFF, Local1)                Store (Zero, Local0)                If (^^LPCB.EC0.ACAP ())                {                    Store (One, Local0)                }                If (Local0)                {                    If (CHGS (Zero)){    Store (0x02, Local0)}Else{    Store (Zero, Local0)}                }                Else                {                    Store (One, Local0)                }                If (BLLO)                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (And (^^LPCB.EC0.EB0S, 0x08))                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (LGreaterEqual (Local1, 0x8000))                {                    Subtract (0xFFFF, Local1, Local1)                }                Store (Arg2, Local2)                If (LEqual (PUNT, Zero))                {                    Multiply (Local1, ^^LPCB.EC0.B0DV, Local1)                    Multiply (Local2, 0x0A, Local2)                }                And (Local0, 0x02, Local3)                If (LNot (Local3))                {                    Subtract (LFCC, Local2, Local3)                    Divide (LFCC, 0xC8, Local4, Local5)                    If (LLess (Local3, Local5))                    {                        Store (LFCC, Local2)                    }                }                Else                {                    Divide (LFCC, 0xC8, Local4, Local5)                    Subtract (LFCC, Local5, Local4)                    If (LGreater (Local2, Local4))                    {                        Store (Local4, Local2)                    }                }                If (LNot (^^LPCB.EC0.ACAP ()))                {                    Divide (Local2, MBLF, Local3, Local4)                    If (LLess (Local1, Local4))                    {                        Store (Local4, Local1)                    }                }                Store (Local0, Index (PBST, Zero))                Store (Local1, Index (PBST, One))                Store (Local2, Index (PBST, 0x02))                Store (Arg3, Index (PBST, 0x03))            }            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended            {                If (LNot (^^LPCB.EC0.BATP (Zero)))                {                    Return (NBIX)                }                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))                {                    Return (NBIX)                }                _BIF ()                Store (DerefOf (Index (PBIF, Zero)), Index (BIXT, One))                Store (DerefOf (Index (PBIF, One)), Index (BIXT, 0x02))                Store (DerefOf (Index (PBIF, 0x02)), Index (BIXT, 0x03))                Store (DerefOf (Index (PBIF, 0x03)), Index (BIXT, 0x04))                Store (DerefOf (Index (PBIF, 0x04)), Index (BIXT, 0x05))                Store (DerefOf (Index (PBIF, 0x05)), Index (BIXT, 0x06))                Store (DerefOf (Index (PBIF, 0x06)), Index (BIXT, 0x07))                Store (DerefOf (Index (PBIF, 0x07)), Index (BIXT, 0x0E))                Store (DerefOf (Index (PBIF, 0x08)), Index (BIXT, 0x0F))                Store (DerefOf (Index (PBIF, 0x09)), Index (BIXT, 0x10))                Store (DerefOf (Index (PBIF, 0x0A)), Index (BIXT, 0x11))                Store (DerefOf (Index (PBIF, 0x0B)), Index (BIXT, 0x12))                Store (DerefOf (Index (PBIF, 0x0C)), Index (BIXT, 0x13))                If (LEqual (DerefOf (Index (BIXT, One)), One))                {                    Store (Zero, Index (BIXT, One))                    Store (DerefOf (Index (BIXT, 0x05)), Local0)                    Multiply (DerefOf (Index (BIXT, 0x02)), Local0, Index (BIXT, 0x02))                    Multiply (DerefOf (Index (BIXT, 0x03)), Local0, Index (BIXT, 0x03))                    Multiply (DerefOf (Index (BIXT, 0x06)), Local0, Index (BIXT, 0x06))                    Multiply (DerefOf (Index (BIXT, 0x07)), Local0, Index (BIXT, 0x07))                    Multiply (DerefOf (Index (BIXT, 0x0E)), Local0, Index (BIXT, 0x0E))                    Multiply (DerefOf (Index (BIXT, 0x0F)), Local0, Index (BIXT, 0x0F))                    Divide (DerefOf (Index (BIXT, 0x02)), 0x03E8, Local0, Index (BIXT, 0x02))                    Divide (DerefOf (Index (BIXT, 0x03)), 0x03E8, Local0, Index (BIXT, 0x03))                    Divide (DerefOf (Index (BIXT, 0x06)), 0x03E8, Local0, Index (BIXT, 0x06))                    Divide (DerefOf (Index (BIXT, 0x07)), 0x03E8, Local0, Index (BIXT, 0x07))                    Divide (DerefOf (Index (BIXT, 0x0E)), 0x03E8, Local0, Index (BIXT, 0x0E))                    Divide (DerefOf (Index (BIXT, 0x0F)), 0x03E8, Local0, Index (BIXT, 0x0F))                }                Store (B1B2(^^LPCB.EC0.XC30,^^LPCB.EC0.XC31), Index (BIXT, 0x08))                Store (0x0001869F, Index (BIXT, 0x09))                Return (BIXT)            }    }    }    Scope (_SB.PCI0.LPCB.EC0)    {        Method (BIFA, 0, NotSerialized)        {            If (ECAV ())            {                If (BSLF)                {                    Store (B1B2(B1S0,B1S1), Local0)                }                Else                {                    Store (B1B2(B0S0,B0S1), Local0)                }            }            Else            {                Store (Ones, Local0)            }            Return (Local0)        }    }    Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }    // added methods (group 2)    Scope (_SB.PCI0.LPCB.EC0)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }            }</code></pre><p>Notice how FBST and _BIX were added to scope _SB.PCI0.BAT0, but BIFA was added to _SB.PCI0.LPCB.EC0. It is important to inject all methods into their original scope.</p><p>Now, we add SMBR, SMBW, ECSB, and TACH:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">// patched methods</span><br><span class="line">    Scope (_SB.PCI0)</span><br><span class="line">    &#123;</span><br><span class="line">        Scope (BAT0)</span><br><span class="line">        &#123;</span><br><span class="line">            Method (FBST, 4, NotSerialized)</span><br><span class="line">            &#123;</span><br><span class="line">                And (Arg1, 0xFFFF, Local1)</span><br><span class="line">                Store (Zero, Local0)</span><br><span class="line">                If (^^LPCB.EC0.ACAP ())</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (One, Local0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (Local0)</span><br><span class="line">                &#123;</span><br><span class="line">                    If (CHGS (Zero))</span><br><span class="line">&#123;</span><br><span class="line">Store (0x02, Local0)</span><br><span class="line">&#125;</span><br><span class="line">Else</span><br><span class="line">&#123;</span><br><span class="line">Store (Zero, Local0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (One, Local0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (BLLO)</span><br><span class="line">                &#123;</span><br><span class="line">                    ShiftLeft (One, 0x02, Local2)</span><br><span class="line">                    Or (Local0, Local2, Local0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (And (^^LPCB.EC0.EB0S, 0x08))</span><br><span class="line">                &#123;</span><br><span class="line">                    ShiftLeft (One, 0x02, Local2)</span><br><span class="line">                    Or (Local0, Local2, Local0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LGreaterEqual (Local1, 0x8000))</span><br><span class="line">                &#123;</span><br><span class="line">                    Subtract (0xFFFF, Local1, Local1)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Store (Arg2, Local2)</span><br><span class="line">                If (LEqual (PUNT, Zero))</span><br><span class="line">                &#123;</span><br><span class="line">                    Multiply (Local1, ^^LPCB.EC0.B0DV, Local1)</span><br><span class="line">                    Multiply (Local2, 0x0A, Local2)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                And (Local0, 0x02, Local3)</span><br><span class="line">                If (LNot (Local3))</span><br><span class="line">                &#123;</span><br><span class="line">                    Subtract (LFCC, Local2, Local3)</span><br><span class="line">                    Divide (LFCC, 0xC8, Local4, Local5)</span><br><span class="line">                    If (LLess (Local3, Local5))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (LFCC, Local2)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Divide (LFCC, 0xC8, Local4, Local5)</span><br><span class="line">                    Subtract (LFCC, Local5, Local4)</span><br><span class="line">                    If (LGreater (Local2, Local4))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Local4, Local2)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LNot (^^LPCB.EC0.ACAP ()))</span><br><span class="line">                &#123;</span><br><span class="line">                    Divide (Local2, MBLF, Local3, Local4)</span><br><span class="line">                    If (LLess (Local1, Local4))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Local4, Local1)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Store (Local0, Index (PBST, Zero))</span><br><span class="line">                Store (Local1, Index (PBST, One))</span><br><span class="line">                Store (Local2, Index (PBST, 0x02))</span><br><span class="line">                Store (Arg3, Index (PBST, 0x03))</span><br><span class="line">            &#125;</span><br><span class="line">            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended</span><br><span class="line">            &#123;</span><br><span class="line">                If (LNot (^^LPCB.EC0.BATP (Zero)))</span><br><span class="line">                &#123;</span><br><span class="line">                    Return (NBIX)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))</span><br><span class="line">                &#123;</span><br><span class="line">                    Return (NBIX)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                _BIF ()</span><br><span class="line">                Store (DerefOf (Index (PBIF, Zero)), Index (BIXT, One))</span><br><span class="line">                Store (DerefOf (Index (PBIF, One)), Index (BIXT, 0x02))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x02)), Index (BIXT, 0x03))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x03)), Index (BIXT, 0x04))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x04)), Index (BIXT, 0x05))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x05)), Index (BIXT, 0x06))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x06)), Index (BIXT, 0x07))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x07)), Index (BIXT, 0x0E))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x08)), Index (BIXT, 0x0F))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x09)), Index (BIXT, 0x10))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x0A)), Index (BIXT, 0x11))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x0B)), Index (BIXT, 0x12))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x0C)), Index (BIXT, 0x13))</span><br><span class="line">                If (LEqual (DerefOf (Index (BIXT, One)), One))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (Zero, Index (BIXT, One))</span><br><span class="line">                    Store (DerefOf (Index (BIXT, 0x05)), Local0)</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x02)), Local0, Index (BIXT, 0x02))</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x03)), Local0, Index (BIXT, 0x03))</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x06)), Local0, Index (BIXT, 0x06))</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x07)), Local0, Index (BIXT, 0x07))</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x0E)), Local0, Index (BIXT, 0x0E))</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x0F)), Local0, Index (BIXT, 0x0F))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x02)), 0x03E8, Local0, Index (BIXT, 0x02))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x03)), 0x03E8, Local0, Index (BIXT, 0x03))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x06)), 0x03E8, Local0, Index (BIXT, 0x06))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x07)), 0x03E8, Local0, Index (BIXT, 0x07))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x0E)), 0x03E8, Local0, Index (BIXT, 0x0E))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x0F)), 0x03E8, Local0, Index (BIXT, 0x0F))</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Store (B1B2(^^LPCB.EC0.XC30,^^LPCB.EC0.XC31), Index (BIXT, 0x08))</span><br><span class="line">                Store (0x0001869F, Index (BIXT, 0x09))</span><br><span class="line">                Return (BIXT)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Scope (_SB.PCI0.LPCB.EC0)</span><br><span class="line">    &#123;</span><br><span class="line">        Method (BIFA, 0, NotSerialized)</span><br><span class="line">        &#123;</span><br><span class="line">            If (ECAV ())</span><br><span class="line">            &#123;</span><br><span class="line">                If (BSLF)</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (B1B2(B1S0,B1S1), Local0)</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (B1B2(B0S0,B0S1), Local0)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Else</span><br><span class="line">            &#123;</span><br><span class="line">                Store (Ones, Local0)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Return (Local0)</span><br><span class="line">        &#125;</span><br><span class="line">        Method (SMBR, 3, Serialized)</span><br><span class="line">        &#123;</span><br><span class="line">            Store (Package (0x03)</span><br><span class="line">                &#123;</span><br><span class="line">                    0x07,</span><br><span class="line">                    Zero,</span><br><span class="line">                    Zero</span><br><span class="line">                &#125;, Local0)</span><br><span class="line">            If (LNot (ECAV ()))</span><br><span class="line">            &#123;</span><br><span class="line">                Return (Local0)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            If (LNotEqual (Arg0, RDBL))</span><br><span class="line">            &#123;</span><br><span class="line">                If (LNotEqual (Arg0, RDWD))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LNotEqual (Arg0, RDBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        If (LNotEqual (Arg0, RCBT))</span><br><span class="line">                        &#123;</span><br><span class="line">                            If (LNotEqual (Arg0, RDQK))</span><br><span class="line">                            &#123;</span><br><span class="line">                                Return (Local0)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Acquire (MUEC, 0xFFFF)</span><br><span class="line">            Store (PRTC, Local1)</span><br><span class="line">            Store (Zero, Local2)</span><br><span class="line">            While (LNotEqual (Local1, Zero))</span><br><span class="line">            &#123;</span><br><span class="line">                Stall (0x0A)</span><br><span class="line">                Increment (Local2)</span><br><span class="line">                If (LGreater (Local2, 0x03E8))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (SBBY, Index (Local0, Zero))</span><br><span class="line">                    Store (Zero, Local1)</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (PRTC, Local1)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            If (LLessEqual (Local2, 0x03E8))</span><br><span class="line">            &#123;</span><br><span class="line">                ShiftLeft (Arg1, One, Local3)</span><br><span class="line">                Or (Local3, One, Local3)</span><br><span class="line">                Store (Local3, ADDR)</span><br><span class="line">                If (LNotEqual (Arg0, RDQK))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LNotEqual (Arg0, RCBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Arg2, CMDB)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                WRBA(Zero)</span><br><span class="line">                Store (Arg0, PRTC)</span><br><span class="line">                Store (SWTC (Arg0), Index (Local0, Zero))</span><br><span class="line">                If (LEqual (DerefOf (Index (Local0, Zero)), Zero))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LEqual (Arg0, RDBL))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (BCNT, Index (Local0, One))</span><br><span class="line">                        Store (RDBA(), Index (Local0, 0x02))</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    If (LEqual (Arg0, RDWD))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (0x02, Index (Local0, One))</span><br><span class="line">                        Store (B1B2(T2B0,T2B1), Index (Local0, 0x02))</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    If (LEqual (Arg0, RDBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (One, Index (Local0, One))</span><br><span class="line">                        Store (DAT0, Index (Local0, 0x02))</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    If (LEqual (Arg0, RCBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (One, Index (Local0, One))</span><br><span class="line">                        Store (DAT0, Index (Local0, 0x02))</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Release (MUEC)</span><br><span class="line">            Return (Local0)</span><br><span class="line">        &#125;</span><br><span class="line">        Method (SMBW, 5, Serialized)</span><br><span class="line">        &#123;</span><br><span class="line">            Store (Package (0x01)</span><br><span class="line">                &#123;</span><br><span class="line">                    0x07</span><br><span class="line">                &#125;, Local0)</span><br><span class="line">            If (LNot (ECAV ()))</span><br><span class="line">            &#123;</span><br><span class="line">                Return (Local0)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            If (LNotEqual (Arg0, WRBL))</span><br><span class="line">            &#123;</span><br><span class="line">                If (LNotEqual (Arg0, WRWD))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LNotEqual (Arg0, WRBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        If (LNotEqual (Arg0, SDBT))</span><br><span class="line">                        &#123;</span><br><span class="line">                            If (LNotEqual (Arg0, WRQK))</span><br><span class="line">                            &#123;</span><br><span class="line">                                Return (Local0)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Acquire (MUEC, 0xFFFF)</span><br><span class="line">            Store (PRTC, Local1)</span><br><span class="line">            Store (Zero, Local2)</span><br><span class="line">            While (LNotEqual (Local1, Zero))</span><br><span class="line">            &#123;</span><br><span class="line">                Stall (0x0A)</span><br><span class="line">                Increment (Local2)</span><br><span class="line">                If (LGreater (Local2, 0x03E8))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (SBBY, Index (Local0, Zero))</span><br><span class="line">                    Store (Zero, Local1)</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (PRTC, Local1)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            If (LLessEqual (Local2, 0x03E8))</span><br><span class="line">            &#123;</span><br><span class="line">                WRBA(Zero)</span><br><span class="line">                ShiftLeft (Arg1, One, Local3)</span><br><span class="line">                Store (Local3, ADDR)</span><br><span class="line">                If (LNotEqual (Arg0, WRQK))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LNotEqual (Arg0, SDBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Arg2, CMDB)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LEqual (Arg0, WRBL))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (Arg3, BCNT)</span><br><span class="line">                    WRBA(Arg4)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LEqual (Arg0, WRWD))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store(Arg4,T2B0) Store(ShiftRight(Arg4,8),T2B1)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LEqual (Arg0, WRBT))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (Arg4, DAT0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LEqual (Arg0, SDBT))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (Arg4, DAT0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Store (Arg0, PRTC)</span><br><span class="line">                Store (SWTC (Arg0), Index (Local0, Zero))</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Release (MUEC)</span><br><span class="line">            Return (Local0)</span><br><span class="line">        &#125;</span><br><span class="line">        Method (ECSB, 7, NotSerialized)</span><br><span class="line">        &#123;</span><br><span class="line">            Store (Package (0x05)</span><br><span class="line">                &#123;</span><br><span class="line">                    0x11,</span><br><span class="line">                    Zero,</span><br><span class="line">                    Zero,</span><br><span class="line">                    Zero,</span><br><span class="line">                    Buffer (0x20)&#123;&#125;</span><br><span class="line">                &#125;, Local1)</span><br><span class="line">            If (LGreater (Arg0, One))</span><br><span class="line">            &#123;</span><br><span class="line">                Return (Local1)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            If (ECAV ())</span><br><span class="line">            &#123;</span><br><span class="line">                Acquire (MUEC, 0xFFFF)</span><br><span class="line">                If (LEqual (Arg0, Zero))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (PRTC, Local0)</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (PRT2, Local0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Store (Zero, Local2)</span><br><span class="line">                While (LNotEqual (Local0, Zero))</span><br><span class="line">                &#123;</span><br><span class="line">                    Stall (0x0A)</span><br><span class="line">                    Increment (Local2)</span><br><span class="line">                    If (LGreater (Local2, 0x03E8))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (SBBY, Index (Local1, Zero))</span><br><span class="line">                        Store (Zero, Local0)</span><br><span class="line">                    &#125;</span><br><span class="line">                    ElseIf (LEqual (Arg0, Zero))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (PRTC, Local0)</span><br><span class="line">                    &#125;</span><br><span class="line">                    Else</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (PRT2, Local0)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LLessEqual (Local2, 0x03E8))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LEqual (Arg0, Zero))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Arg2, ADDR)</span><br><span class="line">                        Store (Arg3, CMDB)</span><br><span class="line">                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (DerefOf (Index (Arg6, Zero)), BCNT)</span><br><span class="line">                            WRBA(DerefOf (Index (Arg6, One)))</span><br><span class="line">                        &#125;</span><br><span class="line">                        Else</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (Arg4, DAT0)</span><br><span class="line">                            Store (Arg5, DAT1)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        Store (Arg1, PRTC)</span><br><span class="line">                    &#125;</span><br><span class="line">                    Else</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Arg2, ADD2)</span><br><span class="line">                        Store (Arg3, CMD2)</span><br><span class="line">                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (DerefOf (Index (Arg6, Zero)), BCN2)</span><br><span class="line">                            WRBB(DerefOf (Index (Arg6, One)))</span><br><span class="line">                        &#125;</span><br><span class="line">                        Else</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (Arg4, DA20)</span><br><span class="line">                            Store (Arg5, DA21)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        Store (Arg1, PRT2)</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    Store (0x7F, Local0)</span><br><span class="line">                    If (LEqual (Arg0, Zero))</span><br><span class="line">                    &#123;</span><br><span class="line">                        While (PRTC)</span><br><span class="line">                        &#123;</span><br><span class="line">                            Sleep (One)</span><br><span class="line">                            Decrement (Local0)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    Else</span><br><span class="line">                    &#123;</span><br><span class="line">                        While (PRT2)</span><br><span class="line">                        &#123;</span><br><span class="line">                            Sleep (One)</span><br><span class="line">                            Decrement (Local0)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    If (Local0)</span><br><span class="line">                    &#123;</span><br><span class="line">                        If (LEqual (Arg0, Zero))</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (SSTS, Local0)</span><br><span class="line">                            Store (DAT0, Index (Local1, One))</span><br><span class="line">                            Store (DAT1, Index (Local1, 0x02))</span><br><span class="line">                            Store (BCNT, Index (Local1, 0x03))</span><br><span class="line">                            Store (RDBA(), Index (Local1, 0x04))</span><br><span class="line">                        &#125;</span><br><span class="line">                        Else</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (SST2, Local0)</span><br><span class="line">                            Store (DA20, Index (Local1, One))</span><br><span class="line">                            Store (DA21, Index (Local1, 0x02))</span><br><span class="line">                            Store (BCN2, Index (Local1, 0x03))</span><br><span class="line">                            Store (RDBB(), Index (Local1, 0x04))</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        And (Local0, 0x1F, Local0)</span><br><span class="line">                        If (Local0)</span><br><span class="line">                        &#123;</span><br><span class="line">                            Add (Local0, 0x10, Local0)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        Store (Local0, Index (Local1, Zero))</span><br><span class="line">                    &#125;</span><br><span class="line">                    Else</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (0x10, Index (Local1, Zero))</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Release (MUEC)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Return (Local1)</span><br><span class="line">        &#125;</span><br><span class="line">        Method (TACH, 1, Serialized)</span><br><span class="line">        &#123;</span><br><span class="line">            If (ECAV ())</span><br><span class="line">            &#123;</span><br><span class="line">                Switch (Arg0)</span><br><span class="line">                &#123;</span><br><span class="line">                    Case (Zero)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (B1B2(TH00,TH01), Local0)</span><br><span class="line">                        Break</span><br><span class="line">                    &#125;</span><br><span class="line">                    Case (One)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (B1B2(TH10,TH11), Local0)</span><br><span class="line">                        Break</span><br><span class="line">                    &#125;</span><br><span class="line">                    Default</span><br><span class="line">                    &#123;</span><br><span class="line">                        Return (Ones)</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Multiply (Local0, 0x02, Local0)</span><br><span class="line">                If (LNotEqual (Local0, Zero))</span><br><span class="line">                &#123;</span><br><span class="line">                    Divide (0x0041CDB4, Local0, Local1, Local0)</span><br><span class="line">                    Return (Local0)</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Return (Ones)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Else</span><br><span class="line">            &#123;</span><br><span class="line">                Return (Ones)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Method (B1B2, 2, NotSerialized) &#123; Return (Or (Arg0, ShiftLeft (Arg1, 8))) &#125;</span><br><span class="line"></span><br><span class="line">    // added methods (group 2)</span><br><span class="line">    Scope (_SB.PCI0.LPCB)</span><br><span class="line">    &#123;</span><br><span class="line">        Scope (EC0)</span><br><span class="line">        &#123;</span><br><span class="line">            Method (RDBA, 0, Serialized)</span><br><span class="line">            &#123;</span><br><span class="line">                Name (TEMP, Buffer(0x20) &#123; &#125;)</span><br><span class="line">                Store (BA00, Index(TEMP, 0x00))</span><br><span class="line">                Store (BA01, Index(TEMP, 0x01))</span><br><span class="line">                Store (BA02, Index(TEMP, 0x02))</span><br><span class="line">                Store (BA03, Index(TEMP, 0x03))</span><br><span class="line">                Store (BA04, Index(TEMP, 0x04))</span><br><span class="line">                Store (BA05, Index(TEMP, 0x05))</span><br><span class="line">                Store (BA06, Index(TEMP, 0x06))</span><br><span class="line">                Store (BA07, Index(TEMP, 0x07))</span><br><span class="line">                Store (BA08, Index(TEMP, 0x08))</span><br><span class="line">                Store (BA09, Index(TEMP, 0x09))</span><br><span class="line">                Store (BA0A, Index(TEMP, 0x0A))</span><br><span class="line">                Store (BA0B, Index(TEMP, 0x0B))</span><br><span class="line">                Store (BA0C, Index(TEMP, 0x0C))</span><br><span class="line">                Store (BA0D, Index(TEMP, 0x0D))</span><br><span class="line">                Store (BA0E, Index(TEMP, 0x0E))</span><br><span class="line">                Store (BA0F, Index(TEMP, 0x0F))</span><br><span class="line">                Store (BA10, Index(TEMP, 0x10))</span><br><span class="line">                Store (BA11, Index(TEMP, 0x11))</span><br><span class="line">                Store (BA12, Index(TEMP, 0x12))</span><br><span class="line">                Store (BA13, Index(TEMP, 0x13))</span><br><span class="line">                Store (BA14, Index(TEMP, 0x14))</span><br><span class="line">                Store (BA15, Index(TEMP, 0x15))</span><br><span class="line">                Store (BA16, Index(TEMP, 0x16))</span><br><span class="line">                Store (BA17, Index(TEMP, 0x17))</span><br><span class="line">                Store (BA18, Index(TEMP, 0x18))</span><br><span class="line">                Store (BA19, Index(TEMP, 0x19))</span><br><span class="line">                Store (BA1A, Index(TEMP, 0x1A))</span><br><span class="line">                Store (BA1B, Index(TEMP, 0x1B))</span><br><span class="line">                Store (BA1C, Index(TEMP, 0x1C))</span><br><span class="line">                Store (BA1D, Index(TEMP, 0x1D))</span><br><span class="line">                Store (BA1E, Index(TEMP, 0x1E))</span><br><span class="line">                Store (BA1F, Index(TEMP, 0x1F))</span><br><span class="line">                Return (TEMP)</span><br><span class="line">            &#125;</span><br><span class="line">            Method (WRBA, 1, Serialized)</span><br><span class="line">            &#123;</span><br><span class="line">                Name (TEMP, Buffer(0x20) &#123; &#125;)</span><br><span class="line">                Store (Arg0, TEMP)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x00)), BA00)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x01)), BA01)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x02)), BA02)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x03)), BA03)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x04)), BA04)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x05)), BA05)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x06)), BA06)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x07)), BA07)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x08)), BA08)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x09)), BA09)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x10)), BA10)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x11)), BA11)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x12)), BA12)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x13)), BA13)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x14)), BA14)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x15)), BA15)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x16)), BA16)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x17)), BA17)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x18)), BA18)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x19)), BA19)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)</span><br><span class="line">            &#125;</span><br><span class="line">            Method (RDBB, 0, Serialized)</span><br><span class="line">            &#123;</span><br><span class="line">                Name (TEMP, Buffer(0x20) &#123; &#125;)</span><br><span class="line">                Store (BB00, Index(TEMP, 0x00))</span><br><span class="line">                Store (BB01, Index(TEMP, 0x01))</span><br><span class="line">                Store (BB02, Index(TEMP, 0x02))</span><br><span class="line">                Store (BB03, Index(TEMP, 0x03))</span><br><span class="line">                Store (BB04, Index(TEMP, 0x04))</span><br><span class="line">                Store (BB05, Index(TEMP, 0x05))</span><br><span class="line">                Store (BB06, Index(TEMP, 0x06))</span><br><span class="line">                Store (BB07, Index(TEMP, 0x07))</span><br><span class="line">                Store (BB08, Index(TEMP, 0x08))</span><br><span class="line">                Store (BB09, Index(TEMP, 0x09))</span><br><span class="line">                Store (BB0A, Index(TEMP, 0x0A))</span><br><span class="line">                Store (BB0B, Index(TEMP, 0x0B))</span><br><span class="line">                Store (BB0C, Index(TEMP, 0x0C))</span><br><span class="line">                Store (BB0D, Index(TEMP, 0x0D))</span><br><span class="line">                Store (BB0E, Index(TEMP, 0x0E))</span><br><span class="line">                Store (BB0F, Index(TEMP, 0x0F))</span><br><span class="line">                Store (BB10, Index(TEMP, 0x10))</span><br><span class="line">                Store (BB11, Index(TEMP, 0x11))</span><br><span class="line">                Store (BB12, Index(TEMP, 0x12))</span><br><span class="line">                Store (BB13, Index(TEMP, 0x13))</span><br><span class="line">                Store (BB14, Index(TEMP, 0x14))</span><br><span class="line">                Store (BB15, Index(TEMP, 0x15))</span><br><span class="line">                Store (BB16, Index(TEMP, 0x16))</span><br><span class="line">                Store (BB17, Index(TEMP, 0x17))</span><br><span class="line">                Store (BB18, Index(TEMP, 0x18))</span><br><span class="line">                Store (BB19, Index(TEMP, 0x19))</span><br><span class="line">                Store (BB1A, Index(TEMP, 0x1A))</span><br><span class="line">                Store (BB1B, Index(TEMP, 0x1B))</span><br><span class="line">                Store (BB1C, Index(TEMP, 0x1C))</span><br><span class="line">                Store (BB1D, Index(TEMP, 0x1D))</span><br><span class="line">                Store (BB1E, Index(TEMP, 0x1E))</span><br><span class="line">                Store (BB1F, Index(TEMP, 0x1F))</span><br><span class="line">                Return (TEMP)</span><br><span class="line">            &#125;</span><br><span class="line">            Method (WRBB, 1, Serialized)</span><br><span class="line">            &#123;</span><br><span class="line">                Name (TEMP, Buffer(0x20) &#123; &#125;)</span><br><span class="line">                Store (Arg0, TEMP)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x00)), BB00)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x01)), BB01)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x02)), BB02)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x03)), BB03)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x04)), BB04)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x05)), BB05)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x06)), BB06)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x07)), BB07)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x08)), BB08)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x09)), BB09)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x10)), BB10)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x11)), BB11)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x12)), BB12)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x13)), BB13)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x14)), BB14)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x15)), BB15)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x16)), BB16)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x17)), BB17)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x18)), BB18)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x19)), BB19)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>With all the nodes expanded in MaciASL, our work looks like this:<br><img src="http://ovefvi4g3.bkt.clouddn.com/ssd_with_nodes_expanded.png" alt="ssd_with_nodes_expanded"></p><h3 id="Resolving-errors"><a href="#Resolving-errors" class="headerlink" title="Resolving errors"></a>Resolving errors</h3><p>Now we need to start resolving errors by using External or defining the patched EC fields as necessary.<br>We can use the compiler to help.</p><p>Clicking Compile will show the first error: “3, 6085, Object not found or not accessible from scope (_SB.PCI0)”<br>It is at this line:</p><pre><code>Scope (_SB.PCI0)</code></pre><p>The compiler is indicating that _SB.PCI0 is not declared, so you can’t use it in a Scope operator.</p><p>We need to declare it with External, as the scope is actually defined in another file (DSDT.aml):<br>Add it to the top of the file:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">External(_SB.PCI0, DeviceObj)</span><br><span class="line">Scope (_SB.PCI0)</span><br><span class="line">&#123;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Now the next error is at “Scope(BAT0)”, so, again:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    Scope (_SB.PCI0)    {        Scope (BAT0)        {...</code></pre><p>The next error is “13, 6085, Object not found or not accessible from scope (^^LPCB.EC0.ACAP)”<br>We can tell from the code referencing ACAP that it is a method:</p><pre><code>If (^^LPCB.EC0.ACAP ())</code></pre><p>Note: Method calls are indicated by the “()” (in this case, an empty parameter list).</p><p>So, we know we can add an External as MethodObj:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)...}</code></pre><p>Note: The path ^^LPCB.EC0.ACAP is equivalent to _SB.PCI0.LPCB.EC0.ACAP because the reference was in scope _SB.PCI0.BAT0.FBST (the path of the FBST method). Each ^ (parent of) operator walks up the current scope by one item, so ^ is _SB.PCI0.BAT0, and ^^ is _SB.PCI0.</p><p>In some cases, you need to look at the DSDT to find the path and/or type of a given identifier. For example, the next error has to do with CHGS. Again, we know it is a method as it is the target of a method call, but for the path, we must refer to the DSDT:<br>Code (Text):</p><pre><code>Scope (\){    Method (CHGS, 1, Serialized)    {        Store (\_SB.PCI0.LPCB.EC0.BCHG (Arg0), Local0)        Return (Local0)    }</code></pre><p>So, it is in the root:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)...</code></pre><p>The next undefined symbol, BLLO, is something other than a method:</p><pre><code>If (BLLO){</code></pre><p>Looking in DSDT, we find it is defined with Name (and it happens to be in root scope):</p><pre><code>Name (BLLO, Zero)</code></pre><p>Which makes it an IntObj:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)...</code></pre><p>Fixing all the errors in the FBST method:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)...</code></pre><p>And now continue with the same process.</p><p>Eventually, you will have:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)...</code></pre><p>And will come to an error with XC30/XC31: “153, 6085, Object not found or not accessible from scope (^^LPCB.EC0.XC30)”</p><p>This is one of the 16-bit fields that was broken into two.<br>And this is where it is necessary to create the EC overlay.</p><p>To do this, we use another OperationRegion within EC scope, that has a different name than what we find in DSDT:</p><pre><code>External(_SB.PCI0.LPCB, DeviceObj)External(_SB.PCI0.LPCB.EC0, DeviceObj)Scope(_SB.PCI0.LPCB.EC0){    OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)    Field(ERM2, ByteAcc, NoLock, Preserve)    {    }}</code></pre><p>And from DSDT_patched.dsl, we can get the various patched fields (again refer to the diffmerge).<br>This is the entire set from ECOR in the DSDT_patched.dsl</p><pre><code>Offset (0x04),CMD1,   8,CDT1,   8,CDT2,   8,CDT3,   8,Offset (0x80),Offset (0x81),Offset (0x82),Offset (0x83),EB0R,   8,EB1R,   8,EPWF,   8,Offset (0x87),Offset (0x88),Offset (0x89),Offset (0x8A),HKEN,   1,Offset (0x93),TH00,8,TH01,8,TH10,8,TH11,8,TSTP,   8,Offset (0x9C),CDT4,   8,CDT5,   8,Offset (0xA0),Offset (0xA1),Offset (0xA2),Offset (0xA3),EACT,   8,TH1R,   8,TH1L,   8,TH0R,   8,TH0L,   8,Offset (0xB0),B0PN,   16,Offset (0xB4),Offset (0xB6),Offset (0xB8),Offset (0xBA),Offset (0xBC),Offset (0xBE),B0TM,   16,B0C1,   16,B0C2,   16,XC30,8,XC31,8,B0C4,   16,Offset (0xD0),B1PN,   16,Offset (0xD4),Offset (0xD6),Offset (0xD8),Offset (0xDA),Offset (0xDC),Offset (0xDE),B1TM,   16,B1C1,   16,B1C2,   16,YC30,8,YC31,8,B1C4,   16,Offset (0xF0),Offset (0xF2),Offset (0xF4),B0S0,8,B0S1,8,Offset (0xF8),Offset (0xFA),Offset (0xFC),B1S0,8,B1S1,8</code></pre><p>And if we strip the unpatched identifiers, but keep the offsets correct (very important!):</p><pre><code>Offset (0x93),TH00,8,TH01,8,TH10,8,TH11,8,Offset (0xBE),/*B0TM*/,   16,/*B0C1*/,   16,/*B0C2*/,   16,XC30,8,XC31,8,Offset (0xDE),/*B1TM*/,   16,/*B1C1*/,   16,/*B1C2*/,   16,YC30,8,YC31,8,Offset (0xF4),B0S0,8,B0S1,8,Offset (0xFC),B1S0,8,B1S1,8</code></pre><p>The same thing can be written as follows:</p><pre><code>Offset (0x93),TH00,8,TH01,8,TH10,8,TH11,8,Offset (0xc4),XC30,8,XC31,8,Offset (0xe4),YC30,8,YC31,8,Offset (0xF4),B0S0,8,B0S1,8,Offset (0xFC),B1S0,8,B1S1,8</code></pre><p>So, into our SSDT:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)    External(_SB.PCI0.LPCB, DeviceObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    Scope(_SB.PCI0.LPCB.EC0)    {        OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)        Field(ERM2, ByteAcc, NoLock, Preserve)        {                Offset (0x93),                TH00,8,TH01,8,                TH10,8,TH11,8,                Offset (0xc4),                XC30,8,XC31,8,                Offset (0xe4),                YC30,8,YC31,8,                Offset (0xF4),                B0S0,8,B0S1,8,                Offset (0xFC),                B1S0,8,B1S1,8        }    }</code></pre><p>And then on to fixing more errors, we add some more External:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)    External(_SB.PCI0.LPCB.EC0.ECAV, MethodObj)    External(BSLF, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBL, IntObj)    External(_SB.PCI0.LPCB.EC0.RDWD, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RCBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RDQK, IntObj)    External(_SB.PCI0.LPCB.EC0.MUEC, MutexObj)    External(_SB.PCI0.LPCB.EC0.PRTC, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SBBY, IntObj)    External(_SB.PCI0.LPCB.EC0.ADDR, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.CMDB, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SWTC, MethodObj)    External(_SB.PCI0.LPCB.EC0.BCNT, FieldUnitObj)    External(_SB.PCI0.LPCB, DeviceObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    Scope(_SB.PCI0.LPCB.EC0)    {...</code></pre><p>And then we have errors with T2B0 and T2B1. These are again broken down 16-bit EC fields that need to be defined in our EC overlay. In fact, might as well define the rest we know we need (from diffmerge data).</p><p>There is patched data in SMBX:</p><pre><code>OperationRegion (SMBX, EmbeddedControl, 0x18, 0x28)</code></pre><p>So, we create a similar overlay, with a unique name:</p><pre><code>            OperationRegion (RMB1, EmbeddedControl, 0x18, 0x28)            Field (RMB1, ByteAcc, NoLock, Preserve)            {/* Note: disabling these fields (already defined in DSDT, referenced with External if needed,    but keeping the correct offset! (very important!) */*/                PRTC,   8,                SSTS,   5,                    ,   1,                ALFG,   1,                CDFG,   1,                ADDR,   8,                CMDB,   8, */         Offset(4), // the data above is 4 bytes offset from the start of this region!                //BDAT, 256,BA00,8,BA01,8,BA02,8,BA03,8,BA04,8,BA05,8,BA06,8,BA07,8,BA08,8,BA09,8,BA0A,8,BA0B,8,BA0C,8,BA0D,8,BA0E,8,BA0F,8,BA10,8,BA11,8,BA12,8,BA13,8,BA14,8,BA15,8,BA16,8,BA17,8,BA18,8,BA19,8,BA1A,8,BA1B,8,BA1C,8,BA1D,8,BA1E,8,BA1F,8            }</code></pre><p>And similar withe SMB2 region:</p><pre><code>            OperationRegion(RMB2, EmbeddedControl, 0x40, 0x28)            Field (RMB2, ByteAcc, NoLock, Preserve)            {/*                PRT2,   8,                SST2,   5,                    ,   1,                ALF2,   1,                CDF2,   1,                ADD2,   8,                CMD2,   8, */      Offset(4),                //BDA2, 256,BB00,8,BB01,8,BB02,8,BB03,8,BB04,8,BB05,8,BB06,8,BB07,8,BB08,8,BB09,8,BB0A,8,BB0B,8,BB0C,8,BB0D,8,BB0E,8,BB0F,8,BB10,8,BB11,8,BB12,8,BB13,8,BB14,8,BB15,8,BB16,8,BB17,8,BB18,8,BB19,8,BB1A,8,BB1B,8,BB1C,8,BB1D,8,BB1E,8,BB1F,8            }</code></pre><p>And the T2B0 and T2B1 that are in orginal SMBX, but now RMB1:</p><pre><code>Field (RMB1, ByteAcc, NoLock, Preserve){    Offset (0x04),    T2B0,8,T2B1,8}</code></pre><p>And now we have:</p><pre><code>External(_SB.PCI0, DeviceObj)External(_SB.PCI0.BAT0, DeviceObj)External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)External(CHGS, MethodObj)External(BLLO, IntObj)External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)External(_SB.PCI0.BAT0.PUNT, IntObj)External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)External(_SB.PCI0.BAT0.LFCC, IntObj)External(MBLF, IntObj)External(_SB.PCI0.BAT0.PBST, PkgObj)External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)External(_SB.PCI0.BAT0.NBIX, PkgObj)External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)External(_SB.PCI0.BAT0._BIF, MethodObj)External(_SB.PCI0.BAT0.PBIF, PkgObj)External(_SB.PCI0.BAT0.BIXT, PkgObj)External(_SB.PCI0.LPCB.EC0.ECAV, MethodObj)External(BSLF, IntObj)External(_SB.PCI0.LPCB.EC0.RDBL, IntObj)External(_SB.PCI0.LPCB.EC0.RDWD, IntObj)External(_SB.PCI0.LPCB.EC0.RDBT, IntObj)External(_SB.PCI0.LPCB.EC0.RCBT, IntObj)External(_SB.PCI0.LPCB.EC0.RDQK, IntObj)External(_SB.PCI0.LPCB.EC0.MUEC, MutexObj)External(_SB.PCI0.LPCB.EC0.PRTC, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SBBY, IntObj)External(_SB.PCI0.LPCB.EC0.ADDR, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.CMDB, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SWTC, MethodObj)External(_SB.PCI0.LPCB.EC0.BCNT, FieldUnitObj)External(_SB.PCI0.LPCB, DeviceObj)External(_SB.PCI0.LPCB.EC0, DeviceObj)Scope(_SB.PCI0.LPCB.EC0){        OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)        Field(ERM2, ByteAcc, NoLock, Preserve)        {            Offset (0x93),            TH00,8,TH01,8,            TH10,8,TH11,8,            Offset (0xc4),            XC30,8,XC31,8,            Offset (0xe4),            YC30,8,YC31,8,            Offset (0xF4),            B0S0,8,B0S1,8,            Offset (0xFC),            B1S0,8,B1S1,8        }        OperationRegion (RMB1, EmbeddedControl, 0x18, 0x28)        Field (RMB1, ByteAcc, NoLock, Preserve)        {/* Note: disabling these fields (already defined in DSDT, referenced with External if needed,    but keeping the correct offset! (very important!) */*/            PRTC,   8,            SSTS,   5,                ,   1,            ALFG,   1,            CDFG,   1,            ADDR,   8,            CMDB,   8, */     Offset(4), // the data above is 4 bytes offset from the start of this region!            //BDAT, 256,            BA00,8,BA01,8,BA02,8,BA03,8,BA04,8,BA05,8,BA06,8,BA07,8,BA08,8,BA09,8,BA0A,8,BA0B,8,BA0C,8,BA0D,8,BA0E,8,BA0F,8,BA10,8,BA11,8,BA12,8,BA13,8,BA14,8,BA15,8,BA16,8,BA17,8,BA18,8,BA19,8,BA1A,8,BA1B,8,BA1C,8,BA1D,8,BA1E,8,BA1F,8        }        OperationRegion(RMB2, EmbeddedControl, 0x40, 0x28)        Field (RMB2, ByteAcc, NoLock, Preserve)        {/*            PRT2,   8,            SST2,   5,                ,   1,            ALF2,   1,            CDF2,   1,            ADD2,   8,            CMD2,   8, */  Offset(4),            //BDA2, 256,BB00,8,BB01,8,BB02,8,BB03,8,BB04,8,BB05,8,BB06,8,BB07,8,BB08,8,BB09,8,BB0A,8,BB0B,8,BB0C,8,BB0D,8,BB0E,8,BB0F,8,BB10,8,BB11,8,BB12,8,BB13,8,BB14,8,BB15,8,BB16,8,BB17,8,BB18,8,BB19,8,BB1A,8,BB1B,8,BB1C,8,BB1D,8,BB1E,8,BB1F,8        }        Field (RMB1, ByteAcc, NoLock, Preserve)        {            Offset (0x04),            T2B0,8,T2B1,8        }}                   </code></pre><p>Then continue on with fixing more errors with External (it ends eventually!), by adding these External declarations:</p><pre><code>External(_SB.PCI0.LPCB.EC0.DAT0, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.WRBL, IntObj)External(_SB.PCI0.LPCB.EC0.WRWD, IntObj)External(_SB.PCI0.LPCB.EC0.WRBT, IntObj)External(_SB.PCI0.LPCB.EC0.SDBT, IntObj)External(_SB.PCI0.LPCB.EC0.WRQK, IntObj)External(_SB.PCI0.LPCB.EC0.PRT2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.DAT1, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.ADD2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.CMD2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.BCN2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.DA20, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.DA21, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SSTS, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SST2, FieldUnitObj)</code></pre><p>Note: With DAT0, don’t be confused at the “other” DAT0 in a different scope!</p><p>At this point, the SSDT compiles without any errors:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)    External(_SB.PCI0.LPCB.EC0.ECAV, MethodObj)    External(BSLF, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBL, IntObj)    External(_SB.PCI0.LPCB.EC0.RDWD, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RCBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RDQK, IntObj)    External(_SB.PCI0.LPCB.EC0.MUEC, MutexObj)    External(_SB.PCI0.LPCB.EC0.PRTC, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SBBY, IntObj)    External(_SB.PCI0.LPCB.EC0.ADDR, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.CMDB, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SWTC, MethodObj)    External(_SB.PCI0.LPCB.EC0.BCNT, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DAT0, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.WRBL, IntObj)    External(_SB.PCI0.LPCB.EC0.WRWD, IntObj)    External(_SB.PCI0.LPCB.EC0.WRBT, IntObj)    External(_SB.PCI0.LPCB.EC0.SDBT, IntObj)    External(_SB.PCI0.LPCB.EC0.WRQK, IntObj)    External(_SB.PCI0.LPCB.EC0.PRT2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DAT1, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.ADD2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.CMD2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.BCN2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DA20, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DA21, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SSTS, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SST2, FieldUnitObj)    External(_SB.PCI0.LPCB, DeviceObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    Scope(_SB.PCI0.LPCB.EC0)    {            OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)            Field(ERM2, ByteAcc, NoLock, Preserve)            {                Offset (0x93),                TH00,8,TH01,8,                TH10,8,TH11,8,                Offset (0xc4),                XC30,8,XC31,8,                Offset (0xe4),                YC30,8,YC31,8,                Offset (0xF4),                B0S0,8,B0S1,8,                Offset (0xFC),                B1S0,8,B1S1,8            }            OperationRegion (RMB1, EmbeddedControl, 0x18, 0x28)            Field (RMB1, ByteAcc, NoLock, Preserve)            {/* Note: disabling these fields (already defined in DSDT, referenced with External if needed,    but keeping the correct offset! (very important!) */*/                PRTC,   8,                SSTS,   5,                    ,   1,                ALFG,   1,                CDFG,   1,                ADDR,   8,                CMDB,   8, */         Offset(4), // the data above is 4 bytes offset from the start of this region!                //BDAT, 256,BA00,8,BA01,8,BA02,8,BA03,8,BA04,8,BA05,8,BA06,8,BA07,8,BA08,8,BA09,8,BA0A,8,BA0B,8,BA0C,8,BA0D,8,BA0E,8,BA0F,8,BA10,8,BA11,8,BA12,8,BA13,8,BA14,8,BA15,8,BA16,8,BA17,8,BA18,8,BA19,8,BA1A,8,BA1B,8,BA1C,8,BA1D,8,BA1E,8,BA1F,8            }            OperationRegion(RMB2, EmbeddedControl, 0x40, 0x28)            Field (RMB2, ByteAcc, NoLock, Preserve)            {/*                PRT2,   8,                SST2,   5,                    ,   1,                ALF2,   1,                CDF2,   1,                ADD2,   8,                CMD2,   8, */      Offset(4),                //BDA2, 256,BB00,8,BB01,8,BB02,8,BB03,8,BB04,8,BB05,8,BB06,8,BB07,8,BB08,8,BB09,8,BB0A,8,BB0B,8,BB0C,8,BB0D,8,BB0E,8,BB0F,8,BB10,8,BB11,8,BB12,8,BB13,8,BB14,8,BB15,8,BB16,8,BB17,8,BB18,8,BB19,8,BB1A,8,BB1B,8,BB1C,8,BB1D,8,BB1E,8,BB1F,8             }            Field (RMB1, ByteAcc, NoLock, Preserve)            {                Offset (0x04),                T2B0,8,T2B1,8            }    }    Scope (_SB.PCI0)    {        Scope (BAT0)        {            Method (FBST, 4, NotSerialized)            {                And (Arg1, 0xFFFF, Local1)                Store (Zero, Local0)                If (^^LPCB.EC0.ACAP ())                {                    Store (One, Local0)                }                If (Local0)                {                    If (CHGS (Zero)){    Store (0x02, Local0)}Else{    Store (Zero, Local0)   }                }                Else                {                    Store (One, Local0)                }                If (BLLO)                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (And (^^LPCB.EC0.EB0S, 0x08))                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (LGreaterEqual (Local1, 0x8000))                {                    Subtract (0xFFFF, Local1, Local1)                }                Store (Arg2, Local2)                If (LEqual (PUNT, Zero))                {                    Multiply (Local1, ^^LPCB.EC0.B0DV, Local1)                    Multiply (Local2, 0x0A, Local2)                }                And (Local0, 0x02, Local3)                If (LNot (Local3))                {                    Subtract (LFCC, Local2, Local3)                    Divide (LFCC, 0xC8, Local4, Local5)                    If (LLess (Local3, Local5))                    {                        Store (LFCC, Local2)                    }                }                Else                {                    Divide (LFCC, 0xC8, Local4, Local5)                    Subtract (LFCC, Local5, Local4)                    If (LGreater (Local2, Local4))                    {                        Store (Local4, Local2)                    }                }                If (LNot (^^LPCB.EC0.ACAP ()))                {                    Divide (Local2, MBLF, Local3, Local4)                    If (LLess (Local1, Local4))                    {                        Store (Local4, Local1)                    }                }                Store (Local0, Index (PBST, Zero))                Store (Local1, Index (PBST, One))                Store (Local2, Index (PBST, 0x02))                Store (Arg3, Index (PBST, 0x03))            }            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended            {                If (LNot (^^LPCB.EC0.BATP (Zero)))                {                    Return (NBIX)                }                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))                {                    Return (NBIX)                }                _BIF ()                Store (DerefOf (Index (PBIF, Zero)), Index (BIXT, One))                Store (DerefOf (Index (PBIF, One)), Index (BIXT, 0x02))                Store (DerefOf (Index (PBIF, 0x02)), Index (BIXT, 0x03))                Store (DerefOf (Index (PBIF, 0x03)), Index (BIXT, 0x04))                Store (DerefOf (Index (PBIF, 0x04)), Index (BIXT, 0x05))                Store (DerefOf (Index (PBIF, 0x05)), Index (BIXT, 0x06))                Store (DerefOf (Index (PBIF, 0x06)), Index (BIXT, 0x07))                Store (DerefOf (Index (PBIF, 0x07)), Index (BIXT, 0x0E))                Store (DerefOf (Index (PBIF, 0x08)), Index (BIXT, 0x0F))                Store (DerefOf (Index (PBIF, 0x09)), Index (BIXT, 0x10))                Store (DerefOf (Index (PBIF, 0x0A)), Index (BIXT, 0x11))                Store (DerefOf (Index (PBIF, 0x0B)), Index (BIXT, 0x12))                Store (DerefOf (Index (PBIF, 0x0C)), Index (BIXT, 0x13))                If (LEqual (DerefOf (Index (BIXT, One)), One))                {                    Store (Zero, Index (BIXT, One))                    Store (DerefOf (Index (BIXT, 0x05)), Local0)                    Multiply (DerefOf (Index (BIXT, 0x02)), Local0, Index (BIXT, 0x02))                    Multiply (DerefOf (Index (BIXT, 0x03)), Local0, Index (BIXT, 0x03))                    Multiply (DerefOf (Index (BIXT, 0x06)), Local0, Index (BIXT, 0x06))                    Multiply (DerefOf (Index (BIXT, 0x07)), Local0, Index (BIXT, 0x07))                    Multiply (DerefOf (Index (BIXT, 0x0E)), Local0, Index (BIXT, 0x0E))                    Multiply (DerefOf (Index (BIXT, 0x0F)), Local0, Index (BIXT, 0x0F))                    Divide (DerefOf (Index (BIXT, 0x02)), 0x03E8, Local0, Index (BIXT, 0x02))                    Divide (DerefOf (Index (BIXT, 0x03)), 0x03E8, Local0, Index (BIXT, 0x03))                    Divide (DerefOf (Index (BIXT, 0x06)), 0x03E8, Local0, Index (BIXT, 0x06))                    Divide (DerefOf (Index (BIXT, 0x07)), 0x03E8, Local0, Index (BIXT, 0x07))                    Divide (DerefOf (Index (BIXT, 0x0E)), 0x03E8, Local0, Index (BIXT, 0x0E))                    Divide (DerefOf (Index (BIXT, 0x0F)), 0x03E8, Local0, Index (BIXT, 0x0F))                }                Store (B1B2(^^LPCB.EC0.XC30,^^LPCB.EC0.XC31), Index (BIXT, 0x08))                Store (0x0001869F, Index (BIXT, 0x09))                Return (BIXT)            }    }    }    Scope (_SB.PCI0.LPCB.EC0)    {        Method (BIFA, 0, NotSerialized)        {            If (ECAV ())            {                If (BSLF)                {                    Store (B1B2(B1S0,B1S1), Local0)                }                Else                {                    Store (B1B2(B0S0,B0S1), Local0)                }            }            Else            {                Store (Ones, Local0)            }            Return (Local0)        }        Method (SMBR, 3, Serialized)        {            Store (Package (0x03)                {                    0x07,                    Zero,                    Zero                }, Local0)            If (LNot (ECAV ()))            {                Return (Local0)            }            If (LNotEqual (Arg0, RDBL))            {                If (LNotEqual (Arg0, RDWD))                {                    If (LNotEqual (Arg0, RDBT))                    {                        If (LNotEqual (Arg0, RCBT))                        {                            If (LNotEqual (Arg0, RDQK))                            {                                Return (Local0)                            }                        }                    }                }            }            Acquire (MUEC, 0xFFFF)            Store (PRTC, Local1)            Store (Zero, Local2)            While (LNotEqual (Local1, Zero))            {                Stall (0x0A)                Increment (Local2)                If (LGreater (Local2, 0x03E8))                {                    Store (SBBY, Index (Local0, Zero))                    Store (Zero, Local1)                }                Else                {                    Store (PRTC, Local1)                }            }            If (LLessEqual (Local2, 0x03E8))            {                ShiftLeft (Arg1, One, Local3)                Or (Local3, One, Local3)                Store (Local3, ADDR)                If (LNotEqual (Arg0, RDQK))                {                    If (LNotEqual (Arg0, RCBT))                    {                        Store (Arg2, CMDB)                    }                }                WRBA(Zero)                Store (Arg0, PRTC)                Store (SWTC (Arg0), Index (Local0, Zero))                If (LEqual (DerefOf (Index (Local0, Zero)), Zero))                {                    If (LEqual (Arg0, RDBL))                    {                        Store (BCNT, Index (Local0, One))                        Store (RDBA(), Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RDWD))                    {                        Store (0x02, Index (Local0, One))                        Store (B1B2(T2B0,T2B1), Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RDBT))                    {                        Store (One, Index (Local0, One))                        Store (DAT0, Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RCBT))                    {                        Store (One, Index (Local0, One))                        Store (DAT0, Index (Local0, 0x02))                    }                }            }            Release (MUEC)            Return (Local0)        }        Method (SMBW, 5, Serialized)        {            Store (Package (0x01)                {                    0x07                }, Local0)            If (LNot (ECAV ()))            {                Return (Local0)            }            If (LNotEqual (Arg0, WRBL))            {                If (LNotEqual (Arg0, WRWD))                {                    If (LNotEqual (Arg0, WRBT))                    {                        If (LNotEqual (Arg0, SDBT))                        {                            If (LNotEqual (Arg0, WRQK))                            {                                Return (Local0)                            }                        }                    }                }            }            Acquire (MUEC, 0xFFFF)            Store (PRTC, Local1)            Store (Zero, Local2)            While (LNotEqual (Local1, Zero))            {                Stall (0x0A)                Increment (Local2)                If (LGreater (Local2, 0x03E8))                {                    Store (SBBY, Index (Local0, Zero))                    Store (Zero, Local1)                }                Else                {                    Store (PRTC, Local1)                }            }            If (LLessEqual (Local2, 0x03E8))            {                WRBA(Zero)                ShiftLeft (Arg1, One, Local3)                Store (Local3, ADDR)                If (LNotEqual (Arg0, WRQK))                {                    If (LNotEqual (Arg0, SDBT))                    {                        Store (Arg2, CMDB)                    }                }                If (LEqual (Arg0, WRBL))                {                    Store (Arg3, BCNT)                    WRBA(Arg4)                }                If (LEqual (Arg0, WRWD))                {                    Store(Arg4,T2B0) Store(ShiftRight(Arg4,8),T2B1)                }                If (LEqual (Arg0, WRBT))                {                    Store (Arg4, DAT0)                }                If (LEqual (Arg0, SDBT))                {                    Store (Arg4, DAT0)                }                Store (Arg0, PRTC)                Store (SWTC (Arg0), Index (Local0, Zero))            }            Release (MUEC)            Return (Local0)        }        Method (ECSB, 7, NotSerialized)        {            Store (Package (0x05)                {                    0x11,                    Zero,                    Zero,                    Zero,                    Buffer (0x20){}                }, Local1)            If (LGreater (Arg0, One))            {                Return (Local1)            }            If (ECAV ())            {                Acquire (MUEC, 0xFFFF)                If (LEqual (Arg0, Zero))                {                    Store (PRTC, Local0)                }                Else                {                    Store (PRT2, Local0)                }                Store (Zero, Local2)                While (LNotEqual (Local0, Zero))                {                    Stall (0x0A)                    Increment (Local2)                    If (LGreater (Local2, 0x03E8))                    {                        Store (SBBY, Index (Local1, Zero))                        Store (Zero, Local0)                    }                    ElseIf (LEqual (Arg0, Zero))                    {                        Store (PRTC, Local0)                    }                    Else                    {                        Store (PRT2, Local0)                    }                }                If (LLessEqual (Local2, 0x03E8))                {                    If (LEqual (Arg0, Zero))                    {                        Store (Arg2, ADDR)                        Store (Arg3, CMDB)                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))                        {                            Store (DerefOf (Index (Arg6, Zero)), BCNT)                            WRBA(DerefOf (Index (Arg6, One)))                        }                        Else                        {                            Store (Arg4, DAT0)                            Store (Arg5, DAT1)                        }                        Store (Arg1, PRTC)                    }                    Else                    {                        Store (Arg2, ADD2)                        Store (Arg3, CMD2)                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))                        {                            Store (DerefOf (Index (Arg6, Zero)), BCN2)                            WRBB(DerefOf (Index (Arg6, One)))                        }                        Else                        {                            Store (Arg4, DA20)                            Store (Arg5, DA21)                        }                        Store (Arg1, PRT2)                    }                    Store (0x7F, Local0)                    If (LEqual (Arg0, Zero))                    {                        While (PRTC)                        {                            Sleep (One)                            Decrement (Local0)                        }                    }                    Else                    {                        While (PRT2)                        {                            Sleep (One)                            Decrement (Local0)                        }                    }                    If (Local0)                    {                        If (LEqual (Arg0, Zero))                        {                            Store (SSTS, Local0)                            Store (DAT0, Index (Local1, One))                            Store (DAT1, Index (Local1, 0x02))                            Store (BCNT, Index (Local1, 0x03))                            Store (RDBA(), Index (Local1, 0x04))                        }                        Else                        {                            Store (SST2, Local0)                            Store (DA20, Index (Local1, One))                            Store (DA21, Index (Local1, 0x02))                            Store (BCN2, Index (Local1, 0x03))                            Store (RDBB(), Index (Local1, 0x04))                        }                        And (Local0, 0x1F, Local0)                        If (Local0)                        {                            Add (Local0, 0x10, Local0)                        }                        Store (Local0, Index (Local1, Zero))                    }                    Else                    {                        Store (0x10, Index (Local1, Zero))                    }                }                Release (MUEC)            }            Return (Local1)        }        Method (TACH, 1, Serialized)        {            If (ECAV ())            {                Switch (Arg0)                {                    Case (Zero)                    {                        Store (B1B2(TH00,TH01), Local0)                        Break                    }                    Case (One)                    {                        Store (B1B2(TH10,TH11), Local0)                        Break                    }                    Default                    {                        Return (Ones)                    }                }                Multiply (Local0, 0x02, Local0)                If (LNotEqual (Local0, Zero))                {                    Divide (0x0041CDB4, Local0, Local1, Local0)                    Return (Local0)                }                Else                {                    Return (Ones)                }            }            Else            {                Return (Ones)            }        }        }    Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }    Scope (_SB.PCI0.LPCB)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }}//EOF   </code></pre><p>The resulting file can be saved as AML (suggested name: SSDT-BATT.aml), and placed in ACPI/patched.</p><p>But you can’t expect battery status to work with native DSDT yet!</p><h3 id="Renaming-existing-methods"><a href="#Renaming-existing-methods" class="headerlink" title="Renaming existing methods"></a>Renaming existing methods</h3><p>For now, there are duplicate methods in DSDT and this SSDT-BATT.aml. For each method in DSDT that the SSDT-BATT.aml version will replace, we must rename the method in DSDT to something else, which will allow the SSDT version to override.</p><p>Just as in post #1, this part follows the “Rename/Replace” pattern.<br>The methods that need replacements are FBST, _BIX, BIFA, SMBR, SMBW, ECSB, and TACH.</p><p>For this step, it is useful to create a mixed bytecode listing for the native DSDT.aml.<br>It can be created with: “iasl -l -dl DSDT.aml”, which creates a mixed listing in DSDT.dsl</p><p>For the FBST method:</p><pre><code>Method (FBST, 4, NotSerialized){    And (Arg1, 0xFFFF, Local1)    Store (Zero, Local0)FF74: 14 43 12 46 42 53 54 04 7B 69 0B FF FF 61 70 00  // .C.FBST.{i...ap.FF84: 60</code></pre><p>A potential rename patch (FBST-&gt;XBST):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;46 42 53 54 04&gt;</span><br><span class="line">Replace: &lt;58 42 53 54 04&gt;</span><br></pre></td></tr></table></figure><p>It is a good idea to verify that there is only one match for the Find hex data by searching for it in a hex editor such as Hex Fiend. Because the patch should ONLY apply to the method definition, not other code that may be present in the DSDT (or native SSDTs).</p><p>The target name you choose must be unique within the scope that the method resides. Creating a duplicate method will cause kernel panic. Changing the first letter to ‘X’ is usually ok, but no guarantee.</p><p>Patches for the rest of the methods:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_BIX-&gt;XBIX:</span><br><span class="line">Find: &lt;5F 42 49 58 00&gt;</span><br><span class="line">Replace: &lt;58 42 49 58 00&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BIFA-&gt;XIFA:</span><br><span class="line">Find: &lt;42 49 46 41 00&gt;</span><br><span class="line">Replace: &lt;58 49 46 41 00&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SMBR-&gt;XMBR:</span><br><span class="line">Find: &lt;53 4D 42 52 0B&gt;</span><br><span class="line">Replace: &lt;58 4D 42 52 0B&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SMBW-&gt;XMBW:</span><br><span class="line">Find: &lt;53 4D 42 57 0D&gt;</span><br><span class="line">Replace: &lt;58 4D 42 57 0D&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ECSB-&gt;XCSB:</span><br><span class="line">Find: &lt;45 43 53 42 07&gt;</span><br><span class="line">Replace: &lt;58 43 53 42 07&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TACH-&gt;XACH:</span><br><span class="line">Find: &lt;54 41 43 48 09&gt;</span><br><span class="line">Replace: &lt;58 41 43 48 09&gt;</span><br></pre></td></tr></table></figure><p>After adding those patches to config.plist/ACPI/DSDT/Patches, the methods in native DSDT will be renamed by Clover. And as a result of the renaming, the patched methods defined in SSDT-BATT.aml will override.</p><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Hotpatching for battery status is one of the most complex hotpatch tasks possible. The process of writing all the ‘External’ refernences is tedious and boring.</p><p>It will take some time (several hours into the text you’re reading here). Do not rush it.</p><h2 id="Disabling-discrete-switched-GPU-with-Hotpatch"><a href="#Disabling-discrete-switched-GPU-with-Hotpatch" class="headerlink" title="Disabling discrete/switched GPU with Hotpatch"></a>Disabling discrete/switched GPU with Hotpatch</h2><p>This third post is dedicated to hotpatching required for disabling the discrete GPU in a switched dual-GPU laptop, using the same example ACPI fils as the static patch guide.</p><p><a href="https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/</a></p><p>You should download the ACPI/origin files that are attached to that guide, so you can follow along.</p><p>As in the static patch guide, the goal is relatively simple: call the _OFF method (from an _INI method) for the discrete GPU during ACPI initialization. But the details make it more complex due to the fact that _OFF can contain EC related code which needs to be executed in _REG instead of _INI.</p><h3 id="Building-the-replacement-INI-OFF-REG-methods"><a href="#Building-the-replacement-INI-OFF-REG-methods" class="headerlink" title="Building the replacement _INI/_OFF/_REG methods"></a>Building the replacement _INI/_OFF/_REG methods</h3><p>In the example, the target _INI method is in SSDT-7, _OFF is in SSDT-8. The path of the discrete device is _SB.PCI0.RP05.PEGP. In the example files, _OFF contains EC related code that must be moved to _REG. To complete this patching process, we need to replace _INI, _OFF, and _REG, therefore each will need to be renamed to XINI, XOFF, and XREG</p><p>Note: The methods you need to patch may in fact be different. It all depends on the code within the _OFF path. For example, with other ACPI sets, it happens that SGOF (may be some other name) has EC related code that must be moved to _REG. In that case, you would need to use rename/replace for the SGOF, and perhaps not the _OFF method. Analyze your existing code carefully.</p><p>The Clover config.plist patches will be worked out later. For now, lets look at the SSDT for the replacement methods.</p><p>The SSDT will consist of the patched methods:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;D-GPU&quot;, 0){    External(_SB.PCI0.RP05.PEGP, DeviceObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.RP05.PEGP.XOFF, MethodObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)    External(_SB.PCI0.LPCB.EC0.SPIN, MethodObj)    Scope(_SB.PCI0.RP05.PEGP)    {        Method(_INI)        {            XINI() // call original _INI, now renamed XINI            _OFF() // call (patched) _OFF        }        Method(_OFF, 0, Serialized)        {            If (LEqual (CTXT, Zero))            {                /* \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) */                If (LNotEqual (GPRF, One))                {                    Store (VGAR, VGAB)                }                Store (One, CTXT)            }            SGOF ()        }    }    Scope(_SB.PCI0.LPCB.EC0)    {        Method(_REG, 2)        {            XREG(Arg0, Arg1) // call original _REG, now renamed XREG            If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?            {                \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) // code that was removed from _OFF            }        }    }</code></pre><p>At this point, the code won’t compile, as some of the symbols referenced in _OFF are not available.<br>Just like the battery patching guide, we must add the appropriate External declarations.</p><p>Use the compiler errors to determine which symbols you need to find, then add the appropriate External declartions. In the example case:</p><pre><code>External(_SB.PCI0.RP05.PEGP.CTXT, IntObj)External(_SB.PCI0.RP05.PEGP.GPRF, IntObj)External(_SB.PCI0.RP05.PEGP.VGAR, FieldUnitObj)External(_SB.PCI0.RP05.PEGP.VGAB, BuffObj)External(_SB.PCI0.RP05.PEGP.SGOF, MethodObj)</code></pre><p>The resulting SSDT:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;D-GPU&quot;, 0){    External(_SB.PCI0.RP05.PEGP, DeviceObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.RP05.PEGP.XOFF, MethodObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)    External(_SB.PCI0.LPCB.EC0.SPIN, MethodObj)    External(_SB.PCI0.RP05.PEGP.CTXT, IntObj)    External(_SB.PCI0.RP05.PEGP.GPRF, IntObj)    External(_SB.PCI0.RP05.PEGP.VGAR, FieldUnitObj)    External(_SB.PCI0.RP05.PEGP.VGAB, BuffObj)    External(_SB.PCI0.RP05.PEGP.SGOF, MethodObj)    Scope(_SB.PCI0.RP05.PEGP)    {        Method(_INI)        {            XINI() // call original _INI, now renamed XINI            _OFF() // call (patched) _OFF        }        Method(_OFF, 0, Serialized)        {            If (LEqual (CTXT, Zero))            {                /* \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) */                If (LNotEqual (GPRF, One))                {                    Store (VGAR, VGAB)                }                Store (One, CTXT)            }            SGOF ()        }    }    Scope(_SB.PCI0.LPCB.EC0)    {        Method(_REG, 2)        {            XREG(Arg0, Arg1) // call original _REG, now renamed XREG            If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?            {                \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) // code that was removed from _OFF            }        }    }}</code></pre><p>Now it compiles without error, but there is one warning: “39, 3079, _REG has no corresponding Operation Region”. And this warning is important. The _REG will not be called unless we add a dummy EC OperationRegion.</p><p>We can add it:</p><pre><code>...Scope(_SB.PCI0.LPCB.EC0){    OperationRegion(RME3, EmbeddedControl, 0x00, 0xFF)    Method(_REG, 2)    {...</code></pre><p>Resulting complete SSDT:</p><pre><code>External(_SB.PCI0.RP05.PEGP, DeviceObj)External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)External(_SB.PCI0.RP05.PEGP.XOFF, MethodObj)External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)External(_SB.PCI0.LPCB.EC0, DeviceObj)External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)External(_SB.PCI0.LPCB.EC0.SPIN, MethodObj)External(_SB.PCI0.RP05.PEGP.CTXT, IntObj)External(_SB.PCI0.RP05.PEGP.GPRF, IntObj)External(_SB.PCI0.RP05.PEGP.VGAR, FieldUnitObj)External(_SB.PCI0.RP05.PEGP.VGAB, BuffObj)External(_SB.PCI0.RP05.PEGP.SGOF, MethodObj)Scope(_SB.PCI0.RP05.PEGP){    Method(_INI)    {        XINI() // call original _INI, now renamed XINI        _OFF() // call (patched) _OFF    }    Method(_OFF, 0, Serialized)    {        If (LEqual (CTXT, Zero))        {            /* \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) */            If (LNotEqual (GPRF, One))            {                Store (VGAR, VGAB)            }            Store (One, CTXT)        }        SGOF ()    }}Scope(_SB.PCI0.LPCB.EC0){    OperationRegion(RME3, EmbeddedControl, 0x00, 0xFF)    Method(_REG, 2)    {        XREG(Arg0, Arg1) // call original _REG, now renamed XREG        If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?        {            \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) // code that was removed from _OFF        }    }}</code></pre><p>At this point, you can save the SSDT (suggestion: SSDT-DGPU.aml).<br>It is ready to go to ACPI/patched.</p><p>But we still need to rename the original methods in native ACPI.</p><h3 id="Renaming-the-methods"><a href="#Renaming-the-methods" class="headerlink" title="Renaming the methods"></a>Renaming the methods</h3><p>As mentioned earlier, the following methods need renaming:<br>_SB.PCI0.RP05.PEGP._INI -&gt; XINI<br>_SB.PCI0.RP05.PEGP._OFF -&gt; XOFF<br>_SB.PCI0.LPCB.EC0._REG -&gt; XREG</p><p>To determine the binary patches needed, we need a mixed listing of DSDT.aml, SSDT-7.aml, and SSDT-8.aml.<br>Create with:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iasl -dl -l DSDT.aml SSDT-7.aml SSDT-8.aml</span><br></pre></td></tr></table></figure><p>The resulting mixed listing is in DSDT.dsl, SSDT-7.dsl, and SSDT-8.dsl.</p><p>Here is the mixed listing for _REG in DSDT.dsl:<br>Code (Text):</p><pre><code>        Method (_REG, 2, NotSerialized)  // _REG: Region Availability        {D2B8: 14 12 5F 52 45 47 02                             // .._REG.            If (LEqual (Arg0, 0x03))            {D2BF: A0 0B 93 68 0A 03                                // ...h..                Store (Arg1, ECFL)                }            }        }    }D2C5: 70 69 45 43 46 4C</code></pre><p>The patch used should rename only this _REG, not other _REG methods in the ACPI set. We can rename it by grabbing the name/header plus a few bytes from the code.</p><p>This pattern grabs enough bytes to be unique for sure:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;5F 52 45 47 02 A0 0B 93 68 0A 03 70 69 45 43 46 4C&gt;</span><br><span class="line">Replace: &lt;58 52 45 47 02 A0 0B 93 68 0A 03 70 69 45 43 46 4C&gt;</span><br></pre></td></tr></table></figure><p>And the mixed listing for the target _INI in SSDT-7.dsl:</p><pre><code>        Method (_INI, 0, NotSerialized)  // _INI: Initialize        {03D1: 14 1F 5F 49 4E 49 00                             // .._INI.            Store (Zero, \_SB.PCI0.RP05.PEGP._ADR)        }03D8: 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP003E8: 35 50 45 47 50 5F 41 44 52                       // 5PEGP_ADR</code></pre><p>​            </p><p>Resulting patch…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;5F 49 4E 49 00 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30 35 50 45 47 50&gt;</span><br><span class="line">Replace: &lt;58 49 4E 49 00 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30 35 50 45 47 50&gt;</span><br></pre></td></tr></table></figure><p>And the _OFF in SSDT-8.dsl:</p><pre><code>    Method (_OFF, 0, Serialized)  // _OFF: Power Off    {032B: 14 45 04 5F 4F 46 46 08                          // .E._OFF.        If (LEqual (CTXT, Zero))        {        \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero)0333: A0 39 93 43 54 58 54 00 5C 2F 05 5F 53 42 5F 50  // .9.CTXT.\/._SB_P0343: 43 49 30 4C 50 43 42 45 43 30 5F 53 50 49 4E 0A  // CI0LPCBEC0_SPIN.0353: 96 00</code></pre><p> The patch…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;5F 4F 46 46 08 A0 39 93 43 54 58 54&gt;</span><br><span class="line">Replace: &lt;58 4F 46 46 08 A0 39 93 43 54 58 54&gt;</span><br></pre></td></tr></table></figure><p>Note: Each of these patches could probably be reduced, but you would need to check carefully in all native DSDT and SSDTs for the Find pattern as you don’t want to match on any methods but the target methods. Because _REG, _INI and _OFF are very common names for methods in other scopes, we need to be careful.</p><h3 id="A-simple-example"><a href="#A-simple-example" class="headerlink" title="A simple example"></a>A simple example</h3><p>The files for the ASUS mentioned above were complex due to the need to patch _OFF, _INI, and _REG.</p><p>But let’s take a look at an example that is much simpler. The files are for an Asus K550VX-DM406T, and they are attached to this post. Please download them so you can follow along.</p><p>When we look at the _OFF method in SSDT-14, there is no EC related code. And it calls PGOF, but the PGOF method, defined in SSDT-3, also has no EC related code:</p><pre><code>Method (_OFF, 0, Serialized)  // _OFF: Power Off{    If (LEqual (CTXT, Zero))    {        If (LNotEqual (GPRF, One))        {            Store (VGAR, VGAB)        }        Store (One, CTXT)    }    PGOF (Zero)}</code></pre><p>This means _OFF can be called directly from an _INI.</p><p>If you look at all the _INI methods in the ACPI set, you will find there is no _INI at the path of _OFF (_SB.PCI0.PEG0.PEGP). Which means we can simply add an SSDT that has an _INI at the correct path, and that _INI simply calls _OFF.</p><p>It is a one-liner method:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;DGPU&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">External(_SB.PCI0.PEG0.PEGP._OFF, MethodObj)</span><br><span class="line">Method(_SB.PCI0.PEG0.PEGP._INI) &#123; _OFF() &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Just as mentioned in the main discrete disable guide (static patch), sometimes you need to call _PS3 instead of _OFF. It is a trial and error process to determine which is best.</p><p>Same code as above, but calling _PS3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;DGPU&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">External(_SB.PCI0.PEG0.PEGP._PS3, MethodObj)</span><br><span class="line">Method(_SB.PCI0.PEG0.PEGP._INI) &#123; _PS3() &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Save it as SSDT-DGPU.aml and the Nvidia should be disabled.</p><p>The simple example turned not so simple</p><p>Although the method mentioned above will usually work in this scenario (even with other laptops that present the same scenario: no EC access in _OFF path, no existing _INI at the path), this specific laptop needed additional patching in order to turn off the dedicated Nvidia fan.</p><p>A little investigation was needed. As we can see by looking at the _OFF code, it calls PGOF(Zero) to do most of the work. And if we search for other examples of PGOF being called with Arg0==Zero, we find this code in SSDT-3.dsl:</p><pre><code>ElseIf (LAnd (LGreater (OSYS, 0x07D9), PEGS ())){    FAOF ()    PGOF (Zero)...</code></pre><p>Note the call to FAOF. Could that be for “FAN OFF”? Seems likely.</p><p>And look, we have FAOF and FAON in SSDT-3:</p><pre><code>Method (FAON, 0, Serialized){    \_SB.PCI0.LPCB.EC0.WRAM (0x052B, 0x9E)    \_SB.PCI0.LPCB.EC0.WRAM (0x0520, 0x8B)    Store (\_SB.PCI0.LPCB.EC0.RRAM (0x0521), Local0)    And (Local0, 0xCF, Local0)    Or (Local0, 0x20, Local0)    \_SB.PCI0.LPCB.EC0.WRAM (0x0521, Local0)}Method (FAOF, 0, Serialized){    Store (\_SB.PCI0.LPCB.EC0.RRAM (0x0521), Local0)    And (Local0, 0xCF, Local0)    \_SB.PCI0.LPCB.EC0.WRAM (0x0521, Local0)    \_SB.PCI0.LPCB.EC0.WRAM (0x0520, 0x89)    \_SB.PCI0.LPCB.EC0.WRAM (0x03A4, Zero)    \_SB.PCI0.LPCB.EC0.WRAM (0x03A5, Zero)}</code></pre><p>And you can see it does a bunch of EC manipulations. Typically the EC controls the system fans, so this seems to confirm these methods are for “FAN ON”, and “FAN OFF”.</p><p>Since these methods manipulate the EC, we cannot call FAOF without the EC being ready. To do that, we need to patch _REG.</p><p>So, adding the necessary code to our SSDT:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;DGPU&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">External(_SB.PCI0.PEG0.PEGP._OFF, MethodObj)</span><br><span class="line">Method(_SB.PCI0.PEG0.PEGP._INI) &#123; _OFF() &#125;</span><br><span class="line">External(_SB.PCI0.LPCB.EC0, DeviceObj)</span><br><span class="line">External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)</span><br><span class="line">External(_SB.PCI0.PEG0.FAOF, MethodObj)</span><br><span class="line">Scope(_SB.PCI0.LPCB.EC0)</span><br><span class="line">&#123;</span><br><span class="line">    OperationRegion(RME3, EmbeddedControl, 0x00, 0xFF)</span><br><span class="line">    Method(_REG, 2)</span><br><span class="line">    &#123;</span><br><span class="line">        XREG(Arg0, Arg1) // call original _REG, now renamed XREG</span><br><span class="line">        If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?</span><br><span class="line">        &#123;</span><br><span class="line">             \_SB.PCI0.PEG0.FAOF() // turn dedicated Nvidia fan off</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>And the patch we need to rename _REG to XREG (again, based on a mixed listing of DSDT.aml):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;5F 52 45 47 02 A0 0B 93 68 0A 03&gt;</span><br><span class="line">Replace: &lt;58 52 45 47 02 A0 0B 93 68 0A 03&gt;</span><br></pre></td></tr></table></figure><p>With the patch in config.plist, EC0._REG is renamed XREG. The eventual call to _REG by the system lands in our modified _REG, which, in turn, calls the original _REG (renamed to XREG) and calls FAOF to turn the fan off.</p><h3 id="Conclusion-1"><a href="#Conclusion-1" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Hotpatching discrete GPU disable code is a bit simpler than battery status, but involves similar concepts.</p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p><a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config" target="_blank" rel="noopener">https://github.com/RehabMan/OS-X-Clover-Laptop-Config</a><br><a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/</a></p>]]></content>
    
    <summary type="html">
    
      Using Clover to &quot;hotpatch&quot; ACPI
    
    </summary>
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/categories/Hacintosh/"/>
    
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/tags/Hacintosh/"/>
    
      <category term="SSDT" scheme="https://blog.iamzhl.top/tags/SSDT/"/>
    
      <category term="hotpatch" scheme="https://blog.iamzhl.top/tags/hotpatch/"/>
    
      <category term="ACPI" scheme="https://blog.iamzhl.top/tags/ACPI/"/>
    
  </entry>
  
  <entry>
    <title>HP OMEN by HP Laptop</title>
    <link href="https://blog.iamzhl.top/HP-OMEN-by-HP-Laptop.html"/>
    <id>https://blog.iamzhl.top/HP-OMEN-by-HP-Laptop.html</id>
    <published>2017-12-13T11:25:35.000Z</published>
    <updated>2017-12-13T11:27:04.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="Laptop-Configuration"><a href="#Laptop-Configuration" class="headerlink" title="Laptop Configuration"></a>Laptop Configuration</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line">----------------------------------</span><br><span class="line">以下信息由电脑管家提供</span><br><span class="line">导出时间：2017-12-13 19:6:32</span><br><span class="line">----------------------------------</span><br><span class="line">电脑概览</span><br><span class="line"></span><br><span class="line">电脑型号  HP OMEN by HP Laptop</span><br><span class="line">操作系统  Microsoft Windows 10 家庭中文版 (64位)</span><br><span class="line">CPU  (英特尔)Intel(R) Core(TM) i5-6300HQ CPU @ 2.30GHz(2304 MHz)</span><br><span class="line">主板  HP 8257</span><br><span class="line">内存  8.00 GB (   2133 MHz)</span><br><span class="line">主硬盘  130 GB (  S2HUNX0H463693 已使用时间: 3745小时)</span><br><span class="line">显卡  NVIDIA GeForce GTX 960M</span><br><span class="line">显示器  (Standard monitor types)  32位真彩色 60Hz</span><br><span class="line">声卡  Realtek High Definition Audio</span><br><span class="line">网卡  Intel(R) Dual Band Wireless-AC 7265</span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">CPU详情</span><br><span class="line"></span><br><span class="line">CPU厂商  GenuineIntel</span><br><span class="line">CPU  (英特尔)Intel(R) Core(TM) i5-6300HQ CPU @ 2.30GHz</span><br><span class="line">CPU核心数  4</span><br><span class="line">CPU默认频率  2304 MHz</span><br><span class="line">CPU外频  100 MHz</span><br><span class="line">CPU当前频率  2304 MHz</span><br><span class="line">二级缓存  1024 KB</span><br><span class="line">三级缓存  6144 KB</span><br><span class="line">CPU电压  0.800 V</span><br><span class="line">CPU序列号  BFEBFBFF000506E3</span><br><span class="line">数据宽度  64bit</span><br><span class="line">指令集  MMX,SSE,SSE2,SSE3,SSSE3,SSE4.1,SSE4.2,EM64T</span><br><span class="line">扩展版本  Ext.Family 0  Ext.Model 5</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">主板详情</span><br><span class="line"></span><br><span class="line">制造商  HP</span><br><span class="line">主板型号  8257</span><br><span class="line">制造日期  2016/07/04</span><br><span class="line">主板序列号  5CD62862N1</span><br><span class="line">BIOS厂商  Insyde</span><br><span class="line">BIOS版本  HPQOEM - 0 F.08</span><br><span class="line">BIOS大小  0 Bytes</span><br><span class="line">芯片组  英特尔 </span><br><span class="line">电脑厂商  HP</span><br><span class="line">电脑型号  OMEN by HP Laptop</span><br><span class="line">系统安装日期  2017/04/14</span><br><span class="line">最近启动时间  2017/11/13</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">内存1详情</span><br><span class="line"></span><br><span class="line">内存名称     2133 MHz</span><br><span class="line">内存大小  4 GB</span><br><span class="line">内存频率  2133 MHz</span><br><span class="line">插槽  Bottom-Slot 1(left) </span><br><span class="line">数据宽度  64bit</span><br><span class="line"></span><br><span class="line">内存2详情</span><br><span class="line"></span><br><span class="line">内存名称     2133 MHz</span><br><span class="line">内存大小  4 GB</span><br><span class="line">内存频率  2133 MHz</span><br><span class="line">插槽  Bottom-Slot 2(right)</span><br><span class="line">数据宽度  64bit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">显卡1详情</span><br><span class="line"></span><br><span class="line">显卡名称  Intel(R) HD Graphics 530</span><br><span class="line">显存大小  1024 MB</span><br><span class="line">内核名称  Intel(R) HD Graphics Family</span><br><span class="line"></span><br><span class="line">显卡2详情</span><br><span class="line"></span><br><span class="line">显卡名称  NVIDIA GeForce GTX 960M</span><br><span class="line">显存大小  2048 MB</span><br><span class="line">内核名称  GeForce GTX 960M</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">显示器详情</span><br><span class="line"></span><br><span class="line">显示器厂商  (Standard monitor types)</span><br><span class="line">显示器代号  LGD0532</span><br><span class="line">屏幕尺寸  15.3 英寸 (34厘米X19厘米)</span><br><span class="line">屏幕比例  16:9</span><br><span class="line">当前分辨率  1920 * 1080 (32位真彩色@60Hz)</span><br><span class="line">最大分辨率  1920 * 1080</span><br><span class="line">制造时间  2016/1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">硬盘1详情</span><br><span class="line"></span><br><span class="line">硬盘名称  SAMSUNG MZNLF128HCHP-000H1</span><br><span class="line">硬盘大小  130 GB</span><br><span class="line">硬盘已使用时间  3745小时 (S.M.A.R.T.)</span><br><span class="line">硬盘序列号  SAMSUNG MZNLF128HCHP-000H1 (BIOS 版本: FXT21H)</span><br><span class="line"></span><br><span class="line">硬盘2详情</span><br><span class="line"></span><br><span class="line">硬盘名称  HGST HTS721010A9E630</span><br><span class="line">硬盘大小  1000 GB</span><br><span class="line">硬盘缓存  32 MB</span><br><span class="line">硬盘已使用时间  3743小时 (S.M.A.R.T.)</span><br><span class="line">硬盘序列号  HGST HTS721010A9E630 (BIOS 版本: JB0OA3)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">声卡1详情</span><br><span class="line"></span><br><span class="line">声卡名称  Realtek High Definition Audio</span><br><span class="line">声卡厂商  Realtek</span><br><span class="line"></span><br><span class="line">声卡2详情</span><br><span class="line"></span><br><span class="line">声卡名称  英特尔(R) 显示器音频</span><br><span class="line">声卡厂商  Intel(R) Corporation</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">网卡1详情</span><br><span class="line"></span><br><span class="line">网卡名称  Intel(R) Dual Band Wireless-AC 7265</span><br><span class="line">网卡厂商  Intel Corporation</span><br><span class="line">Mac地址  A4:02:B9:44:77:AD</span><br><span class="line"></span><br><span class="line">网卡2详情</span><br><span class="line"></span><br><span class="line">网卡名称  Realtek PCIe GBE Family Controller</span><br><span class="line">网卡厂商  Realtek</span><br><span class="line">Mac地址  EC:8E:B5:4E:C7:F8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">键盘详情</span><br><span class="line"></span><br><span class="line">名称  增强型(101 或 102 键)</span><br><span class="line">类型  USB Input Device</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">其它硬件1详情</span><br><span class="line"></span><br><span class="line">名称  USB Input Device</span><br><span class="line"></span><br><span class="line">其它硬件2详情</span><br><span class="line"></span><br><span class="line">名称  USB Composite Device</span><br><span class="line"></span><br><span class="line">其它硬件3详情</span><br><span class="line"></span><br><span class="line">名称  英特尔(R) 无线 Bluetooth(R)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h3 id="Working"><a href="#Working" class="headerlink" title="Working"></a>Working</h3><h3 id="Clover-EFI-bootloader"><a href="#Clover-EFI-bootloader" class="headerlink" title="Clover EFI bootloader"></a>Clover EFI bootloader</h3><p><a href="https://github.com/athlonreg/HP-OMEN-II-Laptop-PC/releases" target="_blank" rel="noopener">HP OMEN by HP Laptop</a></p><h3 id="Finally"><a href="#Finally" class="headerlink" title="Finally"></a>Finally</h3><p>Please respect the author’s work and please indicate the address of the original post if you want reprint the repo!</p>]]></content>
    
    <summary type="html">
    
      Install macOS High Sierra on HP OMEN by HP Laptop
    
    </summary>
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/categories/Hacintosh/"/>
    
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/tags/Hacintosh/"/>
    
      <category term="光影精灵" scheme="https://blog.iamzhl.top/tags/%E5%85%89%E5%BD%B1%E7%B2%BE%E7%81%B5/"/>
    
      <category term="暗影精灵" scheme="https://blog.iamzhl.top/tags/%E6%9A%97%E5%BD%B1%E7%B2%BE%E7%81%B5/"/>
    
  </entry>
  
  <entry>
    <title>ASUS-X455LD-i5-4210u</title>
    <link href="https://blog.iamzhl.top/ASUS-X455LD-i5-4210u.html"/>
    <id>https://blog.iamzhl.top/ASUS-X455LD-i5-4210u.html</id>
    <published>2017-12-13T06:51:34.000Z</published>
    <updated>2017-12-24T11:37:25.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="Laptop-Configuration"><a href="#Laptop-Configuration" class="headerlink" title="Laptop Configuration"></a>Laptop Configuration</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Computer model              Asus F455LD Notebook</span><br><span class="line"></span><br><span class="line">CPU                         Intel Core i5-4210u</span><br><span class="line"></span><br><span class="line">Operate System              Windows10 Education 64bit + macOS High Sierra 17B25c</span><br><span class="line">                            + Windows7 Ultimate + ElementaryOS base on Ubuntu 16.04</span><br><span class="line"></span><br><span class="line">Main board                  Asus X455LD Intel Haswell-ULT - Lynx Point-LP</span><br><span class="line"></span><br><span class="line">Discret egraphics           Nvidia GeForce 820M 2G </span><br><span class="line"></span><br><span class="line">Integrated graphics         HD4400</span><br><span class="line"></span><br><span class="line">Audio                       Realtek @ Intel Lynx Point-LP  High Definition Audio (CX20751)</span><br><span class="line"></span><br><span class="line">Ethernet                    Realtek RTL8168/8111/8112 Gigabit Ethernet Controller / Asus</span><br><span class="line"></span><br><span class="line">Wireless network adapter    Atheros AR956X</span><br></pre></td></tr></table></figure><h3 id="Working"><a href="#Working" class="headerlink" title="Working"></a>Working</h3><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-01.png" alt="2017-12-13-01"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-02.png" alt="2017-12-13-02"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-03.png" alt="2017-12-13-03"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-04.png" alt="2017-12-13-04"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-05.png" alt="2017-12-13-05"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-06.png" alt="2017-12-13-06"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-07.png" alt="2017-12-13-07"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-08.png" alt="2017-12-13-08"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-09.png" alt="2017-12-13-09"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-10.png" alt="2017-12-13-10"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-11.png" alt="2017-12-13-11"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-12.png" alt="2017-12-13-12"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-13.png" alt="2017-12-13-13"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-14.png" alt="2017-12-13-14"></p><h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><h4 id="About-ALCPlugFix"><a href="#About-ALCPlugFix" class="headerlink" title="About ALCPlugFix"></a>About <code>ALCPlugFix</code></h4><p>Firstly，Unzip <code>ALCPlugFix</code> to your desktop after you have installed Hackintosh。<br>Secondly，open terminal：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/Desktop/ALCPlugFix/alc_fix</span><br><span class="line">$ chmod +x install.sh</span><br><span class="line">$ ./install.sh</span><br></pre></td></tr></table></figure></p><p>The script can fix your audio with good input and switch。</p><h4 id="About-一键开启HIDPI并注入EDID"><a href="#About-一键开启HIDPI并注入EDID" class="headerlink" title="About 一键开启HIDPI并注入EDID"></a>About <code>一键开启HIDPI并注入EDID</code></h4><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-15.png" alt="2017-12-13-15"></p><p>Just double click <code>双击.command</code>，and input your password。</p><p>Then it can working as Macintosh。</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-13-08.png" alt="2017-12-13-08"></p><h3 id="Clover-EFI-bootloader"><a href="#Clover-EFI-bootloader" class="headerlink" title="Clover EFI bootloader"></a>Clover EFI bootloader</h3><p><a href="https://github.com/athlonreg/ASUS-F455LD-i5-4210u/releases" target="_blank" rel="noopener">ASUS-F455LD-i5-4210u</a></p><h3 id="Finally"><a href="#Finally" class="headerlink" title="Finally"></a>Finally</h3><p>Please respect the author’s work and please indicate the address of the original post if you want reprint the repo!</p>]]></content>
    
    <summary type="html">
    
      Install macOS High Sierra on ASUS X455LD i5 4210u
    
    </summary>
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/categories/Hacintosh/"/>
    
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/tags/Hacintosh/"/>
    
      <category term="X455LD" scheme="https://blog.iamzhl.top/tags/X455LD/"/>
    
  </entry>
  
  <entry>
    <title>Solve problem of subset sum with backtracking method</title>
    <link href="https://blog.iamzhl.top/Solve-problem-of-subset-sum-with-backtracking-method.html"/>
    <id>https://blog.iamzhl.top/Solve-problem-of-subset-sum-with-backtracking-method.html</id>
    <published>2017-12-12T06:12:40.000Z</published>
    <updated>2017-12-24T11:30:02.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>子集和问题的一个实例为&lt;S,t&gt;。其中，S={x<sub>1</sub>,x<sub>2</sub>,x<sub>3</sub>,&hellip;,x<sub>n</sub>}是一个正整数的集合，c是一个正整数。子集和问题判定是否存在S的一个子集S<sub>1</sub>，使得 S<sub>1</sub>中的所有元素之和等于c。<br>试设计一个解子集和问题的回溯法。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>第1行有2个正整数n和c，n表示S的大小，c是子集和的目标值。接下来的1行中，有n个正整数，表示集合S中的元素。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出子集和问题的解。当问题无解时，输出<code>No solution!</code>。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 10</span><br><span class="line">2 2 6 5 4</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 2 6</span><br></pre></td></tr></table></figure><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 5</span><br><span class="line">#define c 10</span><br><span class="line"></span><br><span class="line">int array[n]=&#123;2,2,6,5,4&#125;;</span><br><span class="line">int a[n]=&#123;0&#125;;</span><br><span class="line">int sum=0;</span><br><span class="line">int flag=0;</span><br><span class="line"></span><br><span class="line">void traceback(int t)</span><br><span class="line">&#123;</span><br><span class="line">    if(t==n)&#123;</span><br><span class="line">        if(sum==c)&#123;</span><br><span class="line">            flag=1;</span><br><span class="line">            for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">                if(a[i])&#123;</span><br><span class="line">                    printf(&quot;%3d&quot;,array[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            printf(&quot;\n&quot;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        sum+=array[t];</span><br><span class="line">        a[t]=1;</span><br><span class="line">        traceback(t+1);</span><br><span class="line">        a[t]=0;</span><br><span class="line">        sum-=array[t];</span><br><span class="line">        traceback(t+1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    traceback(0);</span><br><span class="line">    if(!flag)&#123;</span><br><span class="line">        printf(&quot;No Solutions!\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果输出"><a href="#结果输出" class="headerlink" title="结果输出"></a>结果输出</h3><p><img src="http://ovefvi4g3.bkt.clouddn.com/Screen Shot 2017-12-12 at 2.26.24 PM.png" alt="Screen Shot 2017-12-12 at 2.26.24 PM"></p>]]></content>
    
    <summary type="html">
    
      回溯法求子集和问题
    
    </summary>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/categories/algorithm/"/>
    
    
      <category term="子集和问题" scheme="https://blog.iamzhl.top/tags/%E5%AD%90%E9%9B%86%E5%92%8C%E9%97%AE%E9%A2%98/"/>
    
      <category term="回溯" scheme="https://blog.iamzhl.top/tags/%E5%9B%9E%E6%BA%AF/"/>
    
  </entry>
  
  <entry>
    <title>Install macOS on laptop</title>
    <link href="https://blog.iamzhl.top/Install-macOS-on-laptop.html"/>
    <id>https://blog.iamzhl.top/Install-macOS-on-laptop.html</id>
    <published>2017-12-11T16:28:15.000Z</published>
    <updated>2018-03-24T13:52:08.135Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>对于支持<code>UEFI</code>的机器，我们通常用<code>CLOVER</code>引导原版安装，这种方式最大的优点就是有恢复分区可以正常升级，当然前提要把引导做好。</p><h3 id="前期知识储备"><a href="#前期知识储备" class="headerlink" title="前期知识储备"></a>前期知识储备</h3><h4 id="CLOVER的目录结构"><a href="#CLOVER的目录结构" class="headerlink" title="CLOVER的目录结构"></a><code>CLOVER</code>的目录结构</h4><p><code>CLOVER</code>正常工作需要的完整目录包括<code>config.plist</code>、<code>CLOVERX64.efi</code>两个文件以及<code>ACPI</code>、<code>drivers64UEFI</code>、<code>kexts</code>、和<code>themes</code>几个目录，如图所示：</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2018-02-12-01.png" alt="2018-02-12-01"></p><p>其中，<code>config.plist</code>是最核心的文件—-配置文件，<code>CLOVER</code>所实现的多数功能都是通过这个文件进行配置的，对其进行配置修改的最好用的工具就是<code>Clover Configurator</code>，主页面如下：</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2018-02-12-02.png" alt="2018-02-12-02"></p><p>详细的配置方法下面会有介绍。</p><p>另外一个文件是<code>CLOVERX64.efi</code>，这个文件用以启动<code>CLOVER</code>引导，通过<code>EasyUEFI</code>或者<code>BIOS</code>对启动项进行添加操作时，就是指向的这个文件。</p><p><code>ACPI</code>是用以存放机器<code>ACPI</code>表单的，全称是”高级配置和电源管理接口”<code>(Advanced Configuration and Power Interface)</code>，其子目录由<code>origin</code>、<code>patched</code>、<code>WINDOWS</code>构成，其中<code>origin</code>用以保存通过在<code>CLOVER</code>引导界面按<code>F4</code>或<code>Fn F4</code>提取的原始表单，此目录的所有表文件是不加载的，需要对其进行编译得到<code>.dsl</code>文件，然后对其进行修改拍错，最后保存成<code>.aml</code>文件保存至<code>patched</code>目录才会在启动时加载，而<code>WINDOWS</code>目录则可以忽略不计。在黑果中，我们用到的表单文件只有<code>SSDT</code>和<code>DSDT</code>，其中<code>DSDT</code>主要是对各种设备的描述，而<code>SSDT</code>则主要是用以实现某个功能。</p><p><code>drivers64UEFI</code>是由各种<code>EFI</code>驱动组成，在笔记本黑果需要用到的有<code>FSInject-64.efi</code>、<code>HFSPlus-64.efi</code>、<code>OsxAptioFixDrv-64.efi</code>、<code>APFS.efi</code>以及<code>OsxFatBinaryDrv-64.efi</code>，在新版<code>CLOVER</code>中只需要<code>FSInject-64.efi</code>、<code>HFSPlus-64.efi</code>、<code>OsxAptioFixDrv-64.efi</code>、以及<code>APFS.efi</code></p><p><code>kexts</code>主要用于存储各种驱动(<code>OS X</code>称为内核扩展)</p><p><code>themes</code>用以存储<code>CLOVER</code>引导界面的主题</p><h4 id="根据机器配置定制kext"><a href="#根据机器配置定制kext" class="headerlink" title="根据机器配置定制kext"></a>根据机器配置定制<code>kext</code></h4><p><code>kext</code>在<code>EFI</code>的配置中是相当重要的，好的<code>kext</code>配置可以弥补<code>config</code>的不足，不好的<code>kext</code>配置也会让本应完美的<code>config</code>发挥不出作用。</p><p><code>FakeSMC.kext</code>:<code>FakeSMC</code>是现今的⿊黑苹果过程中唯⼀一的”必要性”内核扩展程序。对于⿊黑苹果有着⽆与伦比的重要性，但是很多⼈并不知道<code>FakeSMC</code>为什么重要，只是知道必须有它才⾏行，。简⽽而⾔言之就是: <code>FakeSMC</code>是⽤用于将<code>PC</code>主板上的各种控制芯⽚片伪装成Mac独有的硬件控制芯片<code>SMC</code>以骗过系统从⽽而是系统正常启动的⼀一个内核扩展(其实很复杂,这⾥里不多说了)。在系统启动的阶段，<code>FakeSMC</code>负责告知系统有关主板上<code>SMC</code>芯⽚片(伪装出来的)的各种加密信息，欺骗系统。也就是说呢，无论你笔记本是什么配置，此驱动是必须的。</p><p><code>ApplePS2SmartTouchPad.kext</code>、<code>VoodooI2C.kext</code>和<code>VoodooPS2Controller.kext</code>:此驱动用以驱动键盘鼠标以及触摸板，两者选择一个即可，两者区别就是适用的类型不一样，有<code>PS/2</code>、<code>Synaptics</code>、<code>alps</code>、<code>i2c</code>等等，其中<code>Synaptics</code>、<code>alps</code>用<code>ApplePS2SmartTouchPad.kext</code>适配性好一些，<code>VoodooI2C.kext</code>比较麻烦，仅适用于<code>i2c</code>触摸板。具体怎么确定走的总线类型，大家参考百度就好了，这里就不再赘述。</p><p><code>FakePCIID.kext</code>:这个kext的目的是与<code>IOPCIDevice</code>设备建立连接，以便当另一个驱动程序连接到同一设备时，它可以提供备用的<code>PCI ID</code>。也就是说，如果用到<code>Fake-PCI-ID</code>中的其他任何<code>kext</code>的话，此驱动都是必要的。</p><p><code>FakePCIID_Intel_HD_Graphics.kext</code>:此驱动主要用于核显<code>HD4200 HD4400 HD4600 P4600</code>、<code>Iris 540 Iris 550 Iris Pro 580</code>、<code>HD510 HD515 HD520 HD530 P530</code>（多数530不需要这个）、<code>P4000</code>、<code>P6300 - 162a</code>、<code>UHD620 KabyLake-R</code>、<code>UHD630 CoffeeLake</code>。</p><p><code>FakePCIID_Intel_HDMI_Audio.kext</code>:其目的是为不支持的<code>HDAU</code>提供支持(通常称为<code>B0D3</code>，但需要将其重命名为<code>HDAU</code>，以满足<code>Apple</code>的期望值)在<code>Haswell</code>以上的系统中提供<code>HDMI-audio</code>的设备。</p><p><code>FakePCIID_BCM57XX_as_BCM57765.kext</code>:这个<code>kext</code>将与众多不受支持的<code>BCM57XX</code>以太网设备建立连接，以使本机驱动程序为兼容的更广泛的<code>BCM</code>以太网芯片组工作。</p><p><code>FakePCIID_Intel_GbX.kext</code>:这个<code>kext</code>将与一些<code>Intel</code>以太网设备建立连接，以使基于<code>Intel</code>芯片组的驱动程序工作。</p><p><code>FakePCIID_XHCIMux.kext</code>:将会连接到8086:1e31, 8086:9c31, 8086:9cb1, 8086:9c31, 8086:8cb1这个注入器是正常的<code>FakePCIID</code>任务的一部分。它实际上并没有伪造任何<code>PCI id</code>。相反，它将某些值强加于<code>Intel XHCI USB3</code>控制器上的<code>XUSB2PR</code> (PCI配置偏移<code>0xD0</code>)。其效果是将任何<code>USB2</code>设备与<code>XHC</code>端口上的<code>USB2</code>引脚连接到<code>EHC1</code>。换句话说，使用USB2驱动而不是<code>USB3</code>驱动程序(<code>AppleUSBEHCI vs AppleUSBXHCI</code>)处理<code>USB2</code>设备。</p><p><code>FakePCIID_AR9280_as_AR946x</code>:这是<code>FakePCIID.kext</code>的特殊应用，是在一个<code>AR9280</code>被重新命名为其他设备的情况下使用的。例如，在联想<code>u430</code>中，将一个<code>AR9280</code>作为<code>AR946x</code>重新命名是很有用的，因为该设备可以被<code>BIOS</code>白名单所允许，而<code>AR9280</code>不是。通过使用<code>FakePCIID</code>，我们可以将<code>PCI id</code>重新映射回<code>AR9280</code> (168c:002a)，即使该设备本身报告的是168c:0034。</p><p><code>FakePCIID_Broadcom_WiFi.kext</code>:这个<code>kext</code>将连接到14e4:43b1, 14e4:4357, 14e4:4331, 14e4:4353, 14e4:432b, 14e4 . 432b, 14e4:43a3，或14e4:43a0。以及106b:4e, 14e4:4312, 14e4:4313, 14e4:4318, 14e4:431a, 14e4:4320, 14e4:4324, 14e4:4324, 14e4:4328, 14e4:432d。<br>最初是为<code>BCM94352Z</code>创建的，这个特殊的FakePCIID应用程序。在使用多种支持的Broadcom WiFi设备时，kext被用来模拟真正的<code>Apple Airport</code>(苹果无线网卡)。</p><p><code>ACPIBatteryManager.kext</code>:用以使笔记本正确显示电量，但通常需要配合<code>DSDT</code>的<code>patch</code>才能发挥作用。</p><p><code>VoodooHDA.kext</code>:万能声卡驱动，用以禁用<code>AppleHDA</code>来驱动声卡。</p><p><code>AppleALC.kext</code>:通过对<code>AppleHDA</code>的动态<code>patch</code>实现对<code>AppleHDA</code>的完整加载。</p><p><code>Lilu.kext</code>:一个开放源码的内核扩展，为macOS系统提供了一个任意的kext、库和程序补丁的平台。</p><p><code>IntelGraphicsDVMTFixup.kext</code>:修复因<code>BIOS</code>显存分配不足造成的<code>KP</code>。建议<code>broadwell+</code>平台使用。</p><p><code>IntelGraphicsFixup.kext</code>:动态修复核显的各种问题(例如腾讯视频死机，开机二阶段花屏等)，建议<code>Haswell+</code>平台使用。</p><p><code>CoreDisplayFixup.kext</code>:为不受支持的4K机器(非<code>Iris</code>)开启高分辨率支持。</p><p><code>AzulPatcher4600.kext</code>:针对<code>HD4600</code>的额外修复，仅推荐<code>HD4600</code>使用。</p><p><code>HibernationFixup.kext</code>:修复睡眠，以支持某些机器在3和28休眠模式下的正常休眠。</p><p><code>NvidiaGraphicsFixup.kext</code>:修复某些n卡的黑屏。</p><p><code>WhateverGreen.kext</code>:用以驱动A卡。</p><p><code>RealtekRTL8111.kext</code>:用以驱动<code>RealtekRTL8111.kext</code>以太网卡设备。</p><p><code>AppleIGB.kext</code>、<code>IntelMausiEthernet.kext</code>:用以驱动<code>Intel</code>板载网卡设备。</p><h4 id="根据机器配置定制config"><a href="#根据机器配置定制config" class="headerlink" title="根据机器配置定制config"></a>根据机器配置定制<code>config</code></h4><p>这里遵循一个原则，尽可能简单的设置<code>config</code>，不知道具体作用的就让他空着好了。</p><h4 id="了解drivers64UEFI各个-EFI文件的作用，精简引导"><a href="#了解drivers64UEFI各个-EFI文件的作用，精简引导" class="headerlink" title="了解drivers64UEFI各个.EFI文件的作用，精简引导"></a>了解<code>drivers64UEFI</code>各个<code>.EFI</code>文件的作用，精简引导</h4><h4 id="了解acpi的工作原理，完美黑苹果-进阶篇"><a href="#了解acpi的工作原理，完美黑苹果-进阶篇" class="headerlink" title="了解acpi的工作原理，完美黑苹果(进阶篇)"></a>了解<code>acpi</code>的工作原理，完美黑苹果(进阶篇)</h4><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>集成<code>CLOVER</code>的原版镜像<blockquote><p>链接:<a href="https://pan.baidu.com/s/1gfTmRj9" target="_blank" rel="noopener">https://pan.baidu.com/s/1gfTmRj9</a>  密码:s3dv</p></blockquote></li><li><code>Transmac</code><blockquote><p>链接:<a href="https://pan.baidu.com/s/1oAn79Zc" target="_blank" rel="noopener">https://pan.baidu.com/s/1oAn79Zc</a>  密码:yafn</p></blockquote></li><li><code>easyUEFI</code><blockquote><p>链接:<a href="https://pan.baidu.com/s/1nwqbnMp" target="_blank" rel="noopener">https://pan.baidu.com/s/1nwqbnMp</a>  密码:gxoc</p></blockquote></li><li><code>Clover Configurator</code>四叶草助手<blockquote><p>链接:<a href="https://pan.baidu.com/s/1ht2wFQW" target="_blank" rel="noopener">https://pan.baidu.com/s/1ht2wFQW</a>  密码:tbce</p></blockquote></li><li><code>DiskGenius</code><blockquote><p>链接:<a href="https://pan.baidu.com/s/1cVyULo" target="_blank" rel="noopener">https://pan.baidu.com/s/1cVyULo</a>  密码:pfrm</p></blockquote></li><li>鲁大师/<code>AIDA64</code>(推荐)/也可以用设备管理器<blockquote><p>自行度娘</p></blockquote></li></ul><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><h4 id="利用Transmac将原版镜像写入u盘"><a href="#利用Transmac将原版镜像写入u盘" class="headerlink" title="利用Transmac将原版镜像写入u盘"></a>利用<code>Transmac</code>将原版镜像写入u盘</h4><p>打开<code>TransMac</code>,右键选择欲制作的<code>USB</code>盘符，选择Restore with Disk Image,选择下载好的dmg文件,会弹出窗口,提示将要格式化USB磁盘,点击OK按钮继续，耐心等待写盘的完成。写入完成，若弹出对话框提示将其格式化，点击取消。<br><img src="http://ovefvi4g3.bkt.clouddn.com/TransMac1.png" alt="TransMac1"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/TransMac2.png" alt="TransMac2"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/TransMac3.png" alt="TransMac3"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/TransMac4.png" alt="TransMac4"></p><h4 id="利用鲁大师等软件查看自己机器的配置信息，来定制config和需要用的kext"><a href="#利用鲁大师等软件查看自己机器的配置信息，来定制config和需要用的kext" class="headerlink" title="利用鲁大师等软件查看自己机器的配置信息，来定制config和需要用的kext"></a>利用鲁大师等软件查看自己机器的配置信息，来定制<code>config</code>和需要用的<code>kext</code></h4><p>这一步想必不用我多说，大家利用鲁大师或者<code>AIDA64</code>看一下自己配置好了。有一点提示，尽量在安装过程中不考虑各种<code>kext</code>，尽量用少的驱动去安装，安装完成后再完善驱动，这样可以减少许多安装中的错误，也利于排错，但需要注意的必备的驱动一定要放，例如<code>FakeSMC.kext</code>、还有就是键盘驱动。当然老鸟无所谓了，直接把需要用到的都放上就<code>OK</code>了。以我自己机器为例，配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">主板       Asus X455LD Intel Haswell-ULT - Lynx Point-LP</span><br><span class="line"></span><br><span class="line">独立显卡    Nvidia GeForce 820M 2G </span><br><span class="line"></span><br><span class="line">核心显卡    HD4400</span><br><span class="line"></span><br><span class="line">声卡        Realtek @ Intel Lynx Point-LP  High Definition Audio (CX20751)</span><br><span class="line"></span><br><span class="line">以太网卡    Realtek RTL8168/8111/8112 Gigabit Ethernet Controller / Asus</span><br><span class="line"></span><br><span class="line">无线网卡    Atheros AR956X</span><br></pre></td></tr></table></figure><p>按照上面的驱动简要说明，我以太网卡是<code>RTL8111</code>，那么需要<code>RTL8111.kext</code>、核心显卡是<code>HD4400</code>，就需要<code>FakePCIID.kext</code>、<code>FakePCIID_Intel_HD_Graphics.kext</code>，声卡比较麻烦，暂时不考虑，无线网卡是<code>Atheros AR956X</code>，那么我需要<code>ATH9KFixup.kext</code>，又要依赖<code>Lilu.kext</code>，所以需要<code>Lilu.kext</code>，四代低压机器，我需要<code>IntelGraphicsFixup.kext</code>来解决腾讯视频死机的问题，所以放上这个。暂时只考虑这些驱动吧，下面就进入安装阶段。</p><h4 id="重启利用U盘启动选择安装盘"><a href="#重启利用U盘启动选择安装盘" class="headerlink" title="重启利用U盘启动选择安装盘"></a>重启利用<code>U</code>盘启动选择安装盘</h4><p>开机按<code>esc</code>键进入启动项列表，不同厂商热键不同，参考下图：<br><img src="http://ovefvi4g3.bkt.clouddn.com/BIOS.JPG" alt="BIOS"></p><p>选择<code>U</code>盘进入，这里就不介绍太多了，大家玩黑果的想必对<code>BIOS</code>不会陌生，不过需要注意的是需要将<code>BIOS</code>中的安全启动关掉。</p><p>接下来就会进入<code>CLOVER</code>引导界面<br><img src="http://ovefvi4g3.bkt.clouddn.com/XiaoMiCloverboot.png" alt="XiaoMiCloverboot"></p><p>通过键盘方向键选中<code>Boot OS X Install from ***</code>，<code>***</code>代表你的镜像名字，然后回车。<br><img src="http://ovefvi4g3.bkt.clouddn.com/ParallelsPicture.png" alt="ParallelsPicture"></p><p>等待进入安装界面。<br><img src="http://ovefvi4g3.bkt.clouddn.com/ParallelsPicture1.png" alt="ParallelsPicture1"></p><p>这里选择自己擅长的语言好啦。</p><h4 id="选择磁盘工具，并将事先分好的分区抹成扩展日志式或者apfs"><a href="#选择磁盘工具，并将事先分好的分区抹成扩展日志式或者apfs" class="headerlink" title="选择磁盘工具，并将事先分好的分区抹成扩展日志式或者apfs"></a>选择磁盘工具，并将事先分好的分区抹成扩展日志式或者<code>apfs</code></h4><p>选择磁盘工具，并继续<br><img src="http://ovefvi4g3.bkt.clouddn.com/ParallelsPicture0.png" alt="ParallelsPicture0"></p><p>选择<code>显示所有设备</code><br><img src="http://ovefvi4g3.bkt.clouddn.com/ParallelsPicture2.png" alt="ParallelsPicture2"></p><p>选择SSD Media,点击抹掉按钮,选择默认的<code>Mac OS</code>扩展(日志型)，在<code>10.13</code>中如果装在<code>SSD</code>上，也可以选择<code>APFS</code>,将名称修改为<code>Macintosh HD</code>（名字随意啦，自己喜欢就好，但要是英文）,点击抹掉按钮，抹掉完成后，点击完成按钮。<br><img src="http://ovefvi4g3.bkt.clouddn.com/ParallelsPicture7.png" alt="ParallelsPicture7"></p><p>然后退出磁盘工具，到这里，磁盘工具的动作就已经结束了。</p><h4 id="退出磁盘工具，选择安装macos选中刚才抹掉的分区开始安装"><a href="#退出磁盘工具，选择安装macos选中刚才抹掉的分区开始安装" class="headerlink" title="退出磁盘工具，选择安装macos选中刚才抹掉的分区开始安装"></a>退出磁盘工具，选择安装<code>macos</code>选中刚才抹掉的分区开始安装</h4><p>选择安装<code>macOS</code>，并继续<br><img src="http://ovefvi4g3.bkt.clouddn.com/ParallelsPicture8.png" alt="ParallelsPicture8"></p><p>接下来按照提示一步一步来就好了，有一步需要注意的就是选择安装分区时，选择自己之前抹掉的那个分区。<br><img src="http://ovefvi4g3.bkt.clouddn.com/ParallelsPicture 14.png" alt="ParallelsPicture 14"></p><p>接下来静静等待，会有一次自动重启，依然用<code>U</code>盘启动，注意这次会在引导界面多出一个图标，选择除第一次选的图标外的另一个图标。然后继续等待<br><img src="http://ovefvi4g3.bkt.clouddn.com/15218990390224.png" alt=""></p><p>系统安装完成后,重启进入系统设置向导，接下来根据下面的图一步一步设置就好了<br><img src="http://ovefvi4g3.bkt.clouddn.com/15218990840183.png" alt=""></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15218990903045.png" alt=""></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15218990970841.png" alt=""></p><p>这里选择现在不传输任何信息<br><img src="http://ovefvi4g3.bkt.clouddn.com/15218991032937.png" alt=""></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15218991134189.png" alt=""></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15218991182539.png" alt=""></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15218991276552.png" alt=""></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15218991350935.png" alt=""></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15218991452868.png" alt=""></p><p>这里注意，一定不要选择加密！！！<br><img src="http://ovefvi4g3.bkt.clouddn.com/15218991526744.png" alt=""></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15218991591740.png" alt=""></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/15218991634647.png" alt=""></p><h3 id="转移CLOVER到硬盘ESP，摆脱U盘引导"><a href="#转移CLOVER到硬盘ESP，摆脱U盘引导" class="headerlink" title="转移CLOVER到硬盘ESP，摆脱U盘引导"></a>转移<code>CLOVER</code>到硬盘<code>ESP</code>，摆脱<code>U</code>盘引导</h3><h3 id="后期的驱动安装以及优化"><a href="#后期的驱动安装以及优化" class="headerlink" title="后期的驱动安装以及优化"></a>后期的驱动安装以及优化</h3><h4 id="屏蔽无用的独显降低温度"><a href="#屏蔽无用的独显降低温度" class="headerlink" title="屏蔽无用的独显降低温度"></a>屏蔽无用的独显降低温度</h4><p>参考我之前的帖子：<a href="https://blog.iamzhl.top/2017/10/04/Disable%20the%20discrete%20GPU%20in%20laptop/">Disable the discrete GPU in laptop</a></p><h4 id="摆脱万能声卡，利用AppleALC加载原生声卡"><a href="#摆脱万能声卡，利用AppleALC加载原生声卡" class="headerlink" title="摆脱万能声卡，利用AppleALC加载原生声卡"></a>摆脱万能声卡，利用<code>AppleALC</code>加载原生声卡</h4><p>参考我之前的帖子：<a href="https://blog.iamzhl.top/2017/11/06/%E8%B0%88%E8%B0%88%E9%BB%91%E6%9E%9C%E7%9A%84%E5%A3%B0%E5%8D%A1/">谈谈黑果的声卡</a></p><h4 id="通过对DSDT打补丁完善电池显示"><a href="#通过对DSDT打补丁完善电池显示" class="headerlink" title="通过对DSDT打补丁完善电池显示"></a>通过对<code>DSDT</code>打补丁完善电池显示</h4><p>参考<code>pcbeta</code><a href="http://bbs.pcbeta.com/viewthread-1595139-1-1.html" target="_blank" rel="noopener">daxuexinsheng的帖子</a><br><code>tonymacx86</code><a href="https://www.tonymacx86.com/threads/guide-how-to-patch-dsdt-for-working-battery-status.116102/" target="_blank" rel="noopener">RehabMan的帖子</a></p><h4 id="加载x86实现变频和原生电源管理，完善节能器信息"><a href="#加载x86实现变频和原生电源管理，完善节能器信息" class="headerlink" title="加载x86实现变频和原生电源管理，完善节能器信息"></a>加载<code>x86</code>实现变频和原生电源管理，完善节能器信息</h4><ul><li>对于<code>Haswell</code>以及<code>Broadwell</code>平台，利用<code>ssdtPRGen</code>生成<code>SSDT</code>，在<code>config</code>中<code>drop</code>掉<code>CpuPm</code>和<code>Cpu0Ist</code>两个表，并利用<code>FakeSMC</code>或<code>DSDT</code>或<code>hotpatch</code>加载<code>AppleLPC</code></li><li>对于<code>Skylake</code>及以上平台，选择支持<code>HWP</code>的合适的机型，并勾选<code>HWPEnable</code>即可开启完整电源特性</li></ul><h4 id="修复八苹果二阶段花屏等问题完善显卡驱动"><a href="#修复八苹果二阶段花屏等问题完善显卡驱动" class="headerlink" title="修复八苹果二阶段花屏等问题完善显卡驱动"></a>修复八苹果二阶段花屏等问题完善显卡驱动</h4><h4 id="注入HiDPI和显示器信息完善唤醒后的花屏问题"><a href="#注入HiDPI和显示器信息完善唤醒后的花屏问题" class="headerlink" title="注入HiDPI和显示器信息完善唤醒后的花屏问题"></a>注入<code>HiDPI</code>和显示器信息完善唤醒后的花屏问题</h4>]]></content>
    
    <summary type="html">
    
      Install macOS on laptop 原版黑苹果安装参考贴
    
    </summary>
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/categories/Hacintosh/"/>
    
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/tags/Hacintosh/"/>
    
      <category term="黑苹果" scheme="https://blog.iamzhl.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>Dell-Inspiron-15-7000-i7-8550u</title>
    <link href="https://blog.iamzhl.top/Dell-Inspiron-15-7000-i7-8550u.html"/>
    <id>https://blog.iamzhl.top/Dell-Inspiron-15-7000-i7-8550u.html</id>
    <published>2017-12-10T14:16:01.000Z</published>
    <updated>2017-12-24T11:35:03.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="Laptop-Configuration"><a href="#Laptop-Configuration" class="headerlink" title="Laptop Configuration"></a>Laptop Configuration</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br></pre></td><td class="code"><pre><span class="line">  --------[ 鲁大师 ]--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">  软件:             鲁大师 5.15.16.1025</span><br><span class="line">  时间:             2017-12-10 04:49:26</span><br><span class="line">  网站:             http://www.ludashi.com</span><br><span class="line"></span><br><span class="line">--------[ 概览 ]----------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">  电脑型号            戴尔 Inspiron 7572 笔记本电脑</span><br><span class="line">  操作系统            Windows 10 64位 ( DirectX 12 )</span><br><span class="line"></span><br><span class="line">  处理器              英特尔 Core i7-8550U @ 1.80GHz 四核</span><br><span class="line">  主板                戴尔 0JV22R ( 英特尔 Xeon E3 - 1200 v6/7th Gen Intel Core/DRAM Registers - 5914 - 7th Generation Intel Processor Fami )</span><br><span class="line">  显卡                英特尔 UHD Graphics 620 ( 128 MB / 戴尔 )</span><br><span class="line">  内存                8 GB ( 海力士 DDR4 2401MHz )</span><br><span class="line">  主硬盘              闪迪 X400 M.2 2280 128GB ( 128 GB / 固态硬盘 )</span><br><span class="line">  显示器              京东方 BOE06B4 ( 15.3 英寸  )</span><br><span class="line">  声卡                瑞昱  @ 英特尔 High Definition Audio 控制器</span><br><span class="line">  网卡                瑞昱 RTL8168/8111/8112 Gigabit Ethernet Controller / 戴尔</span><br><span class="line"></span><br><span class="line">--------[ 主板 ]----------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">  主板型号            戴尔 0JV22R</span><br><span class="line">  芯片组              英特尔 Xeon E3 - 1200 v6/7th Gen Intel Core/DRAM Registers - 5914 - 7th Generation Intel Processor Fami</span><br><span class="line">  序列号              /CN3QYL2/CN1296679U0050/</span><br><span class="line">  主板版本            A00</span><br><span class="line">  BIOS                戴尔 Inc. 1.0.0  /  制造日期: 2017年08月14日</span><br><span class="line">  BIOS的大小          16384 KB</span><br><span class="line"></span><br><span class="line">  板载设备            &quot;Intel HD Graphics&quot; / 视频设备 (启用)</span><br><span class="line"></span><br><span class="line">--------[ 处理器 ]--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">  处理器              英特尔 Core i7-8550U @ 1.80GHz 四核</span><br><span class="line">  速度                3.70 GHz (100 MHz x 37.0)</span><br><span class="line">  处理器数量          核心数: 4 / 线程数: 8</span><br><span class="line">  插槽/插座           U3E1</span><br><span class="line">  一级数据缓存        4 x 32 KB, 8-Way, 64 byte lines</span><br><span class="line">  一级代码缓存        4 x 32 KB, 8-Way, 64 byte lines</span><br><span class="line">  二级缓存            4 x 256 KB, 4-Way, 64 byte lines</span><br><span class="line">  三级缓存            8 MB, 16-Way, 64 byte lines</span><br><span class="line">  特征                MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, HTT, EM64T, EIST, Turbo Boost</span><br><span class="line"></span><br><span class="line">--------[ 硬盘 ]----------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">  产品                希捷 ST1000LM035-1RK172</span><br><span class="line">  大小                1 TB</span><br><span class="line">  转速                10000 转/分</span><br><span class="line">  硬盘已使用          共 100 次，累计 40 小时</span><br><span class="line">  固件                SDM2    </span><br><span class="line">  接口                SATA Rev 2.5</span><br><span class="line">  数据传输率          300 MB/秒</span><br><span class="line">  特征                S.M.A.R.T,  APM,  48-bit LBA,  NCQ</span><br><span class="line"></span><br><span class="line">  产品                闪迪  X400 M.2 2280 128GB (固态硬盘)</span><br><span class="line">  大小                128 GB</span><br><span class="line">  硬盘已使用          共 102 次，累计 42 小时</span><br><span class="line">  固件                X4152012</span><br><span class="line">  接口                SATA III</span><br><span class="line">  数据传输率          600 MB/秒</span><br><span class="line">  特征                S.M.A.R.T,  APM,  48-bit LBA,  NCQ</span><br><span class="line"></span><br><span class="line">  产品                日立 HGST HTS545050A7E680</span><br><span class="line">  大小                500 GB</span><br><span class="line">  转速                5400 转/分</span><br><span class="line">  缓存                8 MB</span><br><span class="line">  接口                SATA III</span><br><span class="line">  数据传输率          600.00 MB/秒</span><br><span class="line"></span><br><span class="line">--------[ 内存 ]----------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">  DIMM 1              海力士 DDR4 2401MHz 8GB</span><br><span class="line">  制造日期            2017 年 08月</span><br><span class="line">  型号                AD HMA81GS6AFR8N-UH</span><br><span class="line">  序列号              81B5711B</span><br><span class="line">  厂商                Hynix</span><br><span class="line">  模块位宽:           64 Bits</span><br><span class="line">  模块电压:           SSTL 1.2V</span><br><span class="line"></span><br><span class="line">--------[ 显卡 ]----------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">  主显卡              英特尔 UHD Graphics 620</span><br><span class="line">  显存                128 MB</span><br><span class="line">  制造商              戴尔</span><br><span class="line">  制造商              Intel</span><br><span class="line">  驱动版本            22.20.16.4735</span><br><span class="line">  驱动日期            2017年07月07日</span><br><span class="line"></span><br><span class="line">  显卡                Nvidia GeForce MX150</span><br><span class="line">  显存                4 GB</span><br><span class="line">  制造商              戴尔</span><br><span class="line">  制造商              Nvidia</span><br><span class="line">  驱动版本            22.21.13.8278</span><br><span class="line">  驱动日期            2017年07月10日</span><br><span class="line"></span><br><span class="line">--------[ 显示器 ]--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">  产品                京东方 BOE06B4</span><br><span class="line">  厂商                京东方</span><br><span class="line">  固件日期            2016 年 01月</span><br><span class="line">  屏幕尺寸            15.3 英寸 (34 厘米 x 19 厘米)</span><br><span class="line">  显示比例            宽屏 16 : 9</span><br><span class="line">  分辨率              1536 x 864 32 位真彩色</span><br><span class="line">  Gamma               2.20</span><br><span class="line">  最大分辨率          1920 x 1080</span><br><span class="line"></span><br><span class="line">--------[ 其他设备 ]------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  网卡                瑞昱 RTL8168/8111/8112 Gigabit Ethernet Controller</span><br><span class="line">  制造商              戴尔</span><br><span class="line"></span><br><span class="line">  无线网卡            Atheros Killer Wireless-n/a/ac 1525 Wireless Network Adapter</span><br><span class="line">  制造商              戴尔</span><br><span class="line"></span><br><span class="line">  声卡                瑞昱  @ 英特尔 High Definition Audio 控制器</span><br><span class="line"></span><br><span class="line">  键盘                PS/2 标准键盘</span><br><span class="line">  键盘                HID 标准键盘</span><br><span class="line">  鼠标                HID-compliant 鼠标</span><br><span class="line">  鼠标                PS/2 兼容鼠标</span><br><span class="line">  鼠标                HID-compliant 鼠标</span><br><span class="line"></span><br><span class="line">  摄像头              Integrated Webcam</span><br><span class="line"></span><br><span class="line">--------[ PCI设备 ]-------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">  设备                Xeon E3 - 1200 v6/7th Gen Intel Core Host Bridge/DRAM Registers - 5914</span><br><span class="line">  设备ID              5914</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Bridge / PCI to HOST</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                UHD Graphics 620</span><br><span class="line">  设备ID              5917</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Display / VGA</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                Dynamic Platform and Thermal Framework Processor Participant</span><br><span class="line">  设备ID              1903</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Data Aquisition &amp; Signal Processing / Other</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                USB 3.0 可扩展主机控制器 - 1.0 (Microsoft)</span><br><span class="line">  设备ID              9D2F</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Serial / USB (UHCI)</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                100 Series Chipset Family Thermal subsystem - 9D31</span><br><span class="line">  设备ID              9D31</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Data Aquisition &amp; Signal Processing / Other</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                Serial IO I2C Host Controller - 9D60</span><br><span class="line">  设备ID              9D60</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Data Aquisition &amp; Signal Processing / Other</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                Management Engine Interface</span><br><span class="line">  设备ID              9D3A</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Simple Communication / Other</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                6th Generation Core Processor Family Platform I/O SATA AHCI Controller</span><br><span class="line">  设备ID              9D03</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Storage / Serial ATA (AHCI 1.0)</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                100 Series Chipset Family PCI Express Root Port #1 - 9D10</span><br><span class="line">  设备ID              9D10</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Bridge / PCI to PCI</span><br><span class="line">  子系统ID            00000000</span><br><span class="line"></span><br><span class="line">  设备                100 Series Chipset Family PCI Express Root Port #5 - 9D14</span><br><span class="line">  设备ID              9D14</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Bridge / PCI to PCI</span><br><span class="line">  子系统ID            00000000</span><br><span class="line"></span><br><span class="line">  设备                100 Series Chipset Family PCI Express Root Port #6 - 9D15</span><br><span class="line">  设备ID              9D15</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Bridge / PCI to PCI</span><br><span class="line">  子系统ID            00000000</span><br><span class="line"></span><br><span class="line">  设备                Mobile 6th Generation Intel Processor Family I/O SCC: SDCard - 9D2D</span><br><span class="line">  设备ID              9D2D</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                System / SD Host Controller (With DMA)</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                Mobile 7th Generation Intel Processor Family I/O LPC Controller  - 9D4E</span><br><span class="line">  设备ID              9D4E</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Bridge / PCI to ISA</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                100 Series Chipset Family PMC - 9D21</span><br><span class="line">  设备ID              9D21</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Memory / Other</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                High Definition Audio 控制器</span><br><span class="line">  设备ID              9D71</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Multimedia / Hi-definition Audio</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                100 Series Chipset Family SMBus - 9D23</span><br><span class="line">  设备ID              9D23</span><br><span class="line">  制造商              Intel</span><br><span class="line">  制造商ID            8086</span><br><span class="line">  类别                Serial / SMBus Controller</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                GeForce MX150</span><br><span class="line">  设备ID              1D10</span><br><span class="line">  制造商              Nvidia</span><br><span class="line">  制造商ID            10DE</span><br><span class="line">  类别                Display / 3D</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                RTL8168/8111/8112 Gigabit Ethernet Controller</span><br><span class="line">  设备ID              8168</span><br><span class="line">  制造商              Realtek</span><br><span class="line">  制造商ID            10EC</span><br><span class="line">  类别                Network / Ethernet</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            08291028</span><br><span class="line"></span><br><span class="line">  设备                Killer Wireless-n/a/ac 1525 Wireless Network Adapter</span><br><span class="line">  设备ID              003E</span><br><span class="line">  制造商              Atheros</span><br><span class="line">  制造商ID            168C</span><br><span class="line">  类别                Network / Other</span><br><span class="line">  子系统制造商        Dell</span><br><span class="line">  子系统ID            03101028</span><br><span class="line"></span><br><span class="line">--------[ USB设备 ]-------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">  制造商ID            152D</span><br><span class="line">  产品ID              1337</span><br><span class="line">  类别                0 / 0 / 0</span><br><span class="line">  设备                jmicron jmicron</span><br><span class="line">  Serial              7F833EEF5DC0</span><br><span class="line"></span><br><span class="line">  制造商ID            0BDA</span><br><span class="line">  产品ID              5689</span><br><span class="line">  类别                239 / 2 / 1</span><br><span class="line">  设备                 </span><br><span class="line">  版本                USB 2.0</span><br><span class="line"></span><br><span class="line">  制造商ID            1C4F</span><br><span class="line">  产品ID              0034</span><br><span class="line">  类别                0 / 0 / 0</span><br><span class="line">  设备                SIGMACHIP Usb Mouse</span><br><span class="line">  Serial              ?</span><br><span class="line">  版本                USB 1.1</span><br><span class="line"></span><br><span class="line">  制造商ID            0CF3</span><br><span class="line">  产品ID              E007</span><br><span class="line">  类别                224 / 1 / 1</span><br><span class="line">  设备                 </span><br><span class="line"></span><br><span class="line">  制造商ID            0BDA</span><br><span class="line">  产品ID              0129</span><br><span class="line">  类别                255 / 255 / 255</span><br><span class="line">  设备                 </span><br><span class="line">  版本                USB 2.0</span><br><span class="line"></span><br><span class="line">--------[ 传感器 ]--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">  CPU温度             40℃</span><br><span class="line">  CPU核心             42℃</span><br><span class="line">  CPU封装             42℃</span><br><span class="line">  显卡                39℃</span><br><span class="line">  硬盘温度            31℃</span><br></pre></td></tr></table></figure><h3 id="Working"><a href="#Working" class="headerlink" title="Working"></a>Working</h3><p><img src="http://ovefvi4g3.bkt.clouddn.com/A4C5E5590760CD1B634DB9526DCEFCA6.jpg" alt="A4C5E5590760CD1B634DB9526DCEFCA6"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/3A6FDF0DCDF0B5CC0EA4CFC0F311B81B.png" alt="3A6FDF0DCDF0B5CC0EA4CFC0F311B81B"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/876897606D5AAFFF05E2475F95B1FA04.png" alt="876897606D5AAFFF05E2475F95B1FA04"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/3213D705B050854F128A07045E4645E7.png" alt="3213D705B050854F128A07045E4645E7"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/7404EB29D7D9BE0F5644C1B005C64779.png" alt="7404EB29D7D9BE0F5644C1B005C64779"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/ED95F604D75FA1B372C075FA8ACB9541.png" alt="ED95F604D75FA1B372C075FA8ACB9541"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/141EED2BD61D4C75567A5691BDD56DA6.png" alt="141EED2BD61D4C75567A5691BDD56DA6"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/82C154E4F424C587C1E1D26EE3F2EDEF.png" alt="82C154E4F424C587C1E1D26EE3F2EDEF"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/D683083BBDCF4E8077E6284A1C295167.png" alt="D683083BBDCF4E8077E6284A1C295167"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2D86E90BAD82BA815EB1EC7329ADBBBF.png" alt="2D86E90BAD82BA815EB1EC7329ADBBBF"></p><h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><p><code>DisplayVendorID-9e5</code> can fix problems after sleep and awake such as macroblocking。Please put it in <code>/System/Library/Displays/Contents/Resources/Overrides/</code>。</p><h3 id="Clover-EFI-bootloader"><a href="#Clover-EFI-bootloader" class="headerlink" title="Clover EFI bootloader"></a>Clover EFI bootloader</h3><p><a href="https://github.com/athlonreg/Dell-Inspiron-15-7000-i7-8550u" target="_blank" rel="noopener">Dell-Inspiron-15-7000-i7-8550u</a></p><h3 id="Finally"><a href="#Finally" class="headerlink" title="Finally"></a>Finally</h3><p>Please respect the author’s work and reprint the source!</p>]]></content>
    
    <summary type="html">
    
      Install macOS High Sierra on Dell Inspiron 15 7000 i7 8550u
    
    </summary>
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/categories/Hacintosh/"/>
    
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/tags/Hacintosh/"/>
    
      <category term="燃7000" scheme="https://blog.iamzhl.top/tags/%E7%87%837000/"/>
    
  </entry>
  
  <entry>
    <title>Change NetBeans&#39;s language to Chinese in macOS</title>
    <link href="https://blog.iamzhl.top/Change-NetBeans&#39;s-language-to-Chinese-in-macOS.html"/>
    <id>https://blog.iamzhl.top/Change-NetBeans&#39;s-language-to-Chinese-in-macOS.html</id>
    <published>2017-12-08T18:36:23.000Z</published>
    <updated>2017-12-24T11:38:11.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="macOS下修改NetBeans的界面语言"><a href="#macOS下修改NetBeans的界面语言" class="headerlink" title="macOS下修改NetBeans的界面语言"></a><code>macOS</code>下修改<code>NetBeans</code>的界面语言</h2><p>在<code>Applications</code>中找到<code>NetBeans</code>的安装目录：<code>/Applications/NetBeans/NetBeans 8.2.app/Contents/Resources/NetBeans/etc/netbeans.conf</code>，以纯文本文档格式打开，搜索<code>netbeans_default_options</code>，在最后加上<code>--locale zh:CN</code>，改为英文则是<code>--locale en:US</code>，如图所示：</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/20171209-0.png" alt="20171209-0"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/20171209-1.png" alt="20171209-1"></p>]]></content>
    
    <summary type="html">
    
      macOS 下修改 NetBeans 的界面语言
    
    </summary>
    
      <category term="Study" scheme="https://blog.iamzhl.top/categories/Study/"/>
    
    
      <category term="NetBeans" scheme="https://blog.iamzhl.top/tags/NetBeans/"/>
    
  </entry>
  
  <entry>
    <title>Driver audio for hackintosh</title>
    <link href="https://blog.iamzhl.top/Driver-audio-for-hackintosh.html"/>
    <id>https://blog.iamzhl.top/Driver-audio-for-hackintosh.html</id>
    <published>2017-11-05T16:00:00.000Z</published>
    <updated>2017-12-24T11:07:12.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>在<code>vit9696</code>推出<code>AppleALC</code>后，经过越来越多人仿冒声卡得到的数据的提交整理，<code>AppleALC</code>的数据越来越集中，也使声卡驱动变得越来越简单。</p><p>本文提供使用<code>AppleALC</code>驱动声卡的思路以及常见错误和驱动后的问题进行修复。</p></blockquote><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ul><li><p>需要下载<code>Xcode</code></p><blockquote><p>在<code>AppleStore</code>下载</p></blockquote></li><li><p>下载<code>AppleALC</code></p><blockquote><p>通过终端执行下面的命令，会下载到你的用户根目录</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/vit9696/AppleALC</span><br></pre></td></tr></table></figure><ul><li>下载<code>Lilu</code><blockquote><p>在下面的网址下载<code>DEBUG</code>和<code>RELEASE</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/vit9696/Lilu/releases</span><br></pre></td></tr></table></figure><ul><li>提取<code>Codec</code><blockquote><p>这一步需要用到<code>Linux</code>环境，首先下载<code>Ubuntu</code>镜像，我个人提供一个</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">链接:http://pan.baidu.com/s/1i47I0jN  密码:de4v</span><br></pre></td></tr></table></figure><blockquote><p>当然也可以去官网下载，下载好镜像之后，将<code>U</code>盘格式化为<code>Fat32</code>，然后将镜像解压到<code>U</code>盘，重启以<code>U</code>盘启动，选择试用进入<code>Ubuntu</code>系统界面，打开终端输入</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /proc/asound/card0/codec#0 &gt; ~/Desktop/Codec.txt</span><br></pre></td></tr></table></figure><blockquote><p>执行完后会将<code>Codec.txt</code>提取到桌面，将其保存到<code>U</code>盘</p></blockquote><p><strong>PS: 一般来说提取的<code>Codec</code>会有<code>10k</code>左右大小，如果大小不够，很有可能提取错误，可以尝试以下命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /proc/asound/card0/codec#1 &gt; ~/Desktop/Codec.txt</span><br></pre></td></tr></table></figure><blockquote><p>或者</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /proc/asound/card0/codec#2 &gt; ~/Desktop/Codec.txt</span><br></pre></td></tr></table></figure><blockquote><p>或者</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /proc/asound/card1/codec#0 &gt; ~/Desktop/Codec.txt</span><br></pre></td></tr></table></figure><h2 id="Codec-txt的数据整理"><a href="#Codec-txt的数据整理" class="headerlink" title="Codec.txt的数据整理"></a><code>Codec.txt</code>的数据整理</h2><ul><li>记录<code>Address</code>和<code>Vendor Id</code>值</li></ul><blockquote><p><code>Codec.txt</code>开头部分</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-05.png" alt="2017-11-06-05"></p><ul><li>提取节点信息</li></ul><blockquote><p>搜索<code>Pin Default</code>记录<code>Node</code>和节点描述，以我的为例</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-03.png" alt="2017-11-06-03"></p><p><strong>PS: N/A节点无效无需整理，如下面的不需要整理</strong></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-04.png" alt="2017-11-06-04"></p><ul><li>记录<code>HP Out at Ext Left</code>节点的<code>tag</code>和<code>enable</code>值</li></ul><blockquote><p>PS: Unsolicited Response的设定是为了解决耳机和外放切换的问题。<br>需设定 HP Out at Ext 所在的节点，并且节点信息中有Unsolicited: tag=xx, enabled=1 这一行。<br>设定命令为Address+NodeID+708+&lt;设定值&gt;</p><p>设定值是8位的一个二进制数，记作a7 a6 a5 a4 a3 a2 a1 a0，推算出此二进制数之后，四四拆分转换为2位的十进制数加1即为此设定值</p><p>a7表示enabled。<br>a6=0，没具体应用，不用管。<br>a5~a0，存放tag。**</p></blockquote><ul><li>记录<code>Mic at Ext</code>节点的<code>Pin-ctls</code>值</li></ul><blockquote><p>PS: Pin Control Widget的设定是为了解决耳机杂音的。</p><p>需要设定的是 Mic at Ext  所在的节点，设定的值可以从codec dump中读取。</p><p>设定命令是 Address+NodeID+707+Pin-ctls值。</p></blockquote><blockquote><p>整理完后，会得到如下所示的数据集合</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-06.png" alt="2017-11-06-06"></p><p><strong>PS: 常见的节点设备描述如下：</strong></p><blockquote><p><code>Mic at Ext</code>–线路输入(耳麦)</p><p><code>Mic at In</code>–内建输入</p><p><code>HP Out</code>–耳机扬声器</p><p><code>Speaker</code>–内建扬声器(外放)</p></blockquote><p align="center"><b>至此，Codec 数据的整理到此结束</b></p><h2 id="AppleALC中数据的筛选"><a href="#AppleALC中数据的筛选" class="headerlink" title="AppleALC中数据的筛选"></a><code>AppleALC</code>中数据的筛选</h2><blockquote><p>依次打开下载的<code>AppleALC</code>源码里面<code>/AppleALC/Resources/PinConfigs.kext/Contents</code>下的<code>Info.plist</code></p><p>搜索之前记录的<code>CodecID</code></p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-07.png" alt="2017-11-06-07"></p><blockquote><p>记录搜索到的所有的<code>ID</code>中的<code>configdata</code>，如下整理</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-08.png" alt="2017-11-06-08"></p><blockquote><p>每一行的每一串的第一个字符代表<code>Address</code>值</p></blockquote><blockquote><p>每一行的第三串倒数第二个字符代表这个节点的设备描述，具体对应关系如下</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-01.png" alt="2017-11-06-01"></p><blockquote><p>根据上图设备对应关系和<code>Address</code>值排除掉无效的<code>ID</code>数据</p></blockquote><h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><ul><li>将下载的<code>Debug</code>的<code>Lilu.kext</code>放进 AppleALC 源码根目录；</li><li>删除<code>/AppleALC/Resources</code>中多余文件夹，只留下你的声卡型号文件夹、<code>Pinconfigs.kext</code>以及四个<code>plist</code>文件，以<code>cx20751</code>这个声卡为例剩下如下文件</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-2.png" alt="ALC-2"></p><ul><li>然后打开计算器，显示为编程器</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-3.png" alt="ALC-3"></p><ul><li>打开你整理的<code>Codec</code>，找到<code>Vendor Id</code>，拷贝后面的字符串，在计算器选中十六进制，粘贴这个字符串</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-4.png" alt="ALC-4"></p><ul><li>然后选中十进制，就换转换成十进制形式</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-5.png" alt="ALC-5"></p><ul><li>拷贝这个十进制数，打开<code>/AppleALC/Resources/CX20751_2/Info.plist</code>(此处的<code>CX20751_2</code>需要换成你的声卡型号)，把<code>codecid</code>换成刚才拷贝的十进制数</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-6.png" alt="ALC-6"></p><ul><li><p>保存退出，右键<code>PinConfigs.kext</code>显示包内容，打开里面的<code>Info.plist</code>，搜索刚才拷贝的十进制数，记下<code>LayoutID</code>数据，有几个记几个，都记下来，然后将<code>IOKitPersonalities-&gt;HDA Hardware Config Resource-&gt;HDAConfigDefault</code>中的其他型号删除，(为避免出错，这里的删除可以不操作，删除只是为了精简做出来的<code>AppleALC</code>)，保存退出。</p></li><li><p>然后双击打开 AppleALC 中的工程文件：</p></li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-7.png" alt="ALC-7"></p><ul><li>按图示操作</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-8.png" alt="ALC-8"></p><ul><li>点击右面的<code>export</code> </li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-9.png" alt="ALC-9"></p><ul><li>next </li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-10.png" alt="ALC-10"></p><ul><li><code>where</code>填上桌面，点<code>export</code>就生成<code>AppleALC</code>在桌面上了，一层一层打开它，将其中的<code>AppleALC.kext</code>放到<code>clover</code>驱动目录，注意之前下载的<code>Release</code>的<code>Lilu</code>也要放到<code>clover</code>驱动目录，最后不要忘了在<code>config</code>注入<code>LayoutID</code>：</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-11.png" alt="ALC-11"></p><ul><li>如图<code>Audio</code>处写上刚才记下的<code>LayoutID</code>，如果重启后你的声卡不能驱动，或者已驱动但是没有输入或输出，这时很有可能是该<code>LayoutID</code>对应的<code>configdata</code>数据有错误，这时就挨个尝试刚才记录的所有<code>ID</code>。</li></ul><p align="center"><b>至此， AppleALC 驱动声卡部分结束。</b></p><h2 id="关于解决耳机与内建输入的切换"><a href="#关于解决耳机与内建输入的切换" class="headerlink" title="关于解决耳机与内建输入的切换"></a>关于解决耳机与内建输入的切换</h2><blockquote><p>如果驱动工作完成后，声卡可以工作，但不能自动切换，请接着往下看</p></blockquote><ul><li>打开终端，输入 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/goodwin/ALCPlugFix</span><br></pre></td></tr></table></figure><ul><li>回车就将<code>ALCPlugFix</code>下载到了你的用户目录，打开此目录中的<code>ALCPlugFix</code>中的<code>main.m</code>下拉到最下方，注意这一部分：</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-12.png" alt="ALC-12"></p><ul><li>下载<a href="https://github.com/athlonreg/ALCPlugFix" target="_blank" rel="noopener"><code>had-tools</code></a>,将<code>codec</code>复制到<code>had-tools</code>目录，打开终端，<code>cd</code>到此目录，输入 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./widget_dump.sh</span><br></pre></td></tr></table></figure><ul><li>回车</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-13.png" alt="ALC-13"></p><ul><li>找到<code>nid = 0x19</code>和<code>nid = 0x1a</code>，这里我的<code>19</code>为 <code>line in</code>，<code>1a</code>为<code>mic in</code>，记录下最后两位，我的是<code>04</code>和<code>24</code>就这么改</li></ul><p><strong>PS: 这里需要设定的节点数据分别是<code>line in</code>和<code>mic in</code>，其他节点无效，思想就是捕获系统在不插耳机时由于其输入输出正常的这两个节点的输出值，然后就可以知道插耳机正常应该输出的值，进而利用<code>AppleALC</code>守护进程动态守护。如果出现插耳机正常，不插无效的情况，请按照这个思路反过来操作，思想都是一样的。其中图上的高亮处最上面一部分是默认情况，中间是耳机移除，最下面是耳机插入，请结合自身使用情况合理设定</strong></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-14.png" alt="ALC-14"></p><ul><li>保存退出，双击按照<code>AppleALC</code>的编译方法编译这个</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-15.png" alt="ALC-15"></p><ul><li>然后将生成的<code>ALCPlugFix</code>替换<code>alc_fix</code>中的<code>ALCPlugFix</code>，终端<code>cd</code>到<code>alc_fix</code>目录，执行 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.sh</span><br></pre></td></tr></table></figure><ul><li>耳机就可以自动切换了，三节点的朋友运气好的话杂音应该也解决了，这时插入耳机在执行 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./widget_dump.sh</span><br></pre></td></tr></table></figure><ul><li>就可以发现之前的<code>19</code>和<code>1a</code>后面的数据反过来了</li></ul><blockquote><p>其实这里的数据就是侦测耳机插拔状态，向系统发送相关指令来做到切换正常</p><p>需要设定的就是两个节点<code>Mic at Ext</code>(有时是<code>Line In</code>)和<code>Mic at In</code></p><p><code>Mic at Ext</code>(有时是<code>Line In</code>)表示线路输入，即<code>耳麦</code>，多为<code>0x19</code>节点</p><p><code>Mic at In</code>为内建输入</p></blockquote><ul><li><strong>PS: 如果<code>widget_dump.sh</code>脚本得不到想要的结果，请在<a href="https://bitbucket.org/RehabMan/os-x-eapd-codec-commander/downloads/" target="_blank" rel="noopener">点击这里</a>下载<code>CodecCommander</code>，将<code>Release</code>里面的<code>hda-verb</code>利用命令拷贝到<code>/usr/bin/</code></strong></li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-16.png" alt="ALC-16"></p><ul><li>如果不行重启一次应该就好了。</li></ul><p align="center"><b>至此，解决耳机与内建输入的切换部分结束。</b></p><h2 id="关于唤醒无声"><a href="#关于唤醒无声" class="headerlink" title="关于唤醒无声"></a>关于唤醒无声</h2><blockquote><p>可以先尝试下面两个驱动</p><p><a href="https://github.com/RehabMan/EAPD-Codec-Commander" target="_blank" rel="noopener">CodecCommander</a><br><a href="http://pan.baidu.com/s/1nuTUVS9" target="_blank" rel="noopener">EAPDFix</a> 提取密码:<code>w4yr</code></p></blockquote><p><strong>PS: 关于<code>CodecCommander</code>，可以<a href="https://github.com/RehabMan/EAPD-Codec-Commander/blob/master/README.md" target="_blank" rel="noopener">点击这里</a>参考<code>RehabMan</code>的说明</strong></p><blockquote><p>另外四叶草助手中也提供了相关选项(<code>ResetHDA</code>和<code>dartweak</code>)，但是本人没有亲自尝试，大家可以自行尝试这些组合：</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-09.png" alt="2017-11-06-09"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-10.png" alt="2017-11-06-10"></p><p align="center"><b>本人对唤醒无声研究不多，至此，解决耳机与内建输入的切换部分结束，欢迎补充。</b></p><h2 id="关于万能声卡"><a href="#关于万能声卡" class="headerlink" title="关于万能声卡"></a>关于万能声卡</h2><blockquote><p>很多人不喜欢万能声卡，说万能有杂音(但是<code>有一些人的AppleALC</code>也可能有杂音)，甚至说用万能声卡是不完美的表现，其实我认为不然，万能是一种很好的渠道，有不少人用万能声卡，他们的切换、输入甚至<code>HDMI</code>都能很好的输出，而且杂音也是可以减小的。</p><p>这里我给出官方的项目地址，有兴趣的可以试一下</p><p><a href="https://sourceforge.net/projects/voodoohda/" target="_blank" rel="noopener">https://sourceforge.net/projects/voodoohda/</a></p></blockquote><p><strong>PS: 需要注意的是有人用的是<code>VoodooHDA.pkg</code>安装的，这种情况需要将<code>AppleHDADisabler.kext</code>放到<code>Clover</code>的驱动目录来禁用<code>AppleHDA</code>，否则很有可能会造成<code>KP</code>五果，所以我建议直接用<code>kext</code>，让<code>Clover</code>注入器注入即可。</strong></p><h2 id="关于完整仿冒"><a href="#关于完整仿冒" class="headerlink" title="关于完整仿冒"></a>关于完整仿冒</h2><h3 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h3><blockquote><p>声卡型号众多，虽然<code>AppleALC</code>让数据更集中了，但还是有些声卡不在目前的<code>AppleALC</code>支持的列表里面，对于这种情况来说，我们只能完整制作仿冒声卡。</p><p>接下来以我的<code>CX20751</code>为例简述仿冒声卡制作过程。</p></blockquote><h3 id="完整制作仿冒声卡思路"><a href="#完整制作仿冒声卡思路" class="headerlink" title="完整制作仿冒声卡思路"></a>完整制作仿冒声卡思路</h3><ul><li>整理<code>Codec</code>，提取所有有效<code>Node</code>值</li><li>将整理出的所有<code>Node</code>的<code>Pin Default</code>值进行转换得出需要的值</li><li>根据某些规律或者规则得出<code>ConfigData</code></li><li><code>PathMap</code>的获取和整理</li></ul><h3 id="知识普及"><a href="#知识普及" class="headerlink" title="知识普及"></a>知识普及</h3><blockquote><p>每一个<code>Node</code>的<code>ConfigData</code>值都是由四个八位的字符串组成，这四个串的最后两位分别是一个八位的设定值的1 2、3 4、5 6、7 8位，这四个八位的字符串的设定规则分别是是<code>Address+Node+71C+1 2位设定值</code>、<code>Address+Node+71D+3 4位设定值</code>、<code>Address+Node+71E+5 6位设定值</code>、<code>Address+Node+71F+7 8位设定值</code>。</p><p>这里需要注意，有两个不同的八位被提及，其中一个八位(这八位每一位都有特定的含义，也是仿冒成功最关键的地方，在后面我称之为设定值)是被均分四份从而放到<code>ConfigData</code>的各个节点所对应的四个串的七八位</p><p>而这个八位的设定值每一位的含义如下：</p></blockquote><ul><li>第一位：代表节点设定值(Address)，一般不需要改变；</li><li>第二位：同组装置的优先顺序，一般为 0~3，不可出现字母；</li><li>第三位：插口颜色，笔记本忽略，不作处理；</li><li>第四位：插孔侦测，0为开启(外设基本为0)，1为关闭(内建基本为1)；</li><li>第五位：装置类型，笔记本忽略；</li><li>第六位：连接类型，圆口为1，内接为0，基本可以忽略；</li><li>第七位：代表是否有插孔及插孔位置0=外接，9=内建，耳机扬声器和耳麦均为外接；</li><li>第八位：代表插孔所在位置，0=内建，1=外接；</li></ul><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><h4 id="整理Codec，提取所有有效Node值"><a href="#整理Codec，提取所有有效Node值" class="headerlink" title="整理Codec，提取所有有效Node值"></a>整理<code>Codec</code>，提取所有有效<code>Node</code>值</h4><blockquote><p>与上面利用<code>AppleALC</code>的思路不同，这里我们需要提取的数据有设备描述、<code>Node</code>值和<code>Pin Default</code>值。具体提取方法上文已有说明，这里不再赘述，下面是我的<code>CX20751</code>提取的数据：</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-07-01.png" alt="2017-11-07-01"></p><h4 id="将整理出的所有Node的Pin-Default值进行转换修正得出需要的设定值"><a href="#将整理出的所有Node的Pin-Default值进行转换修正得出需要的设定值" class="headerlink" title="将整理出的所有Node的Pin Default值进行转换修正得出需要的设定值"></a>将整理出的所有<code>Node</code>的<code>Pin Default</code>值进行转换修正得出需要的设定值</h4><ul><li>对于<code>Pin Default</code>值，我们的处理方法为八位四分、二二逆置，例如<code>0x16</code>节点，首先得出<code>40 10 21 03</code>，同理得出：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0x16: 40 10 21 03</span><br><span class="line">0x17: 10 01 17 90</span><br><span class="line">0x19: 30 10 A1 03</span><br><span class="line">0x1a: 20 01 A7 95</span><br></pre></td></tr></table></figure><blockquote><p>根据八位设定值的规则描述，对上面得出的设定值进行修正。</p><p>拿<code>0x16</code>为例，这是一个耳机扬声器节点。</p><p>第1、2、3位没什么好说的保持不变；<br>第4位插孔侦测，耳机设备属于外接设备，所以应当是0，这里是0不用动；<br>第5位装置类型笔记本忽略；<br>第6位连接类型，插口为圆口，所以是1，这里是1，保持不变；<br>第7位代表是否有插孔，耳机是外接设备，所以是0，这里是0，保持不变；<br>第8位插孔所在位置，耳机是外接设备，所以是1；</p><p>其他<code>Node</code>节点也是如此设定；</p><p>修正后的数据如下：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0x16: 40 10 21 01</span><br><span class="line">0x17: 10 01 17 90</span><br><span class="line">0x19: 30 10 81 01</span><br><span class="line">0x1a: 20 01 A0 90</span><br></pre></td></tr></table></figure><h4 id="根据规律或者规则得出ConfigData"><a href="#根据规律或者规则得出ConfigData" class="headerlink" title="根据规律或者规则得出ConfigData"></a>根据规律或者规则得出<code>ConfigData</code></h4><blockquote><p>根据上面得出的设定值，我可以得出以下<code>ConfigData</code>值：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">01671C40 01671D10 01671E21 01671F01</span><br><span class="line">01771C10 01771D01 01771E17 01771F90</span><br><span class="line">01971C30 01971D10 01971E81 01971F01</span><br><span class="line">01a71C20 01a71D01 01a71EA0 01a71F90</span><br></pre></td></tr></table></figure><p><strong>PS: 搜索一下codec里面有没有<code>EAPD</code>这个字符串，有的话就在<code>ConfigData</code>的最后面加上一串<code>01470C02</code>这组数字。</strong></p><h4 id="PathMap的获取和整理"><a href="#PathMap的获取和整理" class="headerlink" title="PathMap的获取和整理"></a><code>PathMap</code>的获取和整理</h4><blockquote><p>在声卡仿冒的过程中这一步是最麻烦的。有几个需要注意的地方。</p><p>对于声音节点来说，节点路径的推断遵循一个规律：</p><p>输入是从后往前推断节点，输出是从前往后推。</p></blockquote><ul><li>首先利用<code>codecgraph</code>得到路径图，该操作需要安装<code>graphviz</code>，这里我推荐利用终端<code>npm install graphviz</code>安装即可，然后执行下面的命令下载<code>codecgraph</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/athlonreg/codecgraph.git</span><br></pre></td></tr></table></figure><ul><li>这样就下载到了你的用户根目录，将你的<code>Codec.txt</code>拷贝到下载的<code>codecgraph</code>目录下，然后</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd codecgraph</span><br><span class="line">$ ./codecgraph Codec.txt</span><br></pre></td></tr></table></figure><ul><li>就在<code>codecgraph</code>目录下生成了你的声卡路径图，格式为<code>svg</code>，用<code>safari</code>即可打开，当然也可以转换为其他格式，这里我转换成了<code>png</code>格式，例如我的</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/codec.txt.png" alt="codec.txt"></p><ul><li>可以看到<code>0x16</code>节点只连接了<code>0x10</code>，<code>HP Out</code>为输出，从前往后推，转换为十进制得到<code>0x22 -&gt; 0x16</code>;</li><li><code>0x17</code>节点只连接了<code>0x11</code>，<code>Speaker</code>为输出，从前往后推，转换为十进制得到<code>0x23 -&gt; 0x17</code>;</li><li><code>0x19</code>节点只连接了<code>0x14</code>，<code>Mic at Int</code>为输入，从后往前推，转换为十进制得到<code>0x20 -&gt; 0x25</code>;</li><li><code>0x1a</code>节点只连接了<code>0x13</code>，<code>Mic at Ext</code>为输入，从后往前推，转换为十进制得到<code>0x19 -&gt; 0x26</code>;</li></ul><blockquote><p>整理得到路径如下：</p></blockquote><table><thead><tr><th>设备名称</th><th>有效节点</th><th>路径</th></tr></thead><tbody><tr><td>HP Out</td><td>0x16</td><td>0x22-&gt;0x16</td></tr><tr><td>Speaker Out</td><td>0x17</td><td>0x23-&gt;0x17</td></tr><tr><td>Mic In</td><td>0x1a</td><td>0x26&lt;-0x19  0x26&lt;-0x20</td></tr><tr><td>Line In</td><td>0x19</td><td>0x25&lt;-0x20  0x26&lt;-0x19</td></tr></tbody></table><p><strong>PS: 我的声卡比较奇葩，对于多数声卡来说，输入一般为<code>0x8 -&gt; 0x35 -&gt; 0x18</code>，输出一般为<code>0x33 -&gt; 0x13 -&gt; 0x3</code>，看下图：</strong><br><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-08-03.png" alt="2017-11-08-03"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-08-04.png" alt="2017-11-08-04"></p><h2 id="AppleHDA-修改"><a href="#AppleHDA-修改" class="headerlink" title="AppleHDA 修改"></a>AppleHDA 修改</h2><h2 id="Credit"><a href="#Credit" class="headerlink" title="Credit"></a>Credit</h2><p><a href="https://github.com/vit9696" target="_blank" rel="noopener">vit9696</a><br><a href="https://github.com/goodwin/ALCPlugFix" target="_blank" rel="noopener">goodwin</a><br><a href="https://github.com/RehabMan" target="_blank" rel="noopener">RehabMan</a><br><a href="https://github.com/Dolnor/EAPD-Codec-Commander" target="_blank" rel="noopener">Dolnor</a><br><a href="https://github.com/daliansky" target="_blank" rel="noopener">daliansky</a><br><a href="https://sourceforge.net/projects/voodoohda/" target="_blank" rel="noopener">VoodooHDA</a></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><blockquote><p>码字不易，如果觉得文章不错，欢迎打赏，你们的支持是我最大的动力。</p></blockquote>]]></content>
    
    <summary type="html">
    
      利用 AppleALC 驱动声卡
    
    </summary>
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/categories/Hacintosh/"/>
    
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/tags/Hacintosh/"/>
    
      <category term="黑苹果" scheme="https://blog.iamzhl.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>How to import a project from NetBeans to MyEclipse faultlessly</title>
    <link href="https://blog.iamzhl.top/How-to-import-a-project-from-NetBeans-to-MyEclipse-faultlessly.html"/>
    <id>https://blog.iamzhl.top/How-to-import-a-project-from-NetBeans-to-MyEclipse-faultlessly.html</id>
    <published>2017-10-30T08:03:27.000Z</published>
    <updated>2017-12-24T11:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>最近，在一次网络编程课中，实验室的 <code>PC</code> 机有好多 <code>NetBeans</code> 打不开，经过一节课的摸索和董老师的帮助，终于找到一种方法将 <code>NetBeans</code> 写的项目导入 <code>MyEclipse</code> 中，并且可以减少很多错误以及乱码的情况出现</p><h3 id="进入主题"><a href="#进入主题" class="headerlink" title="进入主题"></a>进入主题</h3><blockquote><p>将 <code>NetBeans</code> 写的项目导入 <code>MyEclipse</code> 中的时候最常见的错误有以下三种：</p></blockquote><ul><li>在 <code>NetBeans</code> 中如果一条语句过长会有自动换行的情况，但在 <code>MyEclipse</code> 中并不能识别这种换行，于是像 <code>try-catch</code> 和 <code>if</code> 语句这种代码往往在导入工程之后跑到了注释后面，造成语法错误；</li><li><code>MyEclipse</code> 默认编码方式为 <code>GBK</code>,所以将 <code>NetBeans</code> 写的项目导入 <code>MyEclipse</code> 中的时候，项目代码里面的中文注释将会出现乱码；</li><li>如果 <code>NetBeans</code> 中的 <code>Java</code> 代码在一个自己建的 <code>package</code> 下，会出现很多需要将代码移动到这个 <code>package</code> 下的错误。</li></ul><h3 id="针对这些常见的情况，可以找到下面一种方法进行导入操作"><a href="#针对这些常见的情况，可以找到下面一种方法进行导入操作" class="headerlink" title="针对这些常见的情况，可以找到下面一种方法进行导入操作"></a>针对这些常见的情况，可以找到下面一种方法进行导入操作</h3><ul><li>在 <code>MyEclipse</code> 新建一个 <code>Java Project</code>；</li><li>右键这个 <code>Project</code> -&gt; 属性 -&gt; Text file encoding，将编码方式设置为 <code>UTF-8</code>；</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-05.png" alt="2017-10-30-05"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-04.png" alt="2017-10-30-04"></p><ul><li>展开这个 <code>Project</code>，右键其下面的 <code>src</code> 包，新建一个 <code>Package</code>，这里我用 <code>cn.edu.ldu</code> 来表示；</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-06.png" alt="2017-10-30-06"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-07.png" alt="2017-10-30-07"></p><ul><li>右键新建的 <code>cn.edu.ldu</code> 包 -&gt; Import -&gt; General -&gt; File System -&gt; Next，在 <code>From directory</code> 中选择要导入的项目，然后在弹出的对话框中勾选这个项目，选择 <code>Finish</code> 就可以了。</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-01.png" alt="2017-10-30-01"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-02.png" alt="2017-10-30-02"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-03.png" alt="2017-10-30-03"></p><ul><li>操作完成之后只剩下一些内部包的导入工作需要额外操作，其余均比较完美</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-08.png" alt="2017-10-30-08"></p><ul><li>运行结果也很好</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-09.png" alt="2017-10-30-09"></p><ul><li>大家快去试一下吧</li></ul><h3 id="收工咯"><a href="#收工咯" class="headerlink" title="收工咯"></a>收工咯</h3>]]></content>
    
    <summary type="html">
    
      将 NetBeans 的项目导入 MyEclipse 并减少错误与乱码现象
    
    </summary>
    
      <category term="Study" scheme="https://blog.iamzhl.top/categories/Study/"/>
    
    
      <category term="NetBeans" scheme="https://blog.iamzhl.top/tags/NetBeans/"/>
    
      <category term="MyEclipse" scheme="https://blog.iamzhl.top/tags/MyEclipse/"/>
    
  </entry>
  
  <entry>
    <title>RW NTFS partition natively on macOS</title>
    <link href="https://blog.iamzhl.top/RW-NTFS-partition-natively-on-macOS.html"/>
    <id>https://blog.iamzhl.top/RW-NTFS-partition-natively-on-macOS.html</id>
    <published>2017-10-26T16:00:00.000Z</published>
    <updated>2017-12-24T11:10:06.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="实现-MAC-原生读写-NTFS-分区"><a href="#实现-MAC-原生读写-NTFS-分区" class="headerlink" title="实现 MAC 原生读写 NTFS 分区"></a>实现 MAC 原生读写 NTFS 分区</h3><blockquote><p>打开终端，输入命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ diskutil list</span><br></pre></td></tr></table></figure><blockquote><p>输入命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/fstab</span><br></pre></td></tr></table></figure><blockquote><p>编辑内容如下</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LABEL=Win\040Ntfs\040Drive none ntfs rw,auto,nobrowse</span><br></pre></td></tr></table></figure><blockquote><p>注意</p></blockquote><p><strong><code>Win\040Ntfs\040Drive</code> 这串字符中<code>\040</code>代表空格，<code>Win\040Ntfs\040Drive</code> 这一串出现在<code>diskutil list</code>那个屏幕里面，比如下图就是<code>HD-E1</code></strong></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-27-01.png" alt="2017-10-27-01"></p><blockquote><p>最后一步</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ln -s /Volumes ~/Desktop/Volumes</span><br></pre></td></tr></table></figure><h3 id="Credit"><a href="#Credit" class="headerlink" title="Credit"></a>Credit</h3><blockquote><p>转自<a href="https://www.waitsun.com" target="_blank" rel="noopener">爱情守望者</a></p><p>转载请注明<a href="https://www.waitsun.com/aboutus/help" target="_blank" rel="noopener">原帖地址</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      实现 MAC 原生读写 NTFS 分区
    
    </summary>
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/categories/Hacintosh/"/>
    
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/tags/Hacintosh/"/>
    
      <category term="黑苹果" scheme="https://blog.iamzhl.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="NTFS" scheme="https://blog.iamzhl.top/tags/NTFS/"/>
    
  </entry>
  
  <entry>
    <title>Change launchpad icon grid layout in your MAC</title>
    <link href="https://blog.iamzhl.top/Change-launchpad-icon-grid-layout-in-macOS.html"/>
    <id>https://blog.iamzhl.top/Change-launchpad-icon-grid-layout-in-macOS.html</id>
    <published>2017-10-26T01:32:26.000Z</published>
    <updated>2017-12-24T11:37:57.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="preface"><a href="#preface" class="headerlink" title="preface"></a>preface</h3><p>Launchpad is the quick application launcher available from the Mac OS X Dock and a keystroke that looks quite a bit like the Homescreen of iOS. By default, the Launchpad app grid usually displays icons in 7 rows and 5 columns of apps, but with a little adjustment from the command line of OS X you can switch and customize the Launchpad icon grid to any number of apps you’d like to see on the Mac.</p><p>This uses the command line and defaults strings to customize the Launchpad grid layout, if you’re not comfortable with Terminal you’re probably better off leaving this alone and enjoying the default Launchpad app icon grid. We’ll combine the commands into a single syntax string for ease of use first, but you can break them apart as we show you a bit further below.</p><h3 id="How-to-Adjust-the-Icon-Grid-Count-of-Launchpad-in-Mac-OS-X"><a href="#How-to-Adjust-the-Icon-Grid-Count-of-Launchpad-in-Mac-OS-X" class="headerlink" title="How to Adjust the Icon Grid Count of Launchpad in Mac OS X"></a>How to Adjust the Icon Grid Count of Launchpad in Mac OS X</h3><ul><li>Open the Terminal found in /Applications/Utilities/ and enter the following command syntax, replacing the X numbers for the appropriate columns and grid icon counts</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.dock springboard-columns -int X;defaults write com.apple.dock springboard-rows -int X;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</span><br></pre></td></tr></table></figure><blockquote><p>It is:</p><p>$ defaults write com.apple.dock springboard-columns -int X;defaults write com.apple.dock springboard-rows -int X;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</p></blockquote><p>For example, to set the Launchpad grid to 6×7 you’d use the following syntax:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.dock springboard-columns -int 7;defaults write com.apple.dock springboard-rows -int 6;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</span><br></pre></td></tr></table></figure><blockquote><p>It is:</p><p>$ defaults write com.apple.dock springboard-columns -int 7;defaults write com.apple.dock springboard-rows -int 6;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</p></blockquote><ul><li><p>Hit Return and wait for the Dock and Launchpad to refresh</p></li><li><p>Open Launchpad as usual to see the layout change</p></li></ul><blockquote><p>The settings change is immediate after the Dock refreshes:</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com//2017-10-26-09.png" alt="2017-10-26-09"></p><h3 id="How-to-return-to-the-default-setting"><a href="#How-to-return-to-the-default-setting" class="headerlink" title="How to return to the default setting"></a>How to return to the default setting</h3><p>If you want to return to the default setting, just change the column and row counts back to what yours was originally. The default on my MacBook Pro Retina display is a 5 x 7 grid, but yours may be different depending on screen size and screen resolution.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.dock springboard-columns -int 7;defaults write com.apple.dock springboard-rows -int 5;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</span><br></pre></td></tr></table></figure><blockquote><p>It is:</p><p>$ defaults write com.apple.dock springboard-columns -int 7;defaults write com.apple.dock springboard-rows -int 5;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com//2017-10-26-10.png" alt="2017-10-26-10"></p><h4 id="The-commands-for-customizing-the-Launchpad-layout-can-also-be-split-apart-if-desired-like-so"><a href="#The-commands-for-customizing-the-Launchpad-layout-can-also-be-split-apart-if-desired-like-so" class="headerlink" title="The commands for customizing the Launchpad layout can also be split apart if desired like so:"></a>The commands for customizing the Launchpad layout can also be split apart if desired like so:</h4><p><strong>Set the Launchpad Column Icon Count</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.dock springboard-columns -int 3</span><br></pre></td></tr></table></figure><p><strong>Set the Launchpad Row App Icon Count</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.dock springboard-rows -int 4</span><br></pre></td></tr></table></figure><p><strong>Reset Launchpad</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.dock ResetLaunchPad -bool TRUE;</span><br></pre></td></tr></table></figure><p><strong>Relaunch the Dock with killall</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ killall Dock</span><br></pre></td></tr></table></figure><h3 id="Credit"><a href="#Credit" class="headerlink" title="Credit:"></a>Credit:</h3><p>Original Source: <a href="http://osxdaily.com/2016/03/09/change-launchpad-icon-grid-layout-mac-os-x/" target="_blank" rel="noopener">OSXDaily</a></p>]]></content>
    
    <summary type="html">
    
      Change launchpad icon grid layout in your MAC
    
    </summary>
    
      <category term="Study" scheme="https://blog.iamzhl.top/categories/Study/"/>
    
    
      <category term="launchpad" scheme="https://blog.iamzhl.top/tags/launchpad/"/>
    
  </entry>
  
</feed>
