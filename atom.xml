<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Athlonreg&#39;s Blog</title>
  
  <subtitle>套陆的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.iamzhl.top/"/>
  <updated>2018-04-22T06:17:17.569Z</updated>
  <id>https://blog.iamzhl.top/</id>
  
  <author>
    <name>athlonreg/套陆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Use GitHub for team development</title>
    <link href="https://blog.iamzhl.top/Use-GitHub-for-team-development.html"/>
    <id>https://blog.iamzhl.top/Use-GitHub-for-team-development.html</id>
    <published>2018-04-21T14:07:42.000Z</published>
    <updated>2018-04-22T06:17:17.569Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><a id="more"></a><p>利用 GitHub 进行团队开发</p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>本文以<code>GitHub</code>项目为例: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/athlonreg/Common-patches-for-hackintosh.git</span><br></pre></td></tr></table></figure><p>然后在本地克隆项目代码： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/athlonreg/Common-patches-for-hackintosh.git</span><br></pre></td></tr></table></figure><p>查看项目分支情况可以使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git branch </span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>可以看到当前项目坐在的分支是<code>master</code>（*号后边为当前所在分支名）。</p><p>而且项目目前也只有一个分支，就是<code>master</code>。</p><h3 id="团队开发"><a href="#团队开发" class="headerlink" title="团队开发"></a>团队开发</h3><p>但是我们在实际项目开发中，通常都是以团队开发为主，所以为了维护线上主干代码的稳定，我们也都会采取创建分支 -&gt; 开发 -&gt; 测试 -&gt; 合并 -&gt; 上线的形式进行实际操作的。</p><p>接下来描述一下简单的团队开发<code>Git</code>项目。</p><h4 id="本地分支"><a href="#本地分支" class="headerlink" title="本地分支"></a>本地分支</h4><p>工程师<code>A</code>需要对原来的代码做改动，这时他需要创建一个开发分支，假设名字为<code>dev</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git branch dev</span><br><span class="line">$ git branch</span><br><span class="line">  dev</span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>这个时候我们看到本地工作区已经有两个分支：<code>master</code>和<code>dev</code>。但当前工作区还是在<code>master</code>上（注意*号位置），需要手动切换到<code>dev</code>上。只需使用<code>git checkout</code>命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout dev</span><br><span class="line">Switched to branch &apos;dev&apos;</span><br><span class="line">$ git branch</span><br><span class="line">* dev</span><br><span class="line">  master</span><br></pre></td></tr></table></figure><p>当然有人希望创建分支后直接切换到新的分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b dev</span><br><span class="line">Switched to a new branch &apos;dev&apos;</span><br></pre></td></tr></table></figure><p>这样就将当前工作区切换到新的分支中，我们可以发现此时的<code>dev</code>分支中的内容是<code>master</code>的复制。 </p><h4 id="远程分支"><a href="#远程分支" class="headerlink" title="远程分支"></a>远程分支</h4><p>现在的<code>dev</code>分支只是存在于<code>A</code>的本地环境，当工程师<code>B</code>打算协同<code>A</code>进行相同业务的开发时，他也需要拿到<code>dev</code>分支的代码，那该怎么获取呢？此时需要<code>A</code>将本地分支推送到远程分支，以供给其他工程师共同开发。 </p><p>使用<code>git branch -a</code>能够查询当前所有分支，包括本地分支和远程分支（下边<code>remotes/origin</code>开头）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -a</span><br><span class="line">* dev</span><br><span class="line">  master</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure><p>发现并没有远程分支里并没有新建的<code>dev</code>，这时需要执行<code>git push origin dev</code>命令，将本地<code>dev</code>分支推送到<code>GitHub</code>服务器，生成远程分支。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin dev</span><br><span class="line">Total 0 (delta 0), reused 0 (delta 0)</span><br><span class="line">To https://github.com/athlonreg/Common-patches-for-hackintosh</span><br><span class="line"> * [new branch]      dev -&gt; dev</span><br></pre></td></tr></table></figure><p>这时再用<code>git branch -a</code>查看分支。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -a</span><br><span class="line">* dev</span><br><span class="line">  master</span><br><span class="line">  remotes/origin/dev</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure><p>可以看到多了一个名为<code>remotes/origin/dev</code>的分支，即为创建的远程分支。</p><p>好了，现在<code>B</code>和其他任何工程师都可以通过拉取远程分支获取<code>A</code>创建的<code>dev</code>分支代码。 </p><p><code>B</code>先做一次分支查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -a</span><br><span class="line">* master</span><br><span class="line">  remotes/origin/dev</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure><p>发现存在<code>remotes/origin/dev</code>远程分支。<br>此时只需执行<code>git fetch origin dev:dev</code>将远程分支代码拉取到本地.。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch origin dev:dev</span><br><span class="line">From https://github.com/athlonreg/Common-patches-for-hackintosh</span><br><span class="line"> * [new branch]      dev    -&gt; dev</span><br><span class="line">$ git branch -a</span><br><span class="line">  dev</span><br><span class="line">* master</span><br><span class="line">  remotes/origin/dev</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure><p>再通过查询可以看到本地多了一个<code>dev</code>本地分支。<br><code>git fetch origin dev:dev</code>这个命令的意思是将远程<code>dev</code>分支代码拉取到本地<code>dev</code>分支中。这是一个快捷的方式，如果<code>B</code>本地没有<code>dev</code>分支，该命令会创建一个名为<code>dev</code>的分支，如果<code>B</code>本地有自己的分支，如<code>B_dev</code>，则可以执行<code>git fetch origin dev:B_dev</code>或者先切到<code>B_dev</code>分支内，执行<code>git fetch origin dev</code>即可。</p><h4 id="多人开发"><a href="#多人开发" class="headerlink" title="多人开发"></a>多人开发</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/20160430221106224.png" alt="20160430221106224" title="">                </div>                <div class="image-caption">20160430221106224</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2018042201.png" alt="2018042201" title="">                </div>                <div class="image-caption">2018042201</div>            </figure><p>此时<code>A</code>和<code>B</code>就可以切到本地<code>dev</code>分支进行开发了。</p><p>假如<code>B</code>的开发修复了某个<code>BUG</code>，需要提交推送申请</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;Some fix&quot;</span><br><span class="line">$ git push origin dev</span><br></pre></td></tr></table></figure><p>在<code>B</code>将分支推送到她的远程仓库（不是别人维护的正式仓库，是他<code>fork</code>的仓库）后，去<code>GitHub</code>网页端点击<code>Pull requests</code>提交合并申请。弹出表单并要求他设置源分支、目标仓库和目标分支，默认设置<code>B</code>的仓库为源仓库。</p><p><code>A</code>需要合并他的代码，所以他设置他的分支为源分支，目标仓库为<code>A</code>的共有正式仓库，目标分枝为主干分支<code>dev</code>，还需要输入标题和提交的修改描述。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15243256764217.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>提交申请后，<code>A</code>就会通过邮件或者订阅收到通知。</p><p><code>A</code>在网页端点击<code>Pull requests</code>后<code>Merge requests</code>即可合并提交。</p><p>这时如果<code>A</code>想再次进行开发，就必须要将远程<code>dev</code>分支<code>fetch</code>到本地，如下: </p><p>开发过程中每个工程师在推送代码之前要先执行拉取操作，因为远程仓库有更新的话，不先拉取（<code>pull/fetch</code>）是无法推送（<code>push</code>）的，尽量少使用<code>git pull</code>进行拉取，而是先用<code>git fetch</code>拉取再进行<code>git merge</code>。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch origin dev    </span><br><span class="line">From https://github.com/athlonreg/Common-patches-for-hackintosh</span><br><span class="line"> * branch            dev        -&gt; FETCH_HEAD</span><br><span class="line">Updating 23b74f3..ea1c09f</span><br><span class="line">Fast-forward</span><br><span class="line"> config_patches.plist | 178 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line"> 1 file changed, 178 insertions(+)</span><br></pre></td></tr></table></figure><p>当然<code>git pull</code>也可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin dev</span><br><span class="line">From https://github.com/athlonreg/Common-patches-for-hackintosh</span><br><span class="line"> * branch            dev        -&gt; FETCH_HEAD</span><br><span class="line">Updating 23b74f3..ea1c09f</span><br><span class="line">Fast-forward</span><br><span class="line"> config_patches.plist | 178 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line"> 1 file changed, 178 insertions(+)</span><br></pre></td></tr></table></figure><p>在每个开发阶段都及时地提交代码（<code>git commit</code>）并推送（<code>git push</code>）至远程仓库，可以使用<code>git status</code>检查工作区是否还有未处理的代码和文件。在提交代码的时候写好优秀的注释。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &quot;Some fix (credit by A)&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin dev</span><br></pre></td></tr></table></figure><p>在项目代码将要合并到主干<code>master</code>的时候，要由一名工程师做最后的合并处理，如创建分支的<code>A</code>。由于在合并代码时极易产生冲突，所以一定要先与主干代码版本做对比（<code>git diff</code>），合并时可以使用<code>git merge</code>，当然如果<code>dev</code>可以废除的话，也可以使用<code>git rebase</code>做最后的合并。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master     </span><br><span class="line">Switched to branch &apos;master&apos;</span><br><span class="line"></span><br><span class="line">$ git merge dev           </span><br><span class="line">Updating 23b74f3..ea1c09f</span><br><span class="line">Fast-forward</span><br><span class="line"> config_patches.plist | 178 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line"> 1 file changed, 178 insertions(+)</span><br><span class="line"> </span><br><span class="line"> $ git push origin master </span><br><span class="line">Total 0 (delta 0), reused 0 (delta 0)</span><br><span class="line">To https://github.com/athlonreg/Common-patches-for-hackintosh</span><br><span class="line">   23b74f3..ea1c09f  master -&gt; master</span><br></pre></td></tr></table></figure><p>最后在分支代码合并到主干或者代码上线后，<code>dev</code>分支完成了自己的任务，可以删除本地分支和远程分支。 </p><h4 id="删除本地分支："><a href="#删除本地分支：" class="headerlink" title="删除本地分支："></a>删除本地分支：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d dev</span><br><span class="line">Deleted branch dev (was 1fe1352).</span><br><span class="line">$ git branch -a</span><br><span class="line">* master</span><br><span class="line">  remotes/origin/dev</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure><h4 id="删除远程分支："><a href="#删除远程分支：" class="headerlink" title="删除远程分支："></a>删除远程分支：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin --delete dev</span><br><span class="line">To https://github.com/athlonreg/Common-patches-for-hackintosh</span><br><span class="line"> - [deleted]         dev</span><br><span class="line">$ git branch -a</span><br><span class="line">* master</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure><h4 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h4><p>在代码的合并阶段（<code>git pull</code>或者<code>git merge</code>命令），通常会产生代码冲突。如果是其他工程师造成的冲突，需要转给相关工程师处理，也造成大量的沟通成本。为了减少冲突，建议每个工程师各自单独负责模块，业务互相不冲突。<br>在解决冲突时，需要使用<code>git log</code>和<code>git diff</code>来检查历史版本的修改信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log README.md</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15243250721465.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><code>git log</code>可以列出该文件的历史提交版本，能看到提交的版本号和提交的注释信息。 </p><p>然后使用<code>git diff</code>来对比该文件两个版本的不同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure><p>需要回退到某一版本，可以使用<code>git reset</code>命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard 265886db0d6868cc669e0ef253e6e9ac1e39319c</span><br></pre></td></tr></table></figure><p>如果文件尚未提交，也可以用<code>git checkout filename</code>恢复到提交前。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch dev</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line"></span><br><span class="line">$ git checkout README.md</span><br></pre></td></tr></table></figure><h3 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;用户名&quot;。 </span><br><span class="line">$ git config --global user.email &quot;电子邮件&quot; 。</span><br></pre></td></tr></table></figure><ul><li><p>团队开发禁止在主干直接修改代码，一定要开分支，而且是远程分支进行开发。</p></li><li><p>创建分支可以打标签，<code>git tag</code>。</p></li><li><p>拉取代码时最好先<code>git fetch</code>再<code>git merge</code>而不是直接<code>git pull</code>。</p></li><li><p>提交代码和推送代码以及代码上线之前，一定要先和原来版本对比<code>git diff</code>。</p></li><li><p>提交代码加注释<code>git commit -m &#39;B developed&#39;</code>。</p></li></ul>]]></content>
    
    <summary type="html">
    
      利用 GitHub 进行团队开发
    
    </summary>
    
      <category term="Study" scheme="https://blog.iamzhl.top/categories/Study/"/>
    
    
      <category term="GitHub" scheme="https://blog.iamzhl.top/tags/GitHub/"/>
    
      <category term="团队开发" scheme="https://blog.iamzhl.top/tags/%E5%9B%A2%E9%98%9F%E5%BC%80%E5%8F%91/"/>
    
      <category term="分支管理" scheme="https://blog.iamzhl.top/tags/%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Supported codecs by AppleALC</title>
    <link href="https://blog.iamzhl.top/Supported-codecs-by-AppleALC.html"/>
    <id>https://blog.iamzhl.top/Supported-codecs-by-AppleALC.html</id>
    <published>2018-04-18T12:41:37.000Z</published>
    <updated>2018-04-18T12:57:35.778Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h4 id="Currently-supported-codecs"><a href="#Currently-supported-codecs" class="headerlink" title="Currently supported codecs"></a>Currently supported codecs</h4><table><thead><tr><th>Vendor</th><th>Codec</th><th>Revisions</th><th>MinKernel</th><th>MaxKernel</th></tr></thead><tbody><tr><td>Creative</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CA0132" target="_blank" rel="noopener">CA0132</a></td><td>0x100918 layout 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12</td><td>13 (10.9)</td><td>—</td></tr><tr><td>CirrusLogic</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CS4210" target="_blank" rel="noopener">CS4210</a></td><td>0x100101 layout 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>CirrusLogic</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CS4213" target="_blank" rel="noopener">CS4213</a></td><td>0x100100 layout 28</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC221" target="_blank" rel="noopener">ALC221</a></td><td>layout 11</td><td>12 (10.8)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC225" target="_blank" rel="noopener">ALC225/ALC3253</a></td><td>layout 28, 33</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC233" target="_blank" rel="noopener">ALC233</a></td><td>layout 3, 13, 27, 33</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC235" target="_blank" rel="noopener">ALC235</a></td><td>layout 3, 11, 28</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC236" target="_blank" rel="noopener">ALC236</a></td><td>0x100001, 0x100002 layout 3, 11, 13, 15</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC233" target="_blank" rel="noopener">ALC3236</a></td><td>layout 4, 5, 28, 29</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC255" target="_blank" rel="noopener">ALC255</a></td><td>layout 3, 13, 17, 18, 27, 28, 99</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC256" target="_blank" rel="noopener">ALC256 (3246)</a></td><td>layout 13, 56</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC260" target="_blank" rel="noopener">ALC260</a></td><td>layout 11, 12</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC262" target="_blank" rel="noopener">ALC262</a></td><td>0x100202 layout 11, 12, 13, 28</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC268" target="_blank" rel="noopener">ALC268</a></td><td>layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC269" target="_blank" rel="noopener">ALC269</a></td><td>0x100004, 0x100100, 0x100202, 0x100203 layout 1-10, 11, 13, 14, 15, 16, 18, 19, 20, 27, 28, 29, 32, 33, 35, 40, 76, 93, 99, 127</td><td>12 (10.8)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC270" target="_blank" rel="noopener">ALC270</a></td><td>0x100100, layout 3, 4, 27, 28</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC269" target="_blank" rel="noopener">ALC271x</a></td><td>layout 9, 31</td><td>12 (10.8)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC272" target="_blank" rel="noopener">ALC272</a></td><td>0x100001, layout 3, 11</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC275" target="_blank" rel="noopener">ALC275</a></td><td>0x100005, 0x100008, layout 3, 13, 28</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC280" target="_blank" rel="noopener">ALC280</a></td><td>layout 3, 4, 11, 13, 15</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC282" target="_blank" rel="noopener">ALC282</a></td><td>0x100003, layout 3, 4, 13, 27, 28, 29, 76, 86, 127</td><td>12 (10.8)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC283" target="_blank" rel="noopener">ALC283</a></td><td>layout 1, 3, 11, 66</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC284" target="_blank" rel="noopener">ALC284</a></td><td>layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC286" target="_blank" rel="noopener">ALC286</a></td><td>0x100002, 0x100003 layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC288" target="_blank" rel="noopener">ALC288</a></td><td>layout 3, 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC290" target="_blank" rel="noopener">ALC290</a></td><td>layout 3, 28</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC290" target="_blank" rel="noopener">ALC3241</a></td><td>layout 4</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC292" target="_blank" rel="noopener">ALC292</a></td><td>layout 12, 18,  28</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC293" target="_blank" rel="noopener">ALC293</a></td><td>layout 28, 29</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC294" target="_blank" rel="noopener">ALC294</a></td><td>layout 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC295" target="_blank" rel="noopener">ALC295</a></td><td>layout 3, 13, 28</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC298" target="_blank" rel="noopener">ALC298</a></td><td>0x100103, layout 3, 11, 13, 28, 29, 47, 72, 99</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC662" target="_blank" rel="noopener">ALC662</a></td><td>0x100101, 0x100300 layout 5, 7, 11, 12, 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC663" target="_blank" rel="noopener">ALC663</a></td><td>0x100001, 0x100002, layout 3, 4, 28, 99</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC665" target="_blank" rel="noopener">ALC665</a></td><td>layout 12, 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC668" target="_blank" rel="noopener">ALC668</a></td><td>0x100003, layout 3, 20, 27, 28, 29</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC670" target="_blank" rel="noopener">ALC670</a></td><td>0x100002, layout 12</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC671" target="_blank" rel="noopener">ALC671</a></td><td>layout 12</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC882" target="_blank" rel="noopener">ALC882</a></td><td>0x100101, layout 5, 7</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC883" target="_blank" rel="noopener">ALC883</a></td><td>0x100002, layout 7</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC885" target="_blank" rel="noopener">ALC885</a></td><td>0x100101, 0x100103 layout 1, 12</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC887" target="_blank" rel="noopener">ALC887</a></td><td>0x100202, 0x100302, layout 1, 2, 3, 5, 7, 11, 13, 17, 18, 33, 99</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC888" target="_blank" rel="noopener">ALC888/ALC1200</a></td><td>0x100101, 0x100001, 0x100202, 0x100302 layout 1, 2, 3, (4 for laptop), 5, 7, 11, 28, 29</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC889" target="_blank" rel="noopener">ALC889</a></td><td>0x100004, layout 1, 11, 12</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC891" target="_blank" rel="noopener">ALC891/ALC867</a></td><td>0x100002, layout 11, 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC892" target="_blank" rel="noopener">ALC892</a></td><td>0x100302, layout 1, 2, 3, (4 for laptop), 5, 7, 28, 31, 92, 98, 99</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC898" target="_blank" rel="noopener">ALC898/ALC899</a></td><td>0x100003, layout 1, 2, 3, 5, 7, 11, 13, 65, 98, 99, 101</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC1150" target="_blank" rel="noopener">ALC1150</a></td><td>0x100001, layout 1, 2, 3, 5, 7, 11</td><td>12 (10.8)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALC1220" target="_blank" rel="noopener">ALC1220</a></td><td>0x100003, layout 1, 2, 5, 7, 11</td><td>15 (10.11)</td><td>—</td></tr><tr><td>Realtek</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/ALCS1220A" target="_blank" rel="noopener">ALCS1220A</a></td><td>layout 1, 2, 5, 7</td><td>15 (10.11)</td><td>—</td></tr><tr><td>AnalogDevices</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/AD1984" target="_blank" rel="noopener">AD1984</a></td><td>0x100400, layout 11</td><td>13 (10.9)</td><td>—</td></tr><tr><td>AnalogDevices</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/AD1984A" target="_blank" rel="noopener">AD1984A</a></td><td>0x100400, layout 11, 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>AnalogDevices</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/AD1988B" target="_blank" rel="noopener">AD1988B</a></td><td>layout 5, 7, 12</td><td>13 (10.9)</td><td>—</td></tr><tr><td>AnalogDevices</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/AD2000B" target="_blank" rel="noopener">AD2000B</a></td><td>layout 5, 7</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX8050" target="_blank" rel="noopener">CX8050</a></td><td>layout 3</td><td>16 (10.12)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX8200" target="_blank" rel="noopener">CX8200</a></td><td>layout 3</td><td>16 (10.12)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20561" target="_blank" rel="noopener">CX20561</a></td><td>0x100000, layout 11</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20583" target="_blank" rel="noopener">CX20583</a></td><td>layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20585" target="_blank" rel="noopener">CX20585</a></td><td>layout 3, 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20588" target="_blank" rel="noopener">CX20588</a></td><td>layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20590" target="_blank" rel="noopener">CX20590</a></td><td>0x100000, 0x100002, 0x100003, layout 3, 12, 28</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20641" target="_blank" rel="noopener">CX20641</a></td><td>layout 11, 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20642" target="_blank" rel="noopener">CX20642</a></td><td>layout 11, 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20722" target="_blank" rel="noopener">CX20722</a></td><td>layout 3</td><td>16 (10.12)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20724" target="_blank" rel="noopener">CX20724</a></td><td>layout 3, 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20751_2" target="_blank" rel="noopener">CX20751/20752</a></td><td>layout 3, 28</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20753_4" target="_blank" rel="noopener">CX20753/4</a></td><td>layout 3</td><td>16 (10.12)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20755" target="_blank" rel="noopener">CX20755</a></td><td>layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20756" target="_blank" rel="noopener">CX20756</a></td><td>layout 3, 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Conexant</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/CX20757" target="_blank" rel="noopener">CX20757</a></td><td>layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD66C3_65" target="_blank" rel="noopener">IDT92HD66C3/65</a></td><td>layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD71B7X" target="_blank" rel="noopener">IDT92HD71B7X</a></td><td>layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD73C1X5" target="_blank" rel="noopener">IDT92HD73C1X5</a></td><td>layout 19</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD75B2X5" target="_blank" rel="noopener">IDT92HD75B2X5</a></td><td>layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD75B3X5" target="_blank" rel="noopener">IDT92HD75B3X5</a></td><td>layout 3, 11</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD99BXX" target="_blank" rel="noopener">IDT92HD99BXX</a></td><td>layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD87B1" target="_blank" rel="noopener">IDT92HD87B1</a></td><td>layout 3</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD81B1C5" target="_blank" rel="noopener">IDT92HD81B1C5</a></td><td>layout 3, 11</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD81B1X5" target="_blank" rel="noopener">IDT92HD81B1X5</a></td><td>layout 3, 11, 12, 20, 21, 28</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD87B1_3" target="_blank" rel="noopener">IDT92HD87B1/3</a></td><td>layout 12, 13</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD87B2_4" target="_blank" rel="noopener">IDT92HD87B2/4</a></td><td>layout 12</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD90BXX" target="_blank" rel="noopener">IDT92HD90BXX</a></td><td>layout 3, 12</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD91BXX" target="_blank" rel="noopener">IDT92HD91BXX</a></td><td>0x100102, 0x100303 layout 3, 12, 13, 33, 84</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD93BXX" target="_blank" rel="noopener">IDT92HD93BXX</a></td><td>0x100203, layout 12</td><td>13 (10.9)</td><td>—</td></tr><tr><td>IDT</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/IDT92HD95" target="_blank" rel="noopener">IDT92HD95</a></td><td>layout 12</td><td>13 (10.9)</td><td>—</td></tr><tr><td>VIA</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/VT1802" target="_blank" rel="noopener">VT1802</a></td><td>0x100000, layout 3, 33</td><td>13 (10.9)</td><td>—</td></tr><tr><td>VIA</td><td><a href="https://github.com/vit9696/AppleALC/tree/master/Resources/VT2020_2021" target="_blank" rel="noopener">VT2020/2021</a></td><td>0x100100, layout 5, 7, 9</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Intel</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">HD3000 HDMI</a></td><td>snb-platform-id 0x00030010, 0x00010000</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Intel</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">HD4000 HDMI</a></td><td>ig-platform-id 0x01660003, 0x01660009, 0x0166000A</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Intel</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">HD4x00 HDMI</a></td><td>ig-platform-id 0x0d220003, 0x0a260005</td><td>13 (10.9)</td><td>—</td></tr><tr><td>Intel</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">HD5500 HDMI</a></td><td>ig-platform-id 0x16260006</td><td>15 (10.11)</td><td>—</td></tr><tr><td>Intel</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">HD5600 HDMI</a></td><td>ig-platform-id 0x16260006</td><td>15 (10.11)</td><td>—</td></tr><tr><td>Intel</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">HD6000 HDMI</a></td><td>ig-platform-id 0x16260004</td><td>15 (10.11)</td><td>—</td></tr><tr><td>Intel</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">HD515 HDMI</a></td><td>ig-platform-id 0x191E0000</td><td>15 (10.11)</td><td>—</td></tr><tr><td>Intel</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">HD520 HDMI</a></td><td>ig-platform-id 0x19160000</td><td>15 (10.11)</td><td>—</td></tr><tr><td>Intel</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">HD530 HDMI</a></td><td>ig-platform-id 0x19160000, 0x191B0000, 0x19120000</td><td>15 (10.11)</td><td>—</td></tr><tr><td>Intel</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">HD630 HDMI</a></td><td>ig-platform-id 0x59120000</td><td>15 (10.11)</td><td>—</td></tr><tr><td>AMD</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">Radeon 290/290X</a></td><td></td><td>15 (10.11)</td><td>—</td></tr><tr><td>Nvidia</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">GK208</a></td><td></td><td>17 (10.13.4)</td><td>—</td></tr><tr><td>Nvidia</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">GM200</a></td><td></td><td>17 (10.13.4)</td><td>—</td></tr><tr><td>Nvidia</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">GM204</a></td><td></td><td>17 (10.13.4)</td><td>—</td></tr><tr><td>Nvidia</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">GM206</a></td><td></td><td>17 (10.13.4)</td><td>—</td></tr><tr><td>Nvidia</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">GP102</a></td><td></td><td>17 (10.13.4)</td><td>—</td></tr><tr><td>Nvidia</td><td><a href="https://github.com/vit9696/AppleALC/blob/master/Resources/Controllers.plist" target="_blank" rel="noopener">GP106</a></td><td></td><td>17 (10.13.4)</td><td>—</td></tr></tbody></table><h4 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h4><p><a href="https://github.com/vit9696/AppleALC/wiki/Supported-codecs" target="_blank" rel="noopener">https://github.com/vit9696/AppleALC/wiki/Supported-codecs</a></p>]]></content>
    
    <summary type="html">
    
      AppleALC 目前支持的 Codec
    
    </summary>
    
      <category term="Hackintosh" scheme="https://blog.iamzhl.top/categories/Hackintosh/"/>
    
    
      <category term="AppleALC" scheme="https://blog.iamzhl.top/tags/AppleALC/"/>
    
      <category term="codec" scheme="https://blog.iamzhl.top/tags/codec/"/>
    
  </entry>
  
  <entry>
    <title>Deploy tale on Fedora27</title>
    <link href="https://blog.iamzhl.top/Deploy-tale-on-Fedora27.html"/>
    <id>https://blog.iamzhl.top/Deploy-tale-on-Fedora27.html</id>
    <published>2018-04-15T01:30:10.000Z</published>
    <updated>2018-04-15T03:02:50.402Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>什么是<code>Nginx</code>?</p></blockquote><ul><li><code>Nginx</code>类似于<code>Apache</code>和<code>Tomcat</code>，也是一种服务器软件。</li><li><code>Nginx</code>是一个高性能的<code>HTTP</code>和反向代理服务器，也可以实现负载均衡的功能。</li><li>与<code>Tomcat</code>相比，<code>Tomcat</code>是一个<code>Java</code>实现的重量级服务器，而<code>Nginx</code>是一个轻量级服务器。</li><li>与<code>Apache</code>相比，<code>Nginx</code>能支持处理百万级的<code>TCP</code>连接，<code>10万</code>以上的并发连接。</li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><code>Fedora</code>主机</li><li><code>ssh</code>工具</li></ul><h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><h3 id="Fedora安装ssh工具"><a href="#Fedora安装ssh工具" class="headerlink" title="Fedora安装ssh工具"></a><code>Fedora</code>安装<code>ssh</code>工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install openssh-server -y</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237560096540.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功"></a>检查是否安装成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa | grep ssh-server</span><br></pre></td></tr></table></figure><blockquote><p>如下所示即安装成功</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost athlonreg]# yum install openssh-server -y </span><br><span class="line">上次元数据过期检查：1:43:17 前，执行于 2018年04月15日 星期日 07时49分48秒。</span><br><span class="line">软件包 openssh-server-7.5p1-5.fc27.x86_64 已安装，跳过</span><br><span class="line">依赖关系解决。</span><br><span class="line">无需任何处理。</span><br><span class="line">完毕！</span><br><span class="line">[root@localhost athlonreg]# rpm -qa | grep ssh-server</span><br><span class="line">openssh-server-7.5p1-5.fc27.x86_64</span><br><span class="line">[root@localhost athlonreg]#</span><br></pre></td></tr></table></figure><h3 id="远程主机网络相关配置"><a href="#远程主机网络相关配置" class="headerlink" title="远程主机网络相关配置"></a>远程主机网络相关配置</h3><p>配置好<code>IP</code>、网关、掩码以及<code>DNS</code></p><h3 id="本机连接到远程主机"><a href="#本机连接到远程主机" class="headerlink" title="本机连接到远程主机"></a>本机连接到远程主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh root@192.168.48.222</span><br></pre></td></tr></table></figure><blockquote><p>如图建立连接成功</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237567232486.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>其中命令格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh user@ip</span><br></pre></td></tr></table></figure></p><p>即远程连接的用户名<code>@</code>其<code>IP</code>地址，此处就是之前配置好的<code>IP</code>地址</p><p><strong>Note: 此处往下内容，均为远程登录后本机终端对远程主机的操作</strong></p><h3 id="安装编译依赖工具以及库文件"><a href="#安装编译依赖工具以及库文件" class="headerlink" title="安装编译依赖工具以及库文件"></a>安装编译依赖工具以及库文件</h3><blockquote><p><code>gcc-c++</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install gcc gcc-c++ autoconf automake</span><br></pre></td></tr></table></figure><blockquote><p><code>pcre</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install pcre pcre-devel</span><br></pre></td></tr></table></figure><blockquote><p><code>zlib</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install zlib zlib-devel</span><br></pre></td></tr></table></figure><blockquote><p>检查是否安装成功</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa | grep gcc-c++</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa | grep pcre-devel</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa | grep zlib-devel</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237569358658.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装<code>Nginx</code></h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://nginx.org/download/nginx-1.13.12.tar.gz</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237579657586.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxvf nginx-1.13.12.tar.gz</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237580152586.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="对Nginx进行配置部署"><a href="#对Nginx进行配置部署" class="headerlink" title="对Nginx进行配置部署"></a>对<code>Nginx</code>进行配置部署</h4><blockquote><p>进入<code>Nginx</code>目录，执行<code>configure</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd nginx-1.13.12 &amp;&amp; ./configure</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237573233422.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>编译安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ make &amp;&amp; make install</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237580917796.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>这里注意，如果遇到<code>make</code>或者<code>make install</code>报错，有能力的可以根据命令输出排错，也可以换个<code>nginx</code>的版本重新配置<code>nginx</code>，下面给出下载地址</p></blockquote><p><a href="http://nginx.org/download/" target="_blank" rel="noopener">http://nginx.org/download/</a></p><h4 id="检查nginx是否成功安装"><a href="#检查nginx是否成功安装" class="headerlink" title="检查nginx是否成功安装"></a>检查<code>nginx</code>是否成功安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ll -h /usr/local | grep nginx</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237582810802.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如图，有结果输出表示安装完成</p><h3 id="Nginx各文件简介"><a href="#Nginx各文件简介" class="headerlink" title="Nginx各文件简介"></a><code>Nginx</code>各文件简介</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237583404346.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><ul><li><p><code>conf</code> – 放置<code>nginx</code>的配置文件</p></li><li><p><code>html</code> – 放置网页程序</p></li><li><p><code>logs</code> – 放置日志文件</p></li><li><p><code>sbin</code> – 放置<code>Nginx</code>可执行应用程序</p></li></ul><h3 id="Nginx的常用命令"><a href="#Nginx的常用命令" class="headerlink" title="Nginx的常用命令"></a><code>Nginx</code>的常用命令</h3><blockquote><p>启动(格式就是Nginx可执行文件地址 -c Nginx配置文件地址)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><blockquote><p>重启(格式就是Nginx可执行文件地址 -s reload)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/local/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><blockquote><p>杀死进程</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pkill -9 nginx</span><br></pre></td></tr></table></figure><blockquote><p>验证配置文件重启(格式就是Nginx可执行文件地址 -t)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/local/nginx/sbin/nginx -t</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237584136305.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>在启动<code>nginx</code>的同时测试配置文件是否正确</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/local/nginx/sbin/nginx -tc /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237584361064.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><hr><h3 id="部署Tale"><a href="#部署Tale" class="headerlink" title="部署Tale"></a>部署<code>Tale</code></h3><h4 id="安装Java8运行环境"><a href="#安装Java8运行环境" class="headerlink" title="安装Java8运行环境"></a>安装<code>Java8运行环境</code></h4><blockquote><p><code>Tale</code>是用<code>Java</code>实现的，所以需要<code>Java</code>环境</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ; mkdir /usr/java &amp;&amp; cd /usr/java </span><br><span class="line">$ yum install java-1.8.0-openjdk* -y</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237586607060.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237586980349.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装<code>MySQL</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd &amp;&amp; yum install -y mysql-server mysql mysql-devel</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237587770486.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>如遇到上图所示报错，只需根据提示执行以下命令清除缓存即可</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ dnf clean packages</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237589070728.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service mysqld restart</span><br></pre></td></tr></table></figure><p>如遇报错，可用<code>MariaDB</code>代替</p><p>安装<code>MariaDB</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y mariadb-server</span><br></pre></td></tr></table></figure><p>启动<code>MariaDB</code>服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl start mariadb.service</span><br></pre></td></tr></table></figure><p>添加到开机启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl enable mariadb.service</span><br></pre></td></tr></table></figure><p>进行一些安全设置，以及修改数据库管理员密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql_secure_installation</span><br></pre></td></tr></table></figure><hr><h4 id="安装Nginx服务器-与前面略有不同"><a href="#安装Nginx服务器-与前面略有不同" class="headerlink" title="安装Nginx服务器(与前面略有不同)"></a>安装<code>Nginx</code>服务器(与前面略有不同)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install nginx -y</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237597121815.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="启动nginx-可执行文件在-usr-sbin-下"><a href="#启动nginx-可执行文件在-usr-sbin-下" class="headerlink" title="启动nginx,可执行文件在/usr/sbin/下"></a>启动nginx,可执行文件在/usr/sbin/下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/sbin/nginx -t</span><br></pre></td></tr></table></figure><h4 id="新建数据库"><a href="#新建数据库" class="headerlink" title="新建数据库"></a>新建数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p</span><br></pre></td></tr></table></figure><p>输入密码登录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ create database `tale` default character set utf8 collate utf8_general_ci;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ exit;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237597862688.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="安装Tale博客"><a href="#安装Tale博客" class="headerlink" title="安装Tale博客"></a>安装Tale博客</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://static.biezhi.me/tale-least.zip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unzip tale-least.zip</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237600130824.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd tale</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./tale-cli start</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237601311912.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>最后在远程主机浏览器输入<code>127.0.0.1:9000</code>就可以开始你的博客历程了</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15237602146298.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="本项目实战到此结束"><a href="#本项目实战到此结束" class="headerlink" title="本项目实战到此结束"></a>本项目实战到此结束</h2>]]></content>
    
    <summary type="html">
    
      在 Fedora27 部署国人开源博客 Tale
    
    </summary>
    
      <category term="Linux" scheme="https://blog.iamzhl.top/categories/Linux/"/>
    
    
      <category term="Tale" scheme="https://blog.iamzhl.top/tags/Tale/"/>
    
  </entry>
  
  <entry>
    <title>Deploy tale on CentOS7</title>
    <link href="https://blog.iamzhl.top/Deploy-tale-on-CentOS7.html"/>
    <id>https://blog.iamzhl.top/Deploy-tale-on-CentOS7.html</id>
    <published>2018-04-14T01:34:15.000Z</published>
    <updated>2018-04-14T06:54:27.714Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>什么是<code>Nginx</code>?</p></blockquote><ul><li><code>Nginx</code>类似于<code>Apache</code>和<code>Tomcat</code>，也是一种服务器软件。</li><li><code>Nginx</code>是一个高性能的<code>HTTP</code>和反向代理服务器，也可以实现负载均衡的功能。</li><li>与<code>Tomcat</code>相比，<code>Tomcat</code>是一个<code>Java</code>实现的重量级服务器，而<code>Nginx</code>是一个轻量级服务器。</li><li>与<code>Apache</code>相比，<code>Nginx</code>能支持处理百万级的<code>TCP</code>连接，<code>10万</code>以上的并发连接。</li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><code>CentOS</code>主机</li><li><code>ssh</code>工具</li></ul><h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><h3 id="CentOS安装ssh工具"><a href="#CentOS安装ssh工具" class="headerlink" title="CentOS安装ssh工具"></a><code>CentOS</code>安装<code>ssh</code>工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install openssh-server -y</span><br></pre></td></tr></table></figure><h3 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功"></a>检查是否安装成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa | grep ssh-server</span><br></pre></td></tr></table></figure><blockquote><p>如图所示即安装成功</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost]/home/parallels# rpm -qa | grep ssh-server  openssh-server-7.4p1-13.el7_4.x86_64[root@localhost]/home/parallels#</span><br></pre></td></tr></table></figure><h3 id="打开虚拟机建立连接"><a href="#打开虚拟机建立连接" class="headerlink" title="打开虚拟机建立连接"></a>打开虚拟机建立连接</h3><p>配置好<code>IP</code>、网关、掩码以及<code>DNS</code></p><h3 id="连接到远程主机"><a href="#连接到远程主机" class="headerlink" title="连接到远程主机"></a>连接到远程主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh parallels@192.168.46.226</span><br></pre></td></tr></table></figure><blockquote><p>如图建立连接成功</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15236728557742.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>其中命令格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh user@ip</span><br></pre></td></tr></table></figure></p><p>即远程连接的用户名<code>@</code>其<code>IP</code>地址，此处就是之前配置好的<code>IP</code>地址</p><p><strong>Note: 此处往下内容，均为远程登录后对远程主机的操作</strong></p><h3 id="切换root权限"><a href="#切换root权限" class="headerlink" title="切换root权限"></a>切换<code>root</code>权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo -s</span><br></pre></td></tr></table></figure><h3 id="安装编译依赖工具以及库文件"><a href="#安装编译依赖工具以及库文件" class="headerlink" title="安装编译依赖工具以及库文件"></a>安装编译依赖工具以及库文件</h3><blockquote><p><code>gcc-c++</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install gcc gcc-c++ autoconf automake</span><br></pre></td></tr></table></figure><blockquote><p><code>pcre</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install pcre pcre-devel</span><br></pre></td></tr></table></figure><blockquote><p><code>zlib</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install zlib zlib-devel</span><br></pre></td></tr></table></figure><blockquote><p>检查是否安装成功</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15236735604953.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装<code>Nginx</code></h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://nginx.org/download/nginx-1.12.0.tar.gz</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15236731142572.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxvf nginx-1.12.0.tar.gz</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15236732255925.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="对Nginx进行配置部署"><a href="#对Nginx进行配置部署" class="headerlink" title="对Nginx进行配置部署"></a>对<code>Nginx</code>进行配置部署</h4><blockquote><p>进入<code>Nginx</code>目录，执行<code>configure</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd nginx-1.12.0 &amp;&amp; ./configure</span><br></pre></td></tr></table></figure></p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15236737656357.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>编译安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="检查nginx是否成功安装"><a href="#检查nginx是否成功安装" class="headerlink" title="检查nginx是否成功安装"></a>检查<code>nginx</code>是否成功安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ll -h /usr/local | grep nginx</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15236740752298.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如图，有结果输出表示安装完成</p><h3 id="Nginx各文件简介"><a href="#Nginx各文件简介" class="headerlink" title="Nginx各文件简介"></a><code>Nginx</code>各文件简介</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15236742286457.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><ul><li><p><code>conf</code> – 放置<code>nginx</code>的配置文件</p></li><li><p><code>html</code> – 放置网页程序</p></li><li><p><code>logs</code> – 放置日志文件</p></li><li><p><code>sbin</code> – 放置<code>Nginx</code>可执行应用程序</p></li></ul><h3 id="Nginx的常用命令"><a href="#Nginx的常用命令" class="headerlink" title="Nginx的常用命令"></a><code>Nginx</code>的常用命令</h3><blockquote><p>启动(格式就是Nginx可执行文件地址 -c Nginx配置文件地址)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><blockquote><p>重启(格式就是Nginx可执行文件地址 -s reload)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/local/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><blockquote><p>杀死进程</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pkill -9 nginx</span><br></pre></td></tr></table></figure><blockquote><p>验证配置文件重启(格式就是Nginx可执行文件地址 -t)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/local/nginx/sbin/nginx -t</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15236747108486.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>在启动<code>nginx</code>的同时测试配置文件是否正确</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/local/nginx/sbin/nginx -tc /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15236749008794.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="部署Tale"><a href="#部署Tale" class="headerlink" title="部署Tale"></a>部署<code>Tale</code></h3><h4 id="安装Java8运行环境"><a href="#安装Java8运行环境" class="headerlink" title="安装Java8运行环境"></a>安装<code>Java8运行环境</code></h4><blockquote><p><code>Tale</code>是用<code>Java</code>实现的，所以需要<code>Java</code>环境</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ; mkdir /usr/java &amp;&amp; cd /usr/java </span><br><span class="line">$ yum install java-1.8.0-openjdk* -y</span><br></pre></td></tr></table></figure><h4 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装<code>MySQL</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y mysql-server mysql mysql-devel</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service mysqld restart</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/mysqladmin -u root password &apos;123456&apos;</span><br></pre></td></tr></table></figure><hr><h4 id="安装Nginx服务器-与前面略有不同"><a href="#安装Nginx服务器-与前面略有不同" class="headerlink" title="安装Nginx服务器(与前面略有不同)"></a>安装<code>Nginx</code>服务器(与前面略有不同)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install nginx -y</span><br></pre></td></tr></table></figure><h4 id="启动nginx-可执行文件在-usr-sbin-下"><a href="#启动nginx-可执行文件在-usr-sbin-下" class="headerlink" title="启动nginx,可执行文件在/usr/sbin/下"></a>启动nginx,可执行文件在/usr/sbin/下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/sbin/nginx -t</span><br></pre></td></tr></table></figure><h4 id="新建数据库"><a href="#新建数据库" class="headerlink" title="新建数据库"></a>新建数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p</span><br></pre></td></tr></table></figure><p>输入密码登录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ create database `tale` default character set utf8 collate utf8_general_ci;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ exit;</span><br></pre></td></tr></table></figure><h4 id="安装Tale博客"><a href="#安装Tale博客" class="headerlink" title="安装Tale博客"></a>安装Tale博客</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://static.biezhi.me/tale-least.zip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unzip tale.zip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd tale</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./tale-cli</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15236888643209.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>最后在浏览器输入<code>127.0.0.1:9000</code>就可以开始你的博客历程了</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15236887060359.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      在 CentOS7 部署国人开源博客 Tale
    
    </summary>
    
      <category term="Linux" scheme="https://blog.iamzhl.top/categories/Linux/"/>
    
    
      <category term="Tale" scheme="https://blog.iamzhl.top/tags/Tale/"/>
    
  </entry>
  
  <entry>
    <title>Intro about iterator in struts2</title>
    <link href="https://blog.iamzhl.top/Intro-about-iterator-in-struts2.html"/>
    <id>https://blog.iamzhl.top/Intro-about-iterator-in-struts2.html</id>
    <published>2018-04-11T02:12:17.000Z</published>
    <updated>2018-04-11T02:59:33.293Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="简单的Demo"><a href="#简单的Demo" class="headerlink" title="简单的Demo"></a>简单的<code>Demo</code></h3><blockquote><p>s:iterator 标签有三个属性：</p></blockquote><ul><li>value: 被迭代的集合</li><li>id: 指定集合中元素的<code>id</code></li><li>status: 迭代元素的索引</li></ul><h4 id="jsp页面定义元素写法-数组或list"><a href="#jsp页面定义元素写法-数组或list" class="headerlink" title="jsp页面定义元素写法 数组或list"></a><code>jsp</code>页面定义元素写法 数组或<code>list</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:iterator value=&quot;&#123;&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;,&apos;5&apos;&#125;&quot; &gt;</span><br><span class="line">    &lt;s:property value=&apos;number&apos;/&gt;A</span><br><span class="line">&lt;/s:iterator&gt;</span><br></pre></td></tr></table></figure><p>打印结果为: 1A2A3A4A5A</p><h4 id="索引的用法"><a href="#索引的用法" class="headerlink" title="索引的用法"></a>索引的用法</h4><blockquote><p>如果指定了status，每次的迭代数据都有IteratorStatus的实例，它有以下几个方法</p></blockquote><ul><li>int getCount() – 返回当前迭代了几个元素</li><li>int getIndex() – 返回当前元素索引</li><li>boolean isEven() – 当前的索引是否偶数</li><li>boolean isFirst() – 当前是否第一个元素</li><li>boolean isLast() – 当前是否最后一个元素</li><li>boolean isOdd() – 当前元素索引是否奇数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:iterator value=&quot;&#123;&apos;a&apos;,&apos;b&apos;,&apos;c&apos;&#125;&quot; status=&apos;st&apos;&gt;</span><br><span class="line">    &lt;s:if test=&quot;#st.Even&quot;&gt;</span><br><span class="line">        现在的索引是奇数为:&lt;s:property value=&apos;#st.index&apos;/&gt;</span><br><span class="line">    &lt;/s:if&gt;</span><br><span class="line">    当前元素值：&lt;s:property value=&apos;char&apos;/&gt;</span><br><span class="line">&lt;/s:iterator&gt;</span><br></pre></td></tr></table></figure><h4 id="遍历map"><a href="#遍历map" class="headerlink" title="遍历map"></a>遍历<code>map</code></h4><p><code>value</code>可以直接定义为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value=&quot;#&#123;&quot;1&quot;:&quot;a&quot;,&quot;2&quot;:&quot;b&quot;&#125;&quot;</span><br></pre></td></tr></table></figure><p>每个元素以逗号隔开，元素之间的<code>key</code>和<code>value</code>冒号隔开。</p><p><code>value</code>也可以是数据栈里面的<code>java.util.Map</code>对象</p><blockquote><p>遍历写法如下：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:iterator value=&quot;map&quot; status=&quot;st&quot;&gt;</span><br><span class="line">    key : &lt;s:property value=&apos;key&apos;/&gt;</span><br><span class="line">    value:&lt;s:property vlaue=&apos;value&apos;/&gt;</span><br><span class="line">&lt;/s:iterator&gt;</span><br></pre></td></tr></table></figure><p>当然<code>key</code>和<code>value</code>都可以是<code>java</code>的 <code>Object</code>。</p><h4 id="遍历数据栈-–-简单的List类"><a href="#遍历数据栈-–-简单的List类" class="headerlink" title="遍历数据栈 – 简单的List类"></a>遍历数据栈 – 简单的<code>List</code>类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Attr&gt; class Attr&#123;</span><br><span class="line">    String attrName;</span><br><span class="line">    String getAttrName()</span><br><span class="line">    &#123;</span><br><span class="line">        return &quot;123&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;s:iterator value=&quot;label&quot; &gt;</span><br><span class="line">    &lt;s:property value=&quot;#id.attrName&quot; /&gt;</span><br><span class="line">&lt;/s:iterator&gt;</span><br></pre></td></tr></table></figure><p>当然<code>value</code>还可以写成<code>value=&quot;%{label}&quot;</code>，<code>label</code>可以用<code>.</code>操作<code>label</code>的属性<code>List</code>，可以写成<code>value=&quot;%{label.list}&quot;</code>，相当于: <code>getLabel().getList()</code>；</p><h4 id="遍历-2-个list"><a href="#遍历-2-个list" class="headerlink" title="遍历 2 个list"></a>遍历 2 个<code>list</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">List&lt;AttrName&gt; attrN &#123;color,size,style&#125;</span><br><span class="line">List&lt;AttrValue&gt; attrV &#123;red,20,gay&#125;</span><br></pre></td></tr></table></figure><p>这 2 个<code>list</code>的元素是一一对应的，一个attrN对应一个attrV</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:iterator value=&quot;%&#123;attrN&#125;&quot; status=&quot;status&quot;&gt;</span><br><span class="line">    index    is : &lt;s:property value=&apos;status.index&apos;/&gt;</span><br><span class="line">    attrName is : &lt;s:property value=&apos;id&apos;/&gt; or &lt;s:property value=&apos;%&#123;id&#125;&apos;/&gt;</span><br><span class="line">    attrName is : &lt;s:property value=&apos;%&#123;attrV[#status.index]&#125;&apos;/&gt;</span><br><span class="line">&lt;/s:iterator&gt;</span><br><span class="line"></span><br><span class="line">&lt;s:bean&gt;</span><br><span class="line">    &lt;s:param value=&quot;5&quot; /&gt;</span><br><span class="line">    &lt;s:param value=&quot;10&quot; /&gt;</span><br><span class="line">    &lt;s:iterator&gt;</span><br><span class="line">        counter:&lt;s:property/&gt;</span><br><span class="line">    &lt;/s:iterator&gt;</span><br><span class="line">&lt;/s:bean&gt;</span><br></pre></td></tr></table></figure><blockquote><p>这个标签主要的的作用就是迭代出集合。<br>value属性表示需要跌代显示出来的值。<br>status属性，又来保存迭代时的一些状态值。</p></blockquote><p><strong>注：</strong></p><ul><li>如果需要引用<code>valueStack</code>中的值，需要使用这样的形式。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:iterator value=&quot;#userList&quot; /&gt; //userList</span><br></pre></td></tr></table></figure><blockquote><p>在<code>action</code>部分被保存在<code>Request</code>中，所以使用<code>#</code>加属性名来引用值。</p></blockquote><ul><li>如果集合的值是通过<code>action</code>的方法，假设我们的<code>action</code>中有一个<code>getListMenu</code>方法，返回一个<code>List</code>集合。我们可以使用如下的形式来引用这个集合，并用<code>s:iterator</code>来输出。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:iterator value=&quot;listMenu&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li><code>iterator</code>的<code>value</code>使用定义好的方式，如：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:iterator value=&quot;&#123;1,2,3,4&#125;&quot; /&gt;    //这样跌代输出的值就是1.2.3.4这四个值。</span><br></pre></td></tr></table></figure><h3 id="iterator中输出具体值"><a href="#iterator中输出具体值" class="headerlink" title="iterator中输出具体值"></a><code>iterator</code>中输出具体值</h3><p>如果，在上面我们的<code>list</code>中的对象，有两个属性，都是<code>String</code>类型，一个是<code>name</code>，一个是<code>url</code>。<br>我们可以这样来引用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;name&quot; /&gt;     //这样我们将可以输出迭代对象的name属性值。</span><br></pre></td></tr></table></figure><p>如果我们希望使用<code>&lt;s:url /&gt;</code>来将跳转过后的<code>url</code>进行处理，该如何来做？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:url value=&quot;%&#123;url&#125;&quot;/&gt;     //%&#123;&#125;ognl的表达式，这样的值能够将url的值进行&lt;s:url/&gt;的处理</span><br><span class="line">实际上就是转为绝对路径。这样，我们就可以对付一些因跳转换产生的路径问题。</span><br></pre></td></tr></table></figure><p><strong>原因：</strong><br>因为<code>&lt;s:iteratotr /&gt;</code>以后，当前的对象应该就在<code>ValueStack</code>顶部了，这样当然的<code>url</code>实际上就是对象的<code>url</code>属性了。</p><h3 id="使用ognl输出对应的值"><a href="#使用ognl输出对应的值" class="headerlink" title="使用ognl输出对应的值"></a>使用ognl输出对应的值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:textfield value=&quot;%&#123;#request.loginNames&#125;&quot;/&gt;</span><br></pre></td></tr></table></figure><p>使用此表达式，会生成一个文本框，并且，如果<code>request.attribute</code>中有<code>loginNames</code>属性，将会做为些文本框的默认值。</p><p>如果只使用<code>#request.loginNames</code>在<code>struts2</code>的标签内部，是不会显示任何值的，注意外面加上的<code>%{}</code>符号，才会被正常的使用。</p><p>如果希望如<code>EL</code>语言一样直接输出文件，如在一个<code>&lt;a&gt;&lt;/a&gt;</code>之间的<code>innerHTML</code>文本为<code>#request.loginNames</code>的值，我们只要使用：<code>&lt;s:property value=&quot;#request.loginNames&quot; /&gt;</code>便可以正常使用！</p><p><strong>注：</strong></p><ul><li><code>${}</code>是<code>EL</code>语言的<code>%{}</code>这样的形式是<code>ognl</code>表达式语言的，在<code>struts2</code>的标签内部，使用<code>%{}</code>这样的形式，在标签外部可以使用<code>${}</code> <code>EL</code>语言的方式。如果在<code>struts2</code>的标签内部使用<code>${}</code>这样的方式，会出现以下的错误提示：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">According to TLD or attribute directive in tag file, attribute value does not accept any expressions</span><br></pre></td></tr></table></figure><p>2.很多时候，我们使用<code>struts2</code>的一些标签，属性是需要接受集合的，如果集合是保存在<code>request,session</code>，或者是值栈(非根对象的栈顶)，可以使用<code>#变量名</code>的方式，如果获取的值是在<code>Action</code>中通过特定的方法来获取，就需要使用如<code>value=&quot;userList&quot;</code>这样的方式，只是去掉了前面的<code>#</code>。</p><h3 id="struts2中的OGNL用法"><a href="#struts2中的OGNL用法" class="headerlink" title="struts2中的OGNL用法"></a><code>struts2</code>中的<code>OGNL</code>用法</h3><h4 id="User对象属性获取"><a href="#User对象属性获取" class="headerlink" title="User对象属性获取"></a><code>User</code>对象属性获取</h4><p>如<code>User</code>中有<code>username</code>和<code>password</code>字段</p><ul><li><p>获取<code>username</code>属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;user.username&quot; /&gt;</span><br></pre></td></tr></table></figure></li><li><p>获取<code>password</code>属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;user.password&quot; /&gt;</span><br></pre></td></tr></table></figure></li></ul><p>若<code>User</code>中又包含定义了<code>address</code>对象，<code>address</code>对象中包含有<code>addr</code>属性，则可以这样访问获取<code>addr</code>属性:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;user.address.addr&quot; /&gt;</span><br></pre></td></tr></table></figure></p><p>若<code>User</code>中还包含一个<code>get()</code>的普通方法，可以这样调用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;user.get()&quot; /&gt;</span><br></pre></td></tr></table></figure></p><p>以上是调用值栈中对象的普通方法，<code>user</code>为值栈中的对象</p><hr><p>调用<code>action</code>中的静态方法<code>get()</code>，普通方法不能直接调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;@com.netshuai.action.ManagerAction@get()&quot; /&gt;</span><br></pre></td></tr></table></figure><p>以上为调用非值栈中的静态方法</p><hr><p>调用<code>JDK</code>中类的静态方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;@java.lang.Math@floor(32.56)&quot; /&gt;</span><br></pre></td></tr></table></figure><p>上例也可写成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;@@floor(32.56)&quot; /&gt;</span><br></pre></td></tr></table></figure><p>省略前面的类则默认使用<code>java.lang.Math</code>类，其他类不可省略</p><hr><p>调用普通类中的静态属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;@com.netshuai.model.Address@city&quot; /&gt;</span><br></pre></td></tr></table></figure><p><code>address</code>中的<code>city</code>静态属性要用<code>public</code>声明</p><hr><p>调用普通类的构造方法，如构造方法为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public User(String username)</span><br><span class="line">&#123;</span><br><span class="line">    this.username=username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用方法为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;new com.netshuai.model.User(&apos;hello&apos;).username&quot; /&gt;</span><br></pre></td></tr></table></figure><p>则返回<code>username</code>值为<code>hello</code></p><hr><ul><li>获取<code>List</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;list&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>获取<code>List</code>中的某一个元素</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;list[0]&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>获取<code>List</code>的大小</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;list.size&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>获取<code>Set</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;set&quot; /&gt;</span><br></pre></td></tr></table></figure><p>无法获取<code>Set</code>中的某一个元素，因为<code>Set</code>没有顺序</p><ul><li>获取<code>Map</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;map&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>获取<code>Map</code>中所有<code>key</code>的值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;map.keys&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>获取<code>Map</code>中所有<code>value</code>的值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;map.values&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>获取<code>Map</code>中的某一个元素</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;map[&apos;k1&apos;]&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>获取<code>List</code>所有对象</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;listObject&quot; /&gt;</span><br></pre></td></tr></table></figure><p>需要重写<code>toString()</code>方法才能正常显示对象的值</p><ul><li>利用投影获取<code>List</code>中所有对象的<code>username</code>属性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;listObject.&#123;username&#125;&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>利用投影获取<code>List</code>中第一个对象的<code>username</code>属性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;listObject.&#123;username&#125;[0]&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>利用选择获取<code>List</code>中年龄大于 30 的对象</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;listObject.&#123;?#this.age&gt;30&#125;&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>利用选择获取<code>List</code>中年龄大于 30 的对象的<code>username</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;listObject.&#123;?#this.age&gt;30&#125;.&#123;username&#125;&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>利用选择获取<code>List</code>中年龄大于 30 的第一个对象的<code>username</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;listObject.&#123;?#this.age&gt;30&#125;.&#123;username&#125;[0]&quot; /&gt;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;listObject.&#123;^#this.age&gt;30&#125;.&#123;username&#125;&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>利用选择获取<code>List</code>中年龄大于 30 的最后一个对象的<code>username</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;listObject.&#123;$#this.age&gt;30&#125;.&#123;username&#125;&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>获取<code>parameters</code>中的属性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;#parameters.name&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>获取<code>request</code>中的属性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;#request.name&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>获取<code>session</code>中的属性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;#session.name&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>获取<code>application</code>中的属性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;#application.name&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li>按顺序遍历上面四个对象，然后返回首先找到的值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;#attr.name&quot; /&gt;</span><br></pre></td></tr></table></figure><ul><li><p><code>%{}</code>可以取出存在值堆栈中的<code>Action</code>对象，直接调用它的方法，如<code>%{getText(&#39;key&#39;)}</code>可以取出国际化信息</p></li><li><p><code>${}</code>可以用在国际化资源文件中和<code>struts2</code>配置文件中</p></li><li><p>使用<code>top</code>获取值栈中第二个对象</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;[1].top.user&quot;/&gt;</span><br></pre></td></tr></table></figure><ul><li>使用<code>top</code>获取值栈中第二个对象的属性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s:property value=&quot;[1].user&quot;/&gt;</span><br></pre></td></tr></table></figure><ul><li>调用值栈中<code>action</code>的静态方法(<code>vs</code>也可写做<code>vs1</code>)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get()&lt;s:property value=&quot;@vs@get()&quot;/&gt;</span><br></pre></td></tr></table></figure><ul><li>调用值栈中第二个<code>action</code>的静态方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get()&lt;s:property value=&quot;@vs2@get()&quot;/&gt;</span><br></pre></td></tr></table></figure><ul><li>将一个对象放入值栈</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ActionContext.getContext().getValueStack().push(user);</span><br></pre></td></tr></table></figure><h3 id="转载自"><a href="#转载自" class="headerlink" title="转载自"></a>转载自</h3><p><a href="http://tomfish88.iteye.com/blog/1489506" target="_blank" rel="noopener">http://tomfish88.iteye.com/blog/1489506</a></p>]]></content>
    
    <summary type="html">
    
      struts2中s:iterator 标签的使用详解
    
    </summary>
    
      <category term="Study" scheme="https://blog.iamzhl.top/categories/Study/"/>
    
    
      <category term="struts2" scheme="https://blog.iamzhl.top/tags/struts2/"/>
    
      <category term="iterator" scheme="https://blog.iamzhl.top/tags/iterator/"/>
    
      <category term="框架" scheme="https://blog.iamzhl.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>OSI Model</title>
    <link href="https://blog.iamzhl.top/OSI-Model.html"/>
    <id>https://blog.iamzhl.top/OSI-Model.html</id>
    <published>2018-04-09T08:36:53.000Z</published>
    <updated>2018-04-09T09:18:37.790Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>OSI（Open System Interconnection）参考模型是国际标准化组织（ISO）制定的一个用于计算机或通信系统间互联的标准体系，一般称为OSI参考模型或七层模型。</p><h2 id="模型图"><a href="#模型图" class="headerlink" title="模型图"></a>模型图</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/1099668-20170212153338135-125492424.jpg" alt="1099668-20170212153338135-125492424" title="">                </div>                <div class="image-caption">1099668-20170212153338135-125492424</div>            </figure><h3 id="各层描述"><a href="#各层描述" class="headerlink" title="各层描述"></a>各层描述</h3><h3 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h3><blockquote><p>设备之间的比特流传输、物理接口、电气特性等</p></blockquote><p>物理层并不是物理媒体本身，它只是开放系统中利用物理媒体实现物理连接的功能描述和执行连接的规程。物理层提供用于建立、保持和断开物理连接的机械的、电气的、功能的和过程的条件。简而言之，物理层提供有关同步和全双工比特流在物理媒体上的传输手段，其典型的协议有<code>RS 232C</code>、<code>RS 449/422/423</code>、<code>V.24</code>和<code>X.21</code>、<code>X.21bis</code>等。</p><p>物理层是<code>OSI</code>的第一层，它虽然处于最底层，却是整个开放系统的基础。物理层为设备之间的数据通信提供传输媒体及互连设备，为数据传输提供可靠的环境。</p><ul><li><p>为数据端设备提供传送数据的通路，数据通路可以是一个物理媒体，也可以是多个物理媒体连接而成。一次完整的数据传输，包括激活物理连接、传送数据和终止物理连接。所谓激活，就是不管有多少物理媒体参与，都要在通信的两个数据终端设备间连接起来，形成一条通路。</p></li><li><p>传输数据。物理层要形成适合数据传输需要的实体，为数据传送服务。一是要保证数据能在其上正确通过，二是要提供足够的带宽(带宽是指每秒钟内能通过的比特(<code>Bit</code>)数)，以减少信道上的拥塞。传输数据的方式能满足点到点，一点到多点，串行或并行，半双工或全双工，同步或异步传输的需要。</p></li><li><p>完成物理层的一些管理工作。</p></li></ul><h3 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h3><blockquote><p>封装数据帧</p></blockquote><p>数据链路可以粗略地理解为数据通道。物理层要为终端设备间的数据通信提供传输介质及其连接。介质是长期的，连接是有生存期的。在连接生存期内，收发两端可以进行不等的一次或多次数据通信。每次通信都要经过建立通信联络和拆除通信联络两个过程。这种建立起来的数据收发关系就叫做数据链路。而在物理媒体上传输的数据难免受到各种不可靠因素的影响而产生差错，为了弥补物理层上的不足，为上层提供无差错的数据传输，就要能对数据进行检错和纠错。数据链路的建立，拆除，对数据的检错，纠错是数据链路层的基本任务。</p><p>链路层是为网络层提供数据传送服务的，这种服务要依靠本层具备的功能来实现。链路层应具备如下功能：</p><ul><li>链路连接的建立、拆除和分离；</li><li>帧定界和帧同步。链路层的数据传输单元是帧，协议不同，帧的长短和界面也有差别，但无论如何必须对帧进行定界；</li><li>顺序控制，指对帧的收发顺序的控制；</li><li>差错检测和恢复。还有链路标识，流量控制等等。差错检测多用方阵码校验和循环码校验来检测信道上数据的误码，而帧丢失等用序号检测。各种错误的恢复则常靠反馈重发技术来完成。</li></ul><p>独立的链路产品中最常见的当属网卡，网桥也是链路产品。数据链路层将本质上不可靠的传输媒体变成可靠的传输通路提供给网络层。在<code>IEEE802.3</code>情况下，数据链路层分成了两个子层，一个是逻辑链路控制，另一个是媒体访问控制.</p><p><code>OSI</code>其中：</p><ul><li><code>AUI</code>——连接单元接口 </li><li><code>PMA</code>——物理媒体连接</li><li><code>MAU</code>——媒体连接单元 </li><li><code>PLS</code>——物理信令</li><li><code>MDI</code>——媒体相关接口</li></ul><h3 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h3><blockquote><p>封装数据报文</p></blockquote><p>网络层的产生也是网络发展的结果。在联机系统和线路交换的环境中，网络层的功能没有太大意义。当数据终端增多时。它们之间有中继设备相连，此时会出现一台终端要求不只是与惟一的一台而是能和多台终端通信的情况，这就产生了把任意两台数据终端设备的数据链接起来的问题，也就是路由或者叫寻径。另外，当一条物理信道建立之后，被一对用户使用，往往有许多空闲时间被浪费掉。人们自然会希望让多对用户共用一条链路，为解决这一问题就出现了逻辑信道技术和虚拟电路技术。</p><p>中继控制层，其主要功能是利用数据链路层所保证的邻接节点间的无差错数据传输功能，通过路由选择和中继功能，实现两个端系统之间的数据传输。为此，网络层还具有多路复用功能，采用统计时分复用原理，将一条数据链路复用为多条逻辑信道，从而实现一个数据终端设备利用一条物理电路同时和多个远程数据通信设备的通信。网络层规定了网路连接的建立和拆除规程以及数据传送规程等。</p><ul><li>路由选择和中继；</li><li>激活，终止网络连接；</li><li>在一条数据链路上复用多条网络连接，多采取分时复用技术；</li><li>检测与恢复；</li><li>排序，流量控制；</li><li>服务选择；</li><li>网络管理。</li></ul><h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><blockquote><p>确定传输协议、确定数据传输的接口</p></blockquote><p>主要功能是端开放系统之间数据的收妥确认。同时，还用于弥补各种通信网路的质量差异，对经过下三层之后仍然存在的传输差错进行恢复，进一步提高可靠性。另外，还通过复用、分段和组合、连接和分离、分流和合流等技术措施，提高吞吐量和服务质量。</p><p>传输层是两台计算机经过网络进行数据通信时，第一个端到端的层次，具有缓冲作用。当网络层服务质量不能满足要求时，它将服务加以提高，以满足高层的要求；当网络层服务质量较好时，它只用很少的工作。传输层还可进行复用，即在一个网络连接上创建多个逻辑连接。传输层也称为运输层。传输层只存在于端开放系统中，是介于低3层通信子网系统和高3层之间的一层，但是很重要的一层。因为它是源端到目的端对数据传送进行控制从低到高的最后一层。</p><p>有一个既存事实，即世界上各种通信子网在性能上存在着很大差异。例如电话交换网，分组交换网，公用数据交换网，局域网等通信子网都可互连，但它们提供的吞吐量，传输速率，数据延迟通信费用各不相同。对于会话层来说，却要求有一性能恒定的界面。传输层就承担了这一功能。它采用分流/合流，复用/介复用技术来调节上述通信子网的差异，使会话层感受不到。</p><p>此外传输层还要具备差错恢复，流量控制等功能，以此对会话层屏蔽通信子网在这些方面的细节与差异。传输层面对的数据对象已不是网络地址和主机地址，而是会话层的界面端口。上述功能的最终目的是为会话提供可靠的，无误的数据传输。传输层的服务一般要经历传输连接建立、数据传送、传输连接释放3个阶段才算完成一个完整的服务过程。而在数据传送阶段又分为一般数据传送和加速数据传送两种。</p><h3 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h3><blockquote><p>对应用会话的管理、同步</p></blockquote><p>按照在应用进程之间约定的原则，按照正确的顺序收、发数据，进行各种形态的对话。会话层规定了会话服务用户间会话连接的建立和拆除规程以及数据传送规程。</p><p>会话层提供的服务是应用建立和维持会话，并能使会话获得同步。会话层使用校验点可使通信会话在通信失效时从校验点继续恢复通信。这种能力对于传送大的文件极为重要。会话层，表示层，应用层构成开放系统的高3层，面向应用进程提供分布处理、对话管理、信息表示、检查和恢复与语义上下文有关的传送差错等。为给两个对等会话服务用户建立一个会话连接，应该做如下几项工作：</p><ul><li>将会话地址映射为运输地址；</li><li>数据传输阶段；</li><li>连接释放。</li></ul><h3 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h3><blockquote><p>数据的表现形式、特殊数据的加密、压缩（解释传输的数据）</p></blockquote><p>把应用层提供的信息变换为能够共同理解的形式，提供字符代码、数据格式、控制信息格式、加密等的统一表示。表示层的作用之一是为异种机通信提供一种公共语言，以便能进行互操作。这种类型的服务之所以需要，是因为不同的计算机体系结构使用的数据表示法不同。例如，<code>IBM</code>主机使用<code>EBCDIC</code>编码，而大部分<code>PC</code>机使用的是<code>ASCII</code>码。在这种情况下，便需要表示层来完成这种转换。通过前面的介绍，我们可以看出，会话层以下5层完成了端到端的数据传送，并且是可靠的、无差错的传送。但是数据传送只是手段而不是目的，最终是要实现对数据的使用。由于各种系统对数据的定义并不完全相同，最易明白的例子是键盘——其上的某些键的含义在许多系统中都有差异。这自然给利用其它系统的数据造成了障碍。表示层和应用层就担负了消除这种障碍的任务。</p><h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><blockquote><p>提供用户接口</p></blockquote><p>实现应用进程（如用户程序、终端操作员等）之间的信息交换。同时，还具有一系列业务处理所需要的服务功能。应用层一般包括公共应用服务要素（<code>CASE</code>）和特定应用服务要素（<code>SASE</code>）。其中<code>CASE</code>提供应用进程中最基本的服务，向应用进程提供信息传送所必需的、但又独立于应用进程通信的能力。SASE实质上是各种应用进程在应用层中的映射，每一个<code>SASE</code>都针对某一类具体应用，例如文件传送、访问和管理（<code>FTAM</code>）、虚拟终端（<code>VT</code>）、消息处理系统（<code>MHS</code>）、电子数据互换（<code>EDI</code>）和目录查询等。</p><p>应用层向应用程序提供服务，这些服务按其向应用程序提供的特性分成组，并称为服务元素。有些可为多种应用程序共同使用，有些则为较少的一类应用程序使用。应用层是开放系统的最高层，是直接为应用进程提供服务的。其作用是在实现多个系统应用进程相互通信的同时，完成一系列业务处理所需的服务。</p><h2 id="OSI七层模型-相关协议-缩写"><a href="#OSI七层模型-相关协议-缩写" class="headerlink" title="OSI七层模型 相关协议 缩写"></a>OSI七层模型 相关协议 缩写</h2><h3 id="应用层-1"><a href="#应用层-1" class="headerlink" title="应用层"></a>应用层</h3><p>HTTP        超文本传输协议<br>FTP         文件传输协议<br>SMTP        简单邮件传输协议<br>TELNETTCP/IP    终端仿真协议<br>POP3        邮局协议第三版<br>Finger      用户信息协议<br>NNTP        网络新闻传输协议<br>IMAP4       因特网信息访问协议第四版<br>LPR UNIX    远程打印协议<br>Rwho UNIX   远程 Who协议<br>Rexec UNIX  远程执行协议<br>Login UNIX  远程登陆协议<br>RSH UNIX    远程Shell协议<br>NTF HP      网络文件传输协议<br>RDA HP      远程数据库访问协议<br>VT          虚拟终端仿真协议<br>RFA HP      远程文件访问协议<br>RPC Remote Process Comm.<br>S-HTTP      安全超文本传输协议<br>GDP         网关发现协议<br>X-Window<br>CMOT        基于TCP/IP的CMIP协议<br>SOCKS       安全套接字协议<br>FANP        流属性通知协议<br>SLP         服务定位协议<br>MSN         微软网络服务<br>Radius      远程用户拨号认证服务协议<br>DNS         域名系统<br>NFS         网络文件系统协议<br>NIS SUN     网络信息系统协议<br>R-STAT SUN  远程状态协议<br>NSM SUN     网络状态监测协议<br>PMAP SUN    端口映射协议<br>Mount<br>LPR         UNIX远程打印协议</p><h4 id="常用UDP协议的应用层服务"><a href="#常用UDP协议的应用层服务" class="headerlink" title="常用UDP协议的应用层服务"></a>常用UDP协议的应用层服务</h4><p>BOOTP   引导协议<br>DHCP    动态主机配套协议<br>NTP     网络时间协议<br>TFTP    简单文件传输协议<br>SNMP    简单网络管理协议</p><h3 id="表示层-1"><a href="#表示层-1" class="headerlink" title="表示层"></a>表示层</h3><p>DECnet NSP<br>LPP             轻量级表示协议<br>NBSSN NetBIOS   会话服务协议<br>XDP             外部数据表示协议<br>IPX</p><h3 id="会话层-1"><a href="#会话层-1" class="headerlink" title="会话层"></a>会话层</h3><p>SSL     安全套接字层协议<br>TLS     传输层安全协议<br>DAP     目录访问协议<br>LDAP    轻量级目录访问协议<br>RPC     远程过程调用协议<br>VINES NETRPC<br>VFRP<br>NeTBIOS<br>IPX</p><h3 id="传输层-1"><a href="#传输层-1" class="headerlink" title="传输层"></a>传输层</h3><p>XOT         基于tcp之上的X协议<br>Van Jacobson 压缩TCP协议<br>ISO-DE ISO  开发环境——–&gt;NetBISO<br>TALI        传输适配层接口协议<br>DSI、NetBIOS、IP NeTBIOS、ISO-TP SSP、SMB、MSRPC<br>UDP         用户数据报协议<br>RUDP        可靠的用户数据报协议<br>Mobile IP   移动IP协议</p><h3 id="网络层-1"><a href="#网络层-1" class="headerlink" title="网络层"></a>网络层</h3><p>IP/IPv6 互联网协议/互联网协议第六版<br>ICMPv6  互联网控制信息协议第六版<br>ICMP    互联网控制信息协议<br>IGMP    互联网组管理协议<br>SLIP    串行线路IP协议</p><h4 id="安全协议"><a href="#安全协议" class="headerlink" title="安全协议"></a>安全协议</h4><p>AH  认证头协议<br>ESP 安装封装有效载荷协议</p><h4 id="路由协议"><a href="#路由协议" class="headerlink" title="路由协议"></a>路由协议</h4><p>EGP     外部网关协议<br>OSPF    开放最短路径优先协议<br>IGRP    内部网关路由协议<br>NHRP    下一跳解析协议<br>IE-IRGP     增强内部网关路由选择协议<br>RIPng for IPv6 IPv6路由信息协议<br>GGP     网关到网关协议<br>VRRP    虚拟路由器冗余协议<br>PGM     实际通用组播协议<br>RSVP    资源预留协议<br>PIM-DM  密集模式独立组播协议<br>DVMRP   距离矢量组播路由协议<br>RIP2    路由信息协议第二版<br>PIM-SM  稀疏模式独立组播协议<br>MOSPF   组播开放最短路径优先协议</p><h3 id="数据链路层-1"><a href="#数据链路层-1" class="headerlink" title="数据链路层"></a>数据链路层</h3><p>MPLS    多协议标签交换协议<br>XTP     压缩传输协议<br>DCAP    数据转换客户访问协议<br>SLE     串行连接封装协议<br>IPinIP  IP套IP封装协议</p><h4 id="隧道协议"><a href="#隧道协议" class="headerlink" title="隧道协议"></a>隧道协议</h4><p>PPTP    点对点隧道协议<br>L2F     第二层转发协议<br>L2TP    第二层隧道协议<br>ATMP    接入隧道管理协议<br>Cisco   协议<br>CDP     思科发现协议<br>CGMP    思科组管理协议</p><h4 id="地址解析协议"><a href="#地址解析协议" class="headerlink" title="地址解析协议"></a>地址解析协议</h4><p>ARP     地址解析协议<br>RAR     逆向地址解析协议</p><h3 id="物理层-1"><a href="#物理层-1" class="headerlink" title="物理层"></a>物理层</h3><p>IEEE        802.2<br>Ethernet    v.2<br>Internetwork</p>]]></content>
    
    <summary type="html">
    
      OSI 七层模型
    
    </summary>
    
      <category term="Linux" scheme="https://blog.iamzhl.top/categories/Linux/"/>
    
    
      <category term="OSI" scheme="https://blog.iamzhl.top/tags/OSI/"/>
    
      <category term="七层模型" scheme="https://blog.iamzhl.top/tags/%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>Common patches on Hackintosh</title>
    <link href="https://blog.iamzhl.top/Common-patches-on-Hackintosh.html"/>
    <id>https://blog.iamzhl.top/Common-patches-on-Hackintosh.html</id>
    <published>2018-04-09T02:08:56.000Z</published>
    <updated>2018-04-09T03:11:53.265Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="先说说怎样强制加载某个驱动"><a href="#先说说怎样强制加载某个驱动" class="headerlink" title="先说说怎样强制加载某个驱动"></a>先说说怎样强制加载某个驱动</h3><p>如下，<code>KextToPatch</code>并列<code>ForceKextsToLoad</code>，设置<code>kext</code>路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;key&gt;ForceKextsToLoad&lt;/key&gt;</span><br><span class="line">&lt;array&gt;</span><br><span class="line">    &lt;string&gt;\System\Library\Extensions\AppleHDA.kext&lt;/string&gt;</span><br><span class="line">    &lt;string&gt;\Extra\Extensions&lt;/string&gt;</span><br><span class="line">&lt;/array&gt;</span><br></pre></td></tr></table></figure></p><h3 id="笔记本显存修改至2048MB"><a href="#笔记本显存修改至2048MB" class="headerlink" title="笔记本显存修改至2048MB"></a>笔记本显存修改至<code>2048MB</code></h3><blockquote><p>HD4200_4400_4600 Mobile：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name：AppleIntelFramebufferAzul</span><br><span class="line">Find：01030303 00000002 00003001 00006000 00000060</span><br><span class="line">Replace：01030303 00000002 00003001 00009000 00000080</span><br><span class="line">Comment:1536MB -&gt; 2048MB for HD4200_4400_4600 Mobile</span><br></pre></td></tr></table></figure><blockquote><p>HD620 Mobile：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name：AppleIntelKBLGraphicsFramebuffer</span><br><span class="line">Find：01030303 00002002 00000000 00000060</span><br><span class="line">Replace：01030303 00002002 00000000 00000080 </span><br><span class="line">Comment:1536MB -&gt; 2048MB for HD620 Mobile</span><br></pre></td></tr></table></figure><blockquote><p>HD630 Mobile：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name：AppleIntelKBLGraphicsFramebuffer</span><br><span class="line">Find：01030303 00006002 00005001 00000060</span><br><span class="line">Replace：01030303 00006002 00005001 00000080</span><br><span class="line">Comment:1536MB -&gt; 2048MB for HD630 Mobile</span><br></pre></td></tr></table></figure><blockquote><p>HD520_530_540 Mobile：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name：AppleIntelSKLGraphicsFramebuffer</span><br><span class="line">Find：01030303 00002002 00005001 00000060</span><br><span class="line">Replace：01030303 00002002 00005001 00000080</span><br><span class="line">Comment:1536MB -&gt; 2048MB for HD520_530_540 Mobile</span><br></pre></td></tr></table></figure><blockquote><p>HD5500 Mobile：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name：AppleIntelBDWGraphicsFramebuffer </span><br><span class="line">Find: 01030303 00002002 00005001 00000060</span><br><span class="line">Replace: 01030303 00002002 00005001 00000080</span><br><span class="line">Comment:1536MB -&gt; 2048MB for HD5500 Mobile</span><br></pre></td></tr></table></figure><h3 id="开启Trim"><a href="#开启Trim" class="headerlink" title="开启Trim"></a>开启<code>Trim</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.iokit.IOAHCIBlockStorage</span><br><span class="line">Find: 00415050 4C452053 534400</span><br><span class="line">Replcae: 00000000 00000000 000000</span><br><span class="line">Comment: Enable TRIM for SSD</span><br></pre></td></tr></table></figure><h3 id="花屏补丁"><a href="#花屏补丁" class="headerlink" title="花屏补丁"></a>花屏补丁</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.iokit.IOGraphicsFamily</span><br><span class="line">Find: 4188C4EB 11</span><br><span class="line">Replcae: 4188C4EB 31</span><br><span class="line">Comment: Boot graphics glitch, 10.10.2/10.10.3</span><br><span class="line">MatchOS: 10.10.2,10.10.3</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.iokit.IOGraphicsFamily</span><br><span class="line">Find: 01000075 17</span><br><span class="line">Replcae: 010000EB 17</span><br><span class="line">Comment: Boot graphics glitch, 10.10.x/10.11.x (credit lisai9093, cecekpawon)</span><br><span class="line">MatchOS: 10.10.x,10.11.x</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.iokit.IOGraphicsFamily</span><br><span class="line">Find: 01000075 25</span><br><span class="line">Replcae: 010000EB 25</span><br><span class="line">Comment: Boot graphics glitch, 10.12.dp1 (credit denskop)</span><br><span class="line">MatchOS: 10.12.x</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.iokit.IOGraphicsFamily</span><br><span class="line">Find: 01000075 22</span><br><span class="line">Replcae: 010000EB 22</span><br><span class="line">Comment: Boot graphics glitch, 10.13 beta (based on denskop patch)</span><br><span class="line">MatchOS: 10.13.x</span><br></pre></td></tr></table></figure><h3 id="DVMT补丁"><a href="#DVMT补丁" class="headerlink" title="DVMT补丁"></a>DVMT补丁</h3><blockquote><p>Broadwell</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.driver.AppleIntelBDWGraphicsFramebuffer</span><br><span class="line">Find: 39CF763C</span><br><span class="line">Replcae: 39CFEB3C</span><br><span class="line">Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.10.x (based on Austere.J patch)</span><br><span class="line">MatchOS: 10.10.x</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.driver.AppleIntelBDWGraphicsFramebuffer</span><br><span class="line">Find: 4139C476 3E</span><br><span class="line">Replcae: 4139C4EB 3E</span><br><span class="line">Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.11.beta (based on Austere.J patch)</span><br><span class="line">MatchOS: 10.11.x</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.driver.AppleIntelBDWGraphicsFramebuffer</span><br><span class="line">Find: 8945C839 C7764F</span><br><span class="line">Replcae: 8945C839 C7EB4F</span><br><span class="line">Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.12.0 (based on Austere.J patch)</span><br><span class="line">MatchOS: 10.12.x</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.driver.AppleIntelBDWGraphicsFramebuffer</span><br><span class="line">Find: 4C895DB8 7644</span><br><span class="line">Replcae: 4C895DB8 EB44</span><br><span class="line">Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.0/1 (credit PMHeart)</span><br><span class="line">MatchOS: 10.13.0,10.13.1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.driver.AppleIntelBDWGraphicsFramebuffer</span><br><span class="line">Find: 4C8945C0 7644</span><br><span class="line">Replcae: 4C8945C0 EB44</span><br><span class="line">Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.2/3 (credit RehabMan)</span><br><span class="line">MatchOS: 10.13.2,10.13.3</span><br></pre></td></tr></table></figure><blockquote><p>Skylake</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.driver.AppleIntelSKLGraphicsFramebuffer</span><br><span class="line">Find: 4139C476 2A</span><br><span class="line">Replcae: 4139C4EB 2A</span><br><span class="line">Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.11.4 (based on Austere.J patch)</span><br><span class="line">MatchOS: 10.11.x</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.driver.AppleIntelSKLGraphicsFramebuffer</span><br><span class="line">Find: 8945C839 C67651</span><br><span class="line">Replcae: 8945C839 C6EB51</span><br><span class="line">Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.12.0 (based on Austere.J patch)</span><br><span class="line">MatchOS: 10.12.x</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.driver.AppleIntelSKLGraphicsFramebuffer</span><br><span class="line">Find: 4C8955B8 7640</span><br><span class="line">Replcae: 4C8955B8 EB40</span><br><span class="line">Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.0/1 (credit PMHeart)</span><br><span class="line">MatchOS: 10.13.0,10.13.1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.driver.AppleIntelSKLGraphicsFramebuffer</span><br><span class="line">Find: 4C895DB8 7640</span><br><span class="line">Replcae: 4C895DB8 EB40</span><br><span class="line">Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.2/3 (credit PMHeart, , shdkpr2008)</span><br><span class="line">MatchOS: 10.13.2,10.13.3</span><br></pre></td></tr></table></figure><blockquote><p>Kabylake</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.driver.AppleIntelKBLGraphicsFramebuffer</span><br><span class="line">Find: 4C895DC0 7646</span><br><span class="line">Replcae: 4C895DC0 EB46</span><br><span class="line">Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.0/1 (credit PMHeart)</span><br><span class="line">MatchOS: 10.13.0,10.13.1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name: com.apple.driver.AppleIntelKBLGraphicsFramebuffer</span><br><span class="line">Find: 4C896DB8 7646</span><br><span class="line">Replcae: 4C896DB8 EB46</span><br><span class="line">Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.2/3 (credit RehabMan)</span><br><span class="line">MatchOS: 10.13.2,10.13.3</span><br></pre></td></tr></table></figure><h3 id="硬盘橙色"><a href="#硬盘橙色" class="headerlink" title="硬盘橙色"></a>硬盘橙色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name: AppleAHCIPort</span><br><span class="line">Find: 45787465 726E616C</span><br><span class="line">Replcae: 496E7465 726E616C</span><br><span class="line">Comment: Define external drivers as internal to fix yellow drive icons</span><br></pre></td></tr></table></figure><h3 id="让没有ECC内存的机器利用MacPro4-1或者-MacPro5-1机型启动"><a href="#让没有ECC内存的机器利用MacPro4-1或者-MacPro5-1机型启动" class="headerlink" title="让没有ECC内存的机器利用MacPro4,1或者 MacPro5,1机型启动"></a>让没有<code>ECC</code>内存的机器利用<code>MacPro4,1</code>或者 <code>MacPro5,1</code>机型启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name: AppleTyMCEDriver</span><br><span class="line">Find: 720A004D 61635072 6F342C31 004D6163 50726F35 2C310058</span><br><span class="line">Replcae: 720A0000 00000000 00000000 00000000 00000000 00000058</span><br><span class="line">Comment: Allow booting with a MacPro4,1 or MacPro5,1 SMBIOS definition without ECC memory</span><br></pre></td></tr></table></figure><h3 id="万能声卡将Headphones显示替代为Telephones"><a href="#万能声卡将Headphones显示替代为Telephones" class="headerlink" title="万能声卡将Headphones显示替代为Telephones"></a>万能声卡将<code>Headphones</code>显示替代为<code>Telephones</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name: VoodooHDA</span><br><span class="line">Find: 48656164 70686F6E 657300</span><br><span class="line">Replcae: 54656C65 70686F6E 657300</span><br><span class="line">Comment: For VoodooHDA replacing the string Headphones with Telephones</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      黑苹果常见补丁
    
    </summary>
    
      <category term="Hackintosh" scheme="https://blog.iamzhl.top/categories/Hackintosh/"/>
    
    
      <category term="patch" scheme="https://blog.iamzhl.top/tags/patch/"/>
    
      <category term="Hackintosh" scheme="https://blog.iamzhl.top/tags/Hackintosh/"/>
    
      <category term="补丁" scheme="https://blog.iamzhl.top/tags/%E8%A1%A5%E4%B8%81/"/>
    
  </entry>
  
  <entry>
    <title>Common command in macOS</title>
    <link href="https://blog.iamzhl.top/Common-command-in-macOS.html"/>
    <id>https://blog.iamzhl.top/Common-command-in-macOS.html</id>
    <published>2018-03-30T12:32:47.000Z</published>
    <updated>2018-04-09T02:14:58.056Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="Trim"><a href="#Trim" class="headerlink" title="Trim"></a>Trim</h3><blockquote><p>开启<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo trimforce enable</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>关闭<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo trimforce disable</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="查看启用的ig-platform-id"><a href="#查看启用的ig-platform-id" class="headerlink" title="查看启用的ig-platform-id"></a>查看启用的<code>ig-platform-id</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ioreg -l | grep -y platform-id</span><br></pre></td></tr></table></figure><h3 id="笔记本开启插电源出提示音"><a href="#笔记本开启插电源出提示音" class="headerlink" title="笔记本开启插电源出提示音:"></a>笔记本开启插电源出提示音:</h3><blockquote><p>开启:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.PowerChime ChimeOnAllHardware -bool true; open /System/Library/CoreServices/PowerChime.app &amp;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>关闭:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.PowerChime ChimeOnAllHardware -bool false; killall PowerChime</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="去掉apfs-efi最新版本的日志调试显示"><a href="#去掉apfs-efi最新版本的日志调试显示" class="headerlink" title="去掉apfs.efi最新版本的日志调试显示"></a>去掉apfs.efi最新版本的日志调试显示</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/Desktop</span><br><span class="line">&amp; cp /usr/standalone/i386/apfs.efi .</span><br><span class="line">$ perl -i -pe &apos;s|\x00\x74\x07\xb8\xff\xff|\x00\x90\x90\xb8\xff\xff|sg&apos; ./apfs.efi</span><br></pre></td></tr></table></figure><h3 id="提取显示器EDID及设备ID厂商ID"><a href="#提取显示器EDID及设备ID厂商ID" class="headerlink" title="提取显示器EDID及设备ID厂商ID"></a>提取显示器<code>EDID</code>及设备<code>ID</code>厂商<code>ID</code></h3><blockquote><p>EDID<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ioreg -lw0 | grep -i &quot;IODisplayEDID&quot; | sed -e &apos;s/.*&lt;//&apos; -e &apos;s/&gt;//&apos;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>PID<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ioreg -l | grep &quot;DisplayProductID&quot;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>VID<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ioreg -l | grep &quot;DisplayVendorID&quot;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="为macOS-Sierra以上的OS-X开启任何来源"><a href="#为macOS-Sierra以上的OS-X开启任何来源" class="headerlink" title="为macOS Sierra以上的OS X开启任何来源"></a>为<code>macOS Sierra</code>以上的<code>OS X</code>开启任何来源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo spctl --master-disable</span><br></pre></td></tr></table></figure><h3 id="查看加载的非官方内核扩展-–-kext"><a href="#查看加载的非官方内核扩展-–-kext" class="headerlink" title="查看加载的非官方内核扩展 – kext"></a>查看加载的非官方内核扩展 – <code>kext</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kextstat | grep -v &quot;com.apple&quot; | grep -v Energy</span><br></pre></td></tr></table></figure><h3 id="查看显示器硬件信息"><a href="#查看显示器硬件信息" class="headerlink" title="查看显示器硬件信息"></a>查看显示器硬件信息</h3><blockquote><p>EDID<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ioreg -l | grep &quot;IODisplayEDID&quot;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>ProductID<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ioreg -l | grep &quot;DisplayProductID&quot;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>VendorID<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ioreg -l | grep &quot;DisplayVendorID&quot;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h3>]]></content>
    
    <summary type="html">
    
      macOS下一些常用命令
    
    </summary>
    
      <category term="Hackintosh" scheme="https://blog.iamzhl.top/categories/Hackintosh/"/>
    
    
      <category term="command" scheme="https://blog.iamzhl.top/tags/command/"/>
    
      <category term="macOS" scheme="https://blog.iamzhl.top/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>Make a bootable install image to install macOS High Sierra 10.13.4</title>
    <link href="https://blog.iamzhl.top/Make-a-bootable-install-media-image-to-install-macOS-High-Sierra-10-13-4.html"/>
    <id>https://blog.iamzhl.top/Make-a-bootable-install-media-image-to-install-macOS-High-Sierra-10-13-4.html</id>
    <published>2018-03-30T11:52:35.000Z</published>
    <updated>2018-03-30T12:57:44.618Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着新的<code>macOS High Sierra 10.13.4</code>操作系统发布，很多盆友迫不及待的做了一个<code>.dmg</code>格式的压缩镜像以备用，但发现用<code>Apple</code>官方的方法制作出的镜像用<code>CLOVER</code>引导时是看不到安装镜像的，最后，在<a href="https://blog.daliansky.net" target="_blank" rel="noopener">黑果小兵</a>的帮助下，终于找到了解决方法。</p><h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><h3 id="下载app镜像"><a href="#下载app镜像" class="headerlink" title="下载app镜像"></a>下载<code>app</code>镜像</h3><p>首先去<code>AppleStore</code>下载原版的<code>app</code>镜像<a href="https://itunes.apple.com/cn/app/macos-high-sierra/id1246284741?l=en&amp;mt=12" target="_blank" rel="noopener">https://itunes.apple.com/cn/app/macos-high-sierra/id1246284741?l=en&amp;mt=12</a></p><h3 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h3><p>打开磁盘工具</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/Snip20180330_1.png" alt="Snip20180330_1" title="">                </div>                <div class="image-caption">Snip20180330_1</div>            </figure><p>点击顶部状态栏<code>File -&gt; New Image -&gt; Blank Image</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/Snip20180330_11.png" alt="Snip20180330_11" title="">                </div>                <div class="image-caption">Snip20180330_11</div>            </figure><p>如上图写一个好听的名字，大小大于<code>app</code>镜像的大小，我直接大一点，写了<code>6.8GB</code>，选好保存位置，然后点击<code>save</code>。</p><p>打开终端，输入<code>sudo</code>空格，找到下载好的<code>app</code>镜像(一般在应用程序里)，右键显示包内容，依次打开<code>/Contents/Resources</code>，将<code>createinstallmedia</code>拖到终端，输入空格，然后输入<code>--volume</code>，再空格，然后将准备好的安装磁盘，拖动至终端，再空格，接着输入<code>--applicationpath</code>，空格，将<code>app</code>镜像拖放到终端，空格，输入<code>--nointeraction</code>，回车，输入密码，再回车，等待镜像写入完成。</p><p>如图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/Snip20180330_3.png" alt="Snip20180330_3" title="">                </div>                <div class="image-caption">Snip20180330_3</div>            </figure><h3 id="进行镜像修复"><a href="#进行镜像修复" class="headerlink" title="进行镜像修复"></a>进行镜像修复</h3><p>然后下载附件，这个是我从10.13.3的镜像中提取的，13.4缺少这个启动的必要文件。<br>链接:<a href="https://pan.baidu.com/s/14R8rEk7PK9exu0lDvPh7jA" target="_blank" rel="noopener">https://pan.baidu.com/s/14R8rEk7PK9exu0lDvPh7jA</a>  密码:fcwt，将下载的压缩包解压，按住<code>Command Shift .</code>显示隐藏文件，即可看到里面的<code>.IA</code>开头的一个目录和一个文件，将这两个文件拷贝到刚才做的安装盘内。</p><p>拷贝之前</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/Snip20180330_4.png" alt="Snip20180330_4" title="">                </div>                <div class="image-caption">Snip20180330_4</div>            </figure><p>拷贝之后</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/Snip20180330_5.png" alt="Snip20180330_5" title="">                </div>                <div class="image-caption">Snip20180330_5</div>            </figure><p>右键<code>.IABootFilesSystemVersion.plist</code>用<code>plist</code>编辑器打开，例如<code>Xcode</code>、<code>Plist Edit</code></p><p>做以下修改</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/Snip20180330_6.png" alt="Snip20180330_6" title="">                </div>                <div class="image-caption">Snip20180330_6</div>            </figure><p>保存退出</p><p>打开<code>/System/Library/CoreServices</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/Snip20180330_8.png" alt="Snip20180330_8" title="">                </div>                <div class="image-caption">Snip20180330_8</div>            </figure><p>拷贝图中选中项，将其拷贝到<code>/.IABootFiles/</code>目录下，然后打开<code>/System/Library/PrelinkedKernels/</code>，将下图选中的文件也拷贝到<code>/.IABootFiles/</code>目录下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/Snip20180330_9.png" alt="Snip20180330_9" title="">                </div>                <div class="image-caption">Snip20180330_9</div>            </figure><p>最后<code>/.IABootFiles/</code>目录下内容如下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/Snip20180330_10.png" alt="Snip20180330_10" title="">                </div>                <div class="image-caption">Snip20180330_10</div>            </figure><p>这时重启进入<code>CLOVER</code>引导界面就可以看到安装盘了。</p>]]></content>
    
    <summary type="html">
    
      制作可启动的安装镜像来安装macOS High Sierra 10.13.4
    
    </summary>
    
      <category term="Hackintosh" scheme="https://blog.iamzhl.top/categories/Hackintosh/"/>
    
    
      <category term="image" scheme="https://blog.iamzhl.top/tags/image/"/>
    
      <category term="10.13.4" scheme="https://blog.iamzhl.top/tags/10-13-4/"/>
    
      <category term="镜像" scheme="https://blog.iamzhl.top/tags/%E9%95%9C%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>How to patch Framebuffer change VRAM from 1536MB to 2048MB</title>
    <link href="https://blog.iamzhl.top/How-to-patch-Framebuffer-change-VRAM-from-1536MB-to-2048MB.html"/>
    <id>https://blog.iamzhl.top/How-to-patch-Framebuffer-change-VRAM-from-1536MB-to-2048MB.html</id>
    <published>2018-03-29T09:22:57.000Z</published>
    <updated>2018-03-29T11:35:58.215Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>本来不打算发这个帖子的，因为好多人觉得没有什么用，但前几天帮论坛好友阿林解决他<code>hd4600</code>花屏问题时，发现这个方法还是有一定作用的。之前在<code>10.12</code>区有坛友的<code>4600</code>部分区域出现花屏的情况，最后通过修改注入的<code>ig</code>来解决的，大家都知道，<code>4200 4400 4600</code>都是靠<code>FakeID</code>为<code>0x04128086</code>和<code>ig</code>为<code>0x0a260006</code>然后配合<code>FakePCIID</code>和<code>FakePCIID_HD_Graphics</code>两个<code>kext</code>来驱动的，大家也知道，一部分<code>4600</code>也可以用<code>0x04160000</code>而不需要<code>FakeID</code>注入来驱动（相应的不少<code>4400</code>也可以用<code>0x0a160000</code>而不需要<code>FakeID</code>来驱动），两种方法都可以驱动核显，但区别还是有的，最容易发现的就是显存了，第一种方法驱动后都是<code>1536m</code>，第二种则是<code>1024m</code>。而前面提到的<code>4600</code>部分区域花屏的案例则是用第二种方式来解决的，后来经过测试，发现通过对<code>framebuffer</code>进行<code>patch</code>以达到<code>2048m</code>的显存也可以解决这个问题，于是这个方法就被我记在心里了。后来在帮阿林解决了他的花屏问题后，决定还是把相关方法写出来，虽然没什么技术含量，但也能为景友提供一个思路。<br>废话就说到这，下面说方法:</p><h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><h3 id="查看FB以及ig"><a href="#查看FB以及ig" class="headerlink" title="查看FB以及ig"></a>查看<code>FB</code>以及<code>ig</code></h3><p>首先，确定你当前加载的Framebuffer，终端执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kextstat | grep -y AppleIntel</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/163040bhnxihl6zjlv0uiv.png" alt="163040bhnxihl6zjlv0uiv" title="">                </div>                <div class="image-caption">163040bhnxihl6zjlv0uiv</div>            </figure><p>如图，看输出结果中带Framebuffer的就是我们需要的（haswell之前的是带FB的），图中我的就是AppleIntelFramebufferAzul然后执行以下命令查看当前使用的ig</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ioreg -l | grep ig-platform-id</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/163317lkkaa4c8k88h8gec.png" alt="163317lkkaa4c8k88h8gec" title="">                </div>                <div class="image-caption">163317lkkaa4c8k88h8gec</div>            </figure><p>如图我的就是<code>0x0a260006</code>,有朋友不清楚，不是<code>0600260a</code>吗，下次一定要知道，这种<code>id</code>将每两位一组分组，然后从后往前排序，最后由于是十六进制，我们在最前面加上<code>0x</code>来表示，就得出了<code>0x0a260006</code>，这就是我们的<code>id</code>，当然了，后面步骤中用到的还是<code>0600260a</code>。</p><h3 id="下载并安装hexfiend"><a href="#下载并安装hexfiend" class="headerlink" title="下载并安装hexfiend"></a>下载并安装<code>hexfiend</code></h3><p>我直接放链接了<br>链接:<a href="https://pan.baidu.com/s/1EhkVv2eaUE1u_Gmp87arJw" target="_blank" rel="noopener">https://pan.baidu.com/s/1EhkVv2eaUE1u_Gmp87arJw</a>  密码:lm1o</p><h3 id="在FB中查找ig进行处理"><a href="#在FB中查找ig进行处理" class="headerlink" title="在FB中查找ig进行处理"></a>在<code>FB</code>中查找<code>ig</code>进行处理</h3><p>然后，在<code>/System/Library/Extensions</code>下找到和第一步找出的<code>Frambuffer</code>同名<code>kext</code>，以我的为例，就是<code>AppleIntelFramebufferAzul.kext</code>,右键显示包内容，在<code>/Contents/MacOS</code>下将<code>kext</code>的同名文件拷贝到桌面，以我的为例就是<code>AppleIntelFramebufferAzul</code>。</p><p>右键此文件打开方式选我们刚才安装的<code>hexfiend</code>，如图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/165110qfihyri7ahijpxfi.png" alt="165110qfihyri7ahijpxfi" title="">                </div>                <div class="image-caption">165110qfihyri7ahijpxfi</div>            </figure><p>快捷键<code>command + F</code>调出搜索框，输入刚才在第一步找到的<code>ig</code>，回车搜索，找到后面紧跟<code>01030303</code>的那一串字符，如图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/165432j9e9ve5zw091q6mj.png" alt="165432j9e9ve5zw091q6mj" title="">                </div>                <div class="image-caption">165432j9e9ve5zw091q6mj</div>            </figure><p>从搜索的<code>ig</code>后面第一串开始，到<code>00000060</code>结束，将这些字符串拷贝到一个文本文档，并八个数字一组，整理好，然后再复制一行，将第二行最后的<code>60</code>改为<code>80</code>，如图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/165830l1ji7ero3hez1js6.png" alt="165830l1ji7ero3hez1js6" title="">                </div>                <div class="image-caption">165830l1ji7ero3hez1js6</div>            </figure><p>第一串就是我们要做的<code>patch</code>的<code>Find</code>，第二串是<code>Replace</code>，而<code>Name</code>则是第一步中的<code>Framebuffer</code>名字，我这里就是<code>AppleIntelFramebufferAzul</code>，<code>Comment</code>就无所谓了，我写成<code>Change VRAM from 1536MB to 2048MB for HD4400</code>，这时我们的补丁就做好了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/170205ia9i0jppida5jai5.png" alt="170205ia9i0jppida5jai5" title="">                </div>                <div class="image-caption">170205ia9i0jppida5jai5</div>            </figure><p>最后将<code>patch</code>打到<code>config.plist</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/170356xpbiyid3del3byda.png" alt="170356xpbiyid3del3byda" title="">                </div>                <div class="image-caption">170356xpbiyid3del3byda</div>            </figure><p>然后保存重启，就会发现关于本机的显存从原来的<code>1536MB</code>变成了<code>2048MB</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/170543xxdf6b0wdrkkbh80.png" alt="170543xxdf6b0wdrkkbh80" title="">                </div>                <div class="image-caption">170543xxdf6b0wdrkkbh80</div>            </figure><p>如果没效果，可以尝试重建缓存。</p><h2 id="帖子的最后，我将之前做的几个patch贴出来，大家可以尝试使用"><a href="#帖子的最后，我将之前做的几个patch贴出来，大家可以尝试使用" class="headerlink" title="帖子的最后，我将之前做的几个patch贴出来，大家可以尝试使用"></a>帖子的最后，我将之前做的几个<code>patch</code>贴出来，大家可以尝试使用</h2><blockquote><p>HD4200_4400_4600 Mobile</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name：           AppleIntelFramebufferAzul</span><br><span class="line">Find：           01030303 00000002 00003001 00006000 00000060</span><br><span class="line">Replace：        01030303 00000002 00003001 00009000 00000080</span><br><span class="line">Comment：        1536MB -&gt; 2048MB for HD4200_4400_4600 Mobile</span><br></pre></td></tr></table></figure><blockquote><p>HD620 Mobile：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name：           AppleIntelKBLGraphicsFramebuffer</span><br><span class="line">Find：           01030303 00002002 00000000 00000060</span><br><span class="line">Replace：        01030303 00002002 00000000 00000080 </span><br><span class="line">Comment：        1536MB -&gt; 2048MB for HD620 Mobile</span><br></pre></td></tr></table></figure><blockquote><p>HD630 Mobile：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name：           AppleIntelKBLGraphicsFramebuffer</span><br><span class="line">Find：           01030303 00006002 00005001 00000060</span><br><span class="line">Replace：        01030303 00006002 00005001 00000080</span><br><span class="line">Comment：        1536MB -&gt; 2048MB for HD630 Mobile</span><br></pre></td></tr></table></figure><blockquote><p>HD520_530_540 Mobile：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name：           AppleIntelSKLGraphicsFramebuffer</span><br><span class="line">Find：           01030303 00002002 00005001 00000060</span><br><span class="line">Replace：        01030303 00002002 00005001 00000080</span><br><span class="line">Comment：        1536MB -&gt; 2048MB for HD520_530_540 Mobile</span><br></pre></td></tr></table></figure><blockquote><p>HD5500 Mobile：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name：           AppleIntelBDWGraphicsFramebuffer </span><br><span class="line">find：           01030303 00002002 00005001 00000060</span><br><span class="line">Replace：        01030303 00002002 00005001 00000080</span><br><span class="line">Comment：        1536MB -&gt; 2048MB for HD5500 Mobile</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      简单修改FB实现显存增加至2048MB修复某些花屏
    
    </summary>
    
      <category term="Hackintosh" scheme="https://blog.iamzhl.top/categories/Hackintosh/"/>
    
    
      <category term="显存" scheme="https://blog.iamzhl.top/tags/%E6%98%BE%E5%AD%98/"/>
    
      <category term="FB" scheme="https://blog.iamzhl.top/tags/FB/"/>
    
      <category term="花屏" scheme="https://blog.iamzhl.top/tags/%E8%8A%B1%E5%B1%8F/"/>
    
      <category term="Framebuffer" scheme="https://blog.iamzhl.top/tags/Framebuffer/"/>
    
  </entry>
  
  <entry>
    <title>How to change your username on your mac</title>
    <link href="https://blog.iamzhl.top/How-to-change-your-username-on-your-mac.html"/>
    <id>https://blog.iamzhl.top/How-to-change-your-username-on-your-mac.html</id>
    <published>2018-03-15T09:19:00.000Z</published>
    <updated>2018-03-19T15:26:23.936Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="帐户信息修改"><a href="#帐户信息修改" class="headerlink" title="帐户信息修改"></a>帐户信息修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System Preferences &gt; Users &amp; Groups &gt; 右单击当前用户 &gt; Advanced Options</span><br></pre></td></tr></table></figure><p><em>注意：用了一段时间的电脑不建议修改，可能会导致很多软件要重新安装。</em></p><h3 id="主机名修改"><a href="#主机名修改" class="headerlink" title="主机名修改"></a>主机名修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo scutil --set HostName MacBookPro</span><br></pre></td></tr></table></figure><h3 id="计算机名修改"><a href="#计算机名修改" class="headerlink" title="计算机名修改"></a>计算机名修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo scutil --set ComputerName MacBookPro</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      更改 mac 的帐户名、主机名和计算机名
    
    </summary>
    
      <category term="Hackintosh" scheme="https://blog.iamzhl.top/categories/Hackintosh/"/>
    
    
      <category term="账户名" scheme="https://blog.iamzhl.top/tags/%E8%B4%A6%E6%88%B7%E5%90%8D/"/>
    
      <category term="主机名" scheme="https://blog.iamzhl.top/tags/%E4%B8%BB%E6%9C%BA%E5%90%8D/"/>
    
      <category term="计算机名" scheme="https://blog.iamzhl.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%90%8D/"/>
    
      <category term="mac" scheme="https://blog.iamzhl.top/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>How to unzip packages without .DS_store</title>
    <link href="https://blog.iamzhl.top/How-to-unzip-packages-without-DS-store.html"/>
    <id>https://blog.iamzhl.top/How-to-unzip-packages-without-DS-store.html</id>
    <published>2018-03-15T09:11:43.000Z</published>
    <updated>2018-03-19T15:26:23.936Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="Mac下面压缩的时候总会自动生成-DS-store-文件，用户可以自行选择是否需要生成，执行下面命令之后需要重启Mac生效。"><a href="#Mac下面压缩的时候总会自动生成-DS-store-文件，用户可以自行选择是否需要生成，执行下面命令之后需要重启Mac生效。" class="headerlink" title="Mac下面压缩的时候总会自动生成 .DS_store 文件，用户可以自行选择是否需要生成，执行下面命令之后需要重启Mac生效。"></a>Mac下面压缩的时候总会自动生成 .DS_store 文件，用户可以自行选择是否需要生成，执行下面命令之后需要重启Mac生效。</h3><ul><li>禁止 .DS_store生成：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE</span><br></pre></td></tr></table></figure><ul><li>恢复 .DS_store生成：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults delete com.apple.desktopservices DSDontWriteNetworkStores</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      mac 下解压压缩包避免生产.DS_store文件
    
    </summary>
    
      <category term="Hackintosh" scheme="https://blog.iamzhl.top/categories/Hackintosh/"/>
    
    
      <category term=".DS_store" scheme="https://blog.iamzhl.top/tags/DS-store/"/>
    
  </entry>
  
  <entry>
    <title>0-1 backpack</title>
    <link href="https://blog.iamzhl.top/0-1-backpack.html"/>
    <id>https://blog.iamzhl.top/0-1-backpack.html</id>
    <published>2018-01-17T08:51:25.000Z</published>
    <updated>2018-01-17T09:25:12.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 5</span><br><span class="line">#define c 10</span><br><span class="line"></span><br><span class="line">int weight[n]=&#123;2,2,6,5,4&#125;, value[n]=&#123;6,3,5,4,6&#125;;</span><br><span class="line"></span><br><span class="line">int f(int i,int j)&#123;</span><br><span class="line">    int m1,m2;</span><br><span class="line">    if(i==n-1)&#123;</span><br><span class="line">        if(j&gt;=weight[i])</span><br><span class="line">            return value[i];</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    if(j&lt;weight[i])</span><br><span class="line">        return f(i+1,j);</span><br><span class="line">    m1=f(i+1,j);</span><br><span class="line">    m2=f(i+1,j-weight[i])+value[i];</span><br><span class="line">    return m1&gt;m2?m1:m2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    printf(&quot;%d\n&quot;,f(0,c));</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-05.png" alt="2018-01-17-05" title="">                </div>                <div class="image-caption">2018-01-17-05</div>            </figure><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 5</span><br><span class="line">#define c 10</span><br><span class="line"></span><br><span class="line">int weight[n]=&#123;2,2,6,5,4&#125;, value[n]=&#123;6,3,5,4,6&#125;;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    int s[n][c+1];</span><br><span class="line">    int i,j;</span><br><span class="line">    for(j=0;j&lt;=c;j++)&#123;</span><br><span class="line">        if(j&gt;weight[n-1])</span><br><span class="line">            s[n-1][j]=value[n-1];</span><br><span class="line">        else</span><br><span class="line">            s[n-1][j]=0;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=n-2;i&gt;=0;i--)&#123;</span><br><span class="line">        for(j=0;j&lt;=c;j++)&#123;</span><br><span class="line">            if(j&lt;weight[i])</span><br><span class="line">                s[i][j]=s[i+1][j];</span><br><span class="line">            else</span><br><span class="line">                s[i][j]=s[i+1][j]&gt;(s[i+1][j-weight[i]]+value[i])?s[i+1][j]:(s[i+1][j-weight[i]]+value[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%d\n&quot;,s[0][c]);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-07.png" alt="2018-01-17-07" title="">                </div>                <div class="image-caption">2018-01-17-07</div>            </figure><h3 id="回溯"><a href="#回溯" class="headerlink" title="回溯"></a>回溯</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 5</span><br><span class="line">#define c 10</span><br><span class="line"></span><br><span class="line">int weight[n]=&#123;2,2,6,5,4&#125;, value[n]=&#123;6,3,5,4,6&#125;;</span><br><span class="line">int maxvalue, tempvalue, tempweight;</span><br><span class="line"></span><br><span class="line">void traceback(int t)&#123;</span><br><span class="line">    if(t==n)&#123;</span><br><span class="line">        if(tempvalue&gt;maxvalue)</span><br><span class="line">            maxvalue=tempvalue;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if(tempweight+weight[t]&lt;=c)&#123;</span><br><span class="line">        tempweight+=weight[t];</span><br><span class="line">        tempvalue+=value[t];</span><br><span class="line">        traceback(t+1);</span><br><span class="line">        tempweight-=weight[t];</span><br><span class="line">        tempvalue-=value[t];</span><br><span class="line">    &#125;</span><br><span class="line">    traceback(t+1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    traceback(0);</span><br><span class="line">    printf(&quot;%d\n&quot;,maxvalue);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果-2"><a href="#运行结果-2" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-06.png" alt="2018-01-17-06" title="">                </div>                <div class="image-caption">2018-01-17-06</div>            </figure>]]></content>
    
    <summary type="html">
    
      0-1背包问题
    
    </summary>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/categories/algorithm/"/>
    
    
      <category term="0-1背包问题" scheme="https://blog.iamzhl.top/tags/0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/tags/algorithm/"/>
    
      <category term="算法" scheme="https://blog.iamzhl.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Reverse part of array</title>
    <link href="https://blog.iamzhl.top/Reverse-part-of-array.html"/>
    <id>https://blog.iamzhl.top/Reverse-part-of-array.html</id>
    <published>2018-01-17T08:23:37.000Z</published>
    <updated>2018-01-17T08:27:36.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 8</span><br><span class="line"></span><br><span class="line">int a[n]=&#123;1,4,2,6,8,5,7,3&#125;;</span><br><span class="line"></span><br><span class="line">void print()&#123;</span><br><span class="line">    for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">        printf(&quot;%3d&quot;, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    putchar(&apos;\n&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void swap(int *a, int *b)&#123;</span><br><span class="line">    int temp=*a;</span><br><span class="line">    *a=*b;</span><br><span class="line">    *b=temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void swapposition(int a[], int low, int high, int k)&#123;</span><br><span class="line">    int i, j;</span><br><span class="line">    for(i=low,j=k-1;i&lt;j;i++,j--)</span><br><span class="line">        swap(&amp;a[i], &amp;a[j]);</span><br><span class="line">    for(i=k,j=high;i&lt;j;i++,j--)</span><br><span class="line">        swap(&amp;a[i], &amp;a[j]);</span><br><span class="line">    for(i=low,j=high;i&lt;j;i++,j--)</span><br><span class="line">        swap(&amp;a[i], &amp;a[j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    int k;</span><br><span class="line">    print();</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;k);</span><br><span class="line">    swapposition(a, 0, n-1, k);</span><br><span class="line">    print();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-04.png" alt="2018-01-17-04" title="">                </div>                <div class="image-caption">2018-01-17-04</div>            </figure>]]></content>
    
    <summary type="html">
    
      将数组从指定位置逆置，如从4开始逆置{1，4，2，6，8，5，7，3}，则输出{8，5，7，3，1，4，2，6}。
    
    </summary>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/tags/algorithm/"/>
    
      <category term="算法" scheme="https://blog.iamzhl.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="逆置" scheme="https://blog.iamzhl.top/tags/%E9%80%86%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>n queen</title>
    <link href="https://blog.iamzhl.top/n-queen.html"/>
    <id>https://blog.iamzhl.top/n-queen.html</id>
    <published>2018-01-17T08:04:05.000Z</published>
    <updated>2018-01-17T08:05:58.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 8</span><br><span class="line"></span><br><span class="line">int a[n];</span><br><span class="line">int count=0;</span><br><span class="line"></span><br><span class="line">int judge(int t)&#123;</span><br><span class="line">    if(t==n)</span><br><span class="line">        return 0;</span><br><span class="line">    for(int i=0;i&lt;t;i++)&#123;</span><br><span class="line">        for(int j=i+1;j&lt;=t;j++)&#123;</span><br><span class="line">            if(a[i]==a[j])</span><br><span class="line">                return 0;</span><br><span class="line">            if(abs(i-j)==abs(a[i]-a[j]))</span><br><span class="line">                return 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void traceback(int t)&#123;</span><br><span class="line">    int i;</span><br><span class="line">    if(t==n)&#123;</span><br><span class="line">        count++;</span><br><span class="line">        for(i=0;i&lt;n;i++)</span><br><span class="line">            printf(&quot;%3d&quot;, a[i]);</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=0;i&lt;n;i++)&#123;</span><br><span class="line">        a[t]=i;</span><br><span class="line">        if(judge(t))</span><br><span class="line">            traceback(t+1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    traceback(0);</span><br><span class="line">    printf(&quot;%d\n&quot;, count);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-03.png" alt="2018-01-17-03" title="">                </div>                <div class="image-caption">2018-01-17-03</div>            </figure>]]></content>
    
    <summary type="html">
    
      n皇后问题
    
    </summary>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/tags/algorithm/"/>
    
      <category term="算法" scheme="https://blog.iamzhl.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="n皇后问题" scheme="https://blog.iamzhl.top/tags/n%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>RecurMatrix</title>
    <link href="https://blog.iamzhl.top/RecurMatrix.html"/>
    <id>https://blog.iamzhl.top/RecurMatrix.html</id>
    <published>2018-01-17T07:54:02.000Z</published>
    <updated>2018-01-17T07:55:50.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 6</span><br><span class="line"></span><br><span class="line">int a[n+1]=&#123;30,35,15,5,10,20,25&#125;;</span><br><span class="line">int b[n+1][n+1];</span><br><span class="line"></span><br><span class="line">int RecurMatrix(int i, int j)&#123;</span><br><span class="line">    if(i==j)</span><br><span class="line">        return 0;</span><br><span class="line">    int minvalue=RecurMatrix(i, i)+RecurMatrix(i+1, j)+a[i-1]*a[i]*a[j];</span><br><span class="line">    b[i][j]=i;</span><br><span class="line">    for(int k=i+1;k&lt;j;k++)&#123;</span><br><span class="line">        int tempvalue=RecurMatrix(i, k)+RecurMatrix(k+1, j)+a[i-1]*a[k]*a[j];</span><br><span class="line">        if(tempvalue&lt;minvalue)&#123;</span><br><span class="line">            minvalue=tempvalue;</span><br><span class="line">            b[i][j]=k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return minvalue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void traceback(int i, int j)&#123;</span><br><span class="line">    if(i==j)</span><br><span class="line">        return;</span><br><span class="line">    traceback(i, b[i][j]);</span><br><span class="line">    traceback(b[i][j]+1, j);</span><br><span class="line">    printf(&quot;A[%d-%d]*A[%d-%d]\n&quot;, i, b[i][j], b[i][j]+1, j);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    printf(&quot;%d\n&quot;, RecurMatrix(1, n));</span><br><span class="line">    traceback(1, n);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-02.png" alt="2018-01-17-02" title="">                </div>                <div class="image-caption">2018-01-17-02</div>            </figure>]]></content>
    
    <summary type="html">
    
      矩阵连乘问题
    
    </summary>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/tags/algorithm/"/>
    
      <category term="算法" scheme="https://blog.iamzhl.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="矩阵连乘问题" scheme="https://blog.iamzhl.top/tags/%E7%9F%A9%E9%98%B5%E8%BF%9E%E4%B9%98%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>BinarySearch</title>
    <link href="https://blog.iamzhl.top/BinarySearch.html"/>
    <id>https://blog.iamzhl.top/BinarySearch.html</id>
    <published>2018-01-17T07:29:36.000Z</published>
    <updated>2018-01-17T07:32:27.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.c</span><br><span class="line">//  algorithm</span><br><span class="line">//</span><br><span class="line">//  Created by athlonreg on 17/01/2018.</span><br><span class="line">//  Copyright © 2018 athlonreg. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define n 5</span><br><span class="line"></span><br><span class="line">int arr[n]=&#123;1,2,3,4,5&#125;;</span><br><span class="line"></span><br><span class="line">int BinarySearch(int a[], int low, int high, int k)&#123;</span><br><span class="line">    while(low&lt;high)&#123;</span><br><span class="line">        int mid=(low+high)/2;</span><br><span class="line">        if(a[mid]==k)</span><br><span class="line">            return mid;</span><br><span class="line">        else if(a[mid]&gt;k)</span><br><span class="line">            return BinarySearch(a, low, mid-1, k);</span><br><span class="line">        else</span><br><span class="line">            return BinarySearch(a, mid+1, high, k);</span><br><span class="line">    &#125;</span><br><span class="line">    return -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    int x=4;</span><br><span class="line">    printf(&quot;%d\n&quot;, BinarySearch(arr, 0, n-1, x));</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-17-01.png" alt="2018-01-17-01" title="">                </div>                <div class="image-caption">2018-01-17-01</div>            </figure>]]></content>
    
    <summary type="html">
    
      二分查找
    
    </summary>
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="https://blog.iamzhl.top/tags/algorithm/"/>
    
      <category term="算法" scheme="https://blog.iamzhl.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="二分查找" scheme="https://blog.iamzhl.top/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    
  </entry>
  
  <entry>
    <title>Ldu crawl based on nodejs</title>
    <link href="https://blog.iamzhl.top/ldu-crawl-based-on-nodejs.html"/>
    <id>https://blog.iamzhl.top/ldu-crawl-based-on-nodejs.html</id>
    <published>2018-01-10T11:40:02.000Z</published>
    <updated>2018-01-10T14:36:24.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>基于Nodejs实现的网络爬虫，爬取鲁东大学官网指定数量的新闻保存至本地。</p><h3 id="项目下载"><a href="#项目下载" class="headerlink" title="项目下载"></a>项目下载</h3><p>终端执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/athlonreg/ldu-crawl-based-on-nodejs.git</span><br></pre></td></tr></table></figure><p><code>Windows</code>用户请去项目首页下载，如图：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15155892546769.jpg" alt="15155892546769" title="">                </div>                <div class="image-caption">15155892546769</div>            </figure><h3 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h3><p>项目目录共有<code>data</code>、<code>image</code>、<code>node_modules</code>三个文件夹，其中<code>node_modules</code>为项目用到的<code>node</code>模块包，<code>data</code>和<code>image</code>分别用以存储抓取到的所有新闻，<code>data</code>用以保存文本内容，<code>image</code>用以保存所有文章内的图片，以文章标题命名。如下图所示：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15155845693616.jpg" alt="15155845693616" title="">                </div>                <div class="image-caption">15155845693616</div>            </figure><p><code>index.html</code>是程序的<code>web</code>主页面；<br><code>server.js</code>用以启动服务器；<br><code>spider.js</code>是爬虫主程序；<br><code>test.sh</code>用以启动爬虫开始抓取工作。</p><h3 id="程序运行方法"><a href="#程序运行方法" class="headerlink" title="程序运行方法"></a>程序运行方法</h3><h4 id="For-Windows"><a href="#For-Windows" class="headerlink" title="For Windows"></a>For Windows</h4><blockquote><p>两种方式，首先将项目放到桌面：</p></blockquote><p>1、在根目录利用<code>cmd</code>或者<code>Git Bash</code>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node spider.js</span><br></pre></td></tr></table></figure><p>爬虫程序即开始执行。</p><p>2、双击<code>test.sh</code>或者利用<code>Git Bash</code>执行(若执行闪退请在<code>Git Bash</code>执行)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x test.sh</span><br><span class="line">$ ./test.sh</span><br></pre></td></tr></table></figure><p>即可自动完成所有工作，抓取工作完成后，命令行自动退出。</p><h4 id="For-macOS"><a href="#For-macOS" class="headerlink" title="For macOS"></a>For macOS</h4><blockquote><p>两种方式</p></blockquote><p>1、假设项目放于桌面，打开终端执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/Desktop/ldu_crawl/</span><br><span class="line">$ chmod +x test.sh</span><br><span class="line">$ ./test.sh</span><br></pre></td></tr></table></figure><p>即可自动完成所有工作，抓取工作完成后，命令行自动退出。</p><p>2、假设项目放于桌面，打开终端执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/Desktop/ldu_crawl/</span><br><span class="line">$ node spider.js</span><br></pre></td></tr></table></figure><h3 id="预设界面查看"><a href="#预设界面查看" class="headerlink" title="预设界面查看"></a>预设界面查看</h3><h4 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h4><p>终端执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node server.js</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2018-01-10.png" alt="2018-01-10" title="">                </div>                <div class="image-caption">2018-01-10</div>            </figure><h4 id="打开浏览器"><a href="#打开浏览器" class="headerlink" title="打开浏览器"></a>打开浏览器</h4><p>网址输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8080/</span><br></pre></td></tr></table></figure><p>即可打开项目首页。如图所示：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15155856514536.jpg" alt="15155856514536" title="">                </div>                <div class="image-caption">15155856514536</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/15155856857593.jpg" alt="15155856857593" title="">                </div>                <div class="image-caption">15155856857593</div>            </figure><p>点击了解使用方法即可查看详细使用说明。</p>]]></content>
    
    <summary type="html">
    
      基于Nodejs实现的网络爬虫
    
    </summary>
    
      <category term="Study" scheme="https://blog.iamzhl.top/categories/Study/"/>
    
    
      <category term="Nodejs" scheme="https://blog.iamzhl.top/tags/Nodejs/"/>
    
      <category term="crawl" scheme="https://blog.iamzhl.top/tags/crawl/"/>
    
      <category term="爬虫" scheme="https://blog.iamzhl.top/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Install and config mysql on mac</title>
    <link href="https://blog.iamzhl.top/Install-and-config-mysql-on-mac.html"/>
    <id>https://blog.iamzhl.top/Install-and-config-mysql-on-mac.html</id>
    <published>2017-12-20T09:01:00.000Z</published>
    <updated>2017-12-20T09:31:46.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="安装HomeBrew"><a href="#安装HomeBrew" class="headerlink" title="安装HomeBrew"></a>安装<code>HomeBrew</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><p>等待安装完成即可</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装<code>MySQL</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install mysql</span><br></pre></td></tr></table></figure><p>等待安装完成，如下图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-20-1.png" alt="2017-12-20-1" title="">                </div>                <div class="image-caption">2017-12-20-1</div>            </figure><h3 id="检查安装是否正常"><a href="#检查安装是否正常" class="headerlink" title="检查安装是否正常"></a>检查安装是否正常</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql --version</span><br></pre></td></tr></table></figure><p>如果出现版本号，则正常，如下图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-20-2.png" alt="2017-12-20-2" title="">                </div>                <div class="image-caption">2017-12-20-2</div>            </figure><p>若提示<code>command not found</code>，则依次执行下面两条命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/bin/</span><br><span class="line">$ sudo ln -fs /usr/local/mysql/bin/mysql mysql</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="配置root账号的密码，默认无密码"><a href="#配置root账号的密码，默认无密码" class="headerlink" title="配置root账号的密码，默认无密码"></a>配置root账号的密码，默认无密码</h3><h4 id="开启安全模式启动mysql"><a href="#开启安全模式启动mysql" class="headerlink" title="开启安全模式启动mysql"></a>开启安全模式启动<code>mysql</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables</span><br></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><h4 id="首先登录mysql"><a href="#首先登录mysql" class="headerlink" title="首先登录mysql"></a>首先登录<code>mysql</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root</span><br></pre></td></tr></table></figure><h4 id="配置root账号的密码"><a href="#配置root账号的密码" class="headerlink" title="配置root账号的密码"></a>配置<code>root</code>账号的密码</h4><blockquote><p>命令中的<code>****</code>为要修改的密码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE mysql.user SET authentication_string=PASSWORD(&apos;****&apos;) WHERE User=&apos;root&apos;;</span><br></pre></td></tr></table></figure><h4 id="刷新权限"><a href="#刷新权限" class="headerlink" title="刷新权限"></a>刷新权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h4 id="退出mysql"><a href="#退出mysql" class="headerlink" title="退出mysql"></a>退出<code>mysql</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\q</span><br></pre></td></tr></table></figure><h2 id="验证密码"><a href="#验证密码" class="headerlink" title="验证密码"></a>验证密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p</span><br></pre></td></tr></table></figure><p>会提示输入密码，输入刚才设定的密码后如果能够进入<code>mysql</code>则说明配置成功。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/2017-12-20-3.png" alt="2017-12-20-3" title="">                </div>                <div class="image-caption">2017-12-20-3</div>            </figure><h2 id="终端开启和关闭mysql服务"><a href="#终端开启和关闭mysql服务" class="headerlink" title="终端开启和关闭mysql服务"></a>终端开启和关闭<code>mysql</code>服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /usr/local/mysql/support-files/mysql.server start</span><br><span class="line">$ sudo /usr/local/mysql/support-files/mysql.server stop</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      在 Mac 安装和配置 MySQL
    
    </summary>
    
      <category term="Study" scheme="https://blog.iamzhl.top/categories/Study/"/>
    
    
      <category term="Mac" scheme="https://blog.iamzhl.top/tags/Mac/"/>
    
      <category term="MySQL" scheme="https://blog.iamzhl.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Clover ACPI hotpatch</title>
    <link href="https://blog.iamzhl.top/Clover-ACPI-hotpatch.html"/>
    <id>https://blog.iamzhl.top/Clover-ACPI-hotpatch.html</id>
    <published>2017-12-17T07:30:15.000Z</published>
    <updated>2018-03-29T09:57:01.880Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Preface–序言"><a href="#Preface–序言" class="headerlink" title="Preface–序言"></a>Preface–序言</h2><p>This blog is created by me to introduce how to using Clover to hotpatch ACPI，and provide an Chinese version。</p><blockquote><p>我写这篇博客是为了介绍如何使用<code>Clover</code>对<code>ACPI</code>使用<code>hotpatch</code>，并翻译原贴提供中文参考帖。</p></blockquote><h2 id="Brief-description-for-hotpatch–hotpatch概要"><a href="#Brief-description-for-hotpatch–hotpatch概要" class="headerlink" title="Brief description for hotpatch–hotpatch概要"></a>Brief description for hotpatch–<code>hotpatch</code>概要</h2><p>In RehabMan’s GitHub homepage, a repository named <code>OS-X-Clover-Laptop-Config</code> Contains some Clover <code>config.plist</code> for common Intel graphics and hotpatch for common configurations.More information in <a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config" target="_blank" rel="noopener">here</a>.</p><blockquote><p><code>RehabMan</code>的<code>GitHub</code>有一个仓库–<code>OS-X-Clover-Laptop-Config</code>,里面包含了一些适用于常见的英特尔核芯显卡的<code>config.plist</code>,还有<code>hotpatch</code>。点击<a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config" target="_blank" rel="noopener">这里</a>了解更多。</p></blockquote><p>There are some handy SSDTs for use with Clover ACPI hotpatch (in conjunction with hotpatch/config.plist) If you understand ACPI, you may find the SSDTs and hotpatch/config.plist quite useful.</p><blockquote><p>这儿有许多针对使用Clover ACPI hotpatch(连同使用hotpatch/config.plist)的SSDT。如果你理解了ACPI，你会发现这些<code>SSDT</code>和<code>hotpatch/config.plist</code>相当重要。</p></blockquote><p>Read here for the hotpatch guide: <a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/</a></p><blockquote><p>这里是<code>hotpatch</code>的‘入门引导贴。<br><a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/</a></p></blockquote><h2 id="A-brief-description-of-each-hotpatch-SSDT-is-provided-below–下面是每一个-hotpatch-SSDT-的概要"><a href="#A-brief-description-of-each-hotpatch-SSDT-is-provided-below–下面是每一个-hotpatch-SSDT-的概要" class="headerlink" title="A brief description of each hotpatch SSDT is provided below–下面是每一个 hotpatch SSDT 的概要"></a>A brief description of each hotpatch SSDT is provided below–下面是每一个 <code>hotpatch SSDT</code> 的概要</h2><p><code>SSDT-Config.dsl</code>: This file provides configuration data for other SSDTs. Read the comments within the file for more information.</p><blockquote><p><code>SSDT-Config.dsl</code>:这个文件为其他<code>SSDT</code>提供参数。请阅读文件中的注释以获得更多信息。</p></blockquote><p><code>SSDT-Debug.dsl</code>: This SSDT is for use with ACPIDebug.kext. Instead of patching your DSDT to add the RMDT device, you can use this SSDT and refer to the methods with External. See ACPIDebug.kext documentation for more information regarding the RMDT methods.</p><blockquote><p>这个<code>SSDT</code>和<code>ACPIDebug.kext</code>一起使用。不需要对你的<code>DSDT</code>打补丁增加<code>RMDT</code>设备，你可以使用这个<code>SSDT</code>通过<code>External</code>导入这个方法。关于<code>RMDT</code>方法，要了解更多请参阅<code>ACPIDebug.kext</code>文档。</p></blockquote><p><code>SSDT-XOSI.dsl</code>: This SSDT provides the XOSI method, which is a replacement for the system provided _OSI object when the _OSI-&gt;XOSI patch is being used. This is actually one of the examples in the Clover ACPI hotpatch guide, linked above.</p><blockquote><p>这个<code>SSDT</code>提供了<code>XOSI</code>方法，当打了<code>_OSI-&gt;XOSI</code>补丁时，<code>XOSI</code>方法会替换系统提供的<code>_OSI</code>对象。实际上，这就是<code>Clover ACPI hotpatch</code>入门参考帖的一个例子，链接在下面。</p></blockquote><p>SSDT-IGPU.dsl This SSDT injects Intel GPU properties depending on the configuration data in SSDT-Config and the device-id that is discovered to be present on the system. It assumes the IGPU is named IGPU (typical is GFX0, requring GFX0-&gt;IGPU rename). Configured with RMCF.TYPE, RMCF.HIGH, RMCF.IGPI, and SSDT-SkylakeSpoof.aml.</p><blockquote><p>这个<code>SSDT</code>根据<code>SSDT-config</code>的配置数据和系统中发现的设备id注入了Intel GPU–核芯显卡属性。它假定<code>IGPU</code>被命名成<code>IGPU</code>(通常是<code>GFX0</code>，需要重命名<code>GFX0-&gt;IGPU</code>)。通过<code>RMCF.TYPE, RMCF.HIGH, RMCF.IGPI, and SSDT-SkylakeSpoof.aml</code>来配置。</p></blockquote><p><code>SSDT-SkylakeSpoof.aml</code>: This SSDT is an optional SSDT that can be paired with SSDT-IGPU.dsl. When present, SSDT-IGPU uses the data within as an override for various KabyLake graphics devices which spoofs those devices as Skylake. Prior to 10.12.6, Skylake spoofing is the only option for KabyLake graphics. And even with 10.12.6 (or later, including 10.13.x), it still may be useful to spoof KabyLake graphics as Skyake. Keep in mind complete Skylake spoofing requires FakePCIID.kext + FakePCIID_Intel_HD_Graphics.kext.</p><blockquote><p>这个<code>SSDT</code>是一个可选的<code>SSDT</code>,它可以配合<code>SSDT-IGPU.dsl</code>使用。<code>SSDT-IGPU</code>使用这些数据对<code>KabyLake</code>图形设备的数据进行覆盖重写，把<code>KabyLake</code>仿冒成<code>Skylake</code>。10.12.6之前,<code>KabyLake</code>只有仿冒成’SkyLake’驱动核显，即使在10.12.6之后(或者更新的版本，包括10.13.x)，将<code>KabyLake</code>仿冒成’SkyLake’仍然是很有用的，需要注意的是完整的仿冒需要<code>FakePCIID.kext + FakePCIID_Intel_HD_Graphics.kext</code>。</p></blockquote><p><code>SSDT-IMEI.dsl</code>: This SSDT injects fake device-id as required for IMEI when using mixed HD3000/7-series or HD4000/6-series. Be sure to read the comments within carefully, as customization is required if your system already has an IMEI identity in ACPI.</p><blockquote><p>当使用混合的hd3000/7系或hd4000/6系时，该SSDT为IMEI注入了仿冒的设备id。一定要仔细阅读注释，因为如果您的系统已经在ACPI中有了IMEI标识，那么就需要进行定制。</p></blockquote><p><code>SSDT-PNLF.dsl</code>: This SSDT injects a PNLF device that works with IntelBacklight.kext or AppleBacklight.kext. Configured with RMCF.BKLT, RMCF.LMAX, RMCF.FBTP. See guide for more information: <a href="https://www.tonymacx86.com/threads/guide-laptop-backlight-control-using-applebacklightinjector-kext.218222/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-laptop-backlight-control-using-applebacklightinjector-kext.218222/</a></p><blockquote><p>这个SSDT注入了一个<code>PNLF</code>设备，它可以与<code>IntelBacklight.kext</code> 或者<code>AppleBacklight.kext</code>一起工作。通过<code>RMCF.BKLT</code> ,<code>RMCF.LMAX</code> <code>RMCF.FBTP</code>。更多信息参见指南:</p></blockquote><p><code>SSDT-LPC.dsl</code>:This SSDT injects properties to force AppleLPC to load for various unsupported LPC device-ids. It assumes the LPC device is named LPCB.</p><blockquote><p>这个SSDT:注入属性以强制<code>AppleLPC</code>加载各种不支持的<code>LPC</code>设备id。需要<code>LPC</code>设备被命名为<code>LPCB</code>。</p></blockquote><p><code>SSDT-SATA.dsl</code>: This SSDT injects properties (fake device-id, compatible) to enable the SATA controller with certain unsupported SATA controllers. It assumes the SATA device is named SATA (typical is SAT0, thus requiring SAT0-&gt;SATA rename).</p><blockquote><p>这个SSDT注入了一些属性(仿冒的设备id，兼容的)，以使某些不受支持的<code>SATA</code>控制器启用<code>SATA</code>控制器。它假设<code>SATA</code>设备被命名为<code>SATA</code>(常见的是<code>SAT0</code>，因此需要<code>SAT0-SATA</code>重命名)。</p></blockquote><p><code>SSDT-Disable_DGPU.dsl</code>: This SSDT provides an _INI method that will call _OFF for a couple of common paths for a discrete GPU in a switched/dual GPU scenario. This SSDT can work to disable the Nvidia or AMD graphics device, if the path matches (or is modified to math) and your _OFF method code path has no EC related code. Refer to the hotpatch guide for a complete example.</p><blockquote><p>这个SSDT提供了一个<code>INI</code>方法，它将在可切换的/双<code>GPU</code>中为独立显卡提供一些通用的路径来调用<code>_OFF</code>。如果路径匹配(或被自定义来匹配)而且你的<code>_OFF</code>方法代码路径则没有与<code>EC</code>相关的代码，那么这个<code>SSDT</code>可以禁用<code>Nvidia</code>或<code>AMD</code>图形设备。有关一个完整的示例，请参阅热补丁指南。</p></blockquote><p><code>SSDT-SMBUS.dsl</code>:This SSDT injects the missing DVL0 device. Mostly used with Sandy Bridge and Ivy Bridge systems.</p><blockquote><p>这个SSDT注入了丢失的<code>DVL0</code>设备。主要用于<code>Sandy Bridge</code>和<code>Ivy Bridge</code>平台。</p></blockquote><p><code>SSDT-GPRW.dsl</code> and <code>SSDT-UPRW.dsl</code>: These SSDTs is used in conjuction with the GPRW-&gt;XPRW or UPRW-&gt;XPRW patch. Used together this SSDT can fix “instant-wake” by disabling “wake on USB”. It overrides the _PRW package return for GPE indexes 0x0d or 0x6d. Potential companion patches are provided in hotpatch/config.plist</p><blockquote><p>这些SSDT与<code>GPRW-XPRW</code>或<code>UPRW-XPRW</code>补丁一起使用。通过使用这些<code>SSDT</code>，可以通过禁用<code>wake on USB</code>来修复<code>instant wake</code>。它重写了<code>GPE</code>的索引<code>0x0d</code>或<code>0x6d</code>的<code>PRW</code>包返回值。在<code>hotpatch</code>/<code>config.plist</code>中提供了潜在的伙伴补丁。</p></blockquote><p><code>SSDT-LANC_PRW.dsl</code>: Also part of fixing “instant wake”, but this is for _PRW on the Ethernet device. Potential companion patches are provided in hotpatch/config.plist.</p><blockquote><p>这也是修复<code>instant wake</code>的一部分，但这是在以太网设备上进行修复的。在<code>hotpatch</code>/<code>config.plist</code>中提供了潜在的伙伴补丁。</p></blockquote><p><code>SSDT-PTSWAK.dsl</code>: This SSDT provides overrides for both _PTS and _WAK. When combined with the appropriate companion patches from hotpatch/config.plist, these methods can provide various fixes. The actions are controlled by RMCF.DPTS, RMCF.SHUT, RMCF.XPEE, RMCF.SSTF. Refer to SSDT-Config.dsl for more information on those options.</p><blockquote><p>这个SSDT提供了对<code>_PTS</code>和<code>_WAK</code>的重写。当与来自<code>hotpatch</code>/<code>config.plist</code>的适当的补丁相结合使用时，这些方法可以提供一系列的修复。这些行为是由<code>RMCF.DPTS</code>, <code>RMCF.SHUT</code>,<code>RMCF.XPEE</code>,<code>RMCF.XPEE</code> ,<code>RMCF.SSTF</code>.更多关于这些选项的信息参阅<code>SSDT-Config</code>。</p></blockquote><p><code>SSDT-Disable_EHCI.dsl</code>: This SSDT can disable both EHCI controllers. It is assumed both have been renamed to EH01/EH02 (typically original names are EHC1/EHC2).</p><blockquote><p>这个SSDT可以禁用<code>EHCI</code>控制器。要求这两种情况都被重新命名为<code>EH01/EH02</code>(通常原来的名字是<code>EHC1/EHC2</code>).</p></blockquote><p><code>SSDT-Disable_EH01.dsl</code>, <code>SSDT-Disable_EH02.dsl</code>: Each of these SSDTs is just SSDT-Disable_EHCI.dsl broken down to only disable EH01 or only EH02. Use as appropriate depending on which EHCI controllers are active/present in your ACPI set.</p><blockquote><p>这些SSDT每一个都是<code>SSDT-Disable_EHCI.dsl</code>分解的，仅仅用以禁用<code>EH01</code>或<code>EH02</code>。取决于在你的<code>ACPI</code>集合中使用哪个<code>EHCI</code>控制器是合适的。</p></blockquote><p><code>SSDT-XWAK.dsl</code>, <code>SSDT-XSEL.dsl</code>, <code>SSDT-ESEL.dsl</code>: Each of these SSDTs provides an empty XWAK, XSEL, and ESEL methods (respectively). Use with the appropriate companion patch from hotpatch/config.plist. Typically, these methods are disabled (by having no code in them) to disable certain actions native ACPI may be doing on wake from sleep or during startup that cause problems with the xHCI/EHCI configuration.</p><blockquote><p>这些SSDT分别提供了一个空的<code>XWAK</code>、<code>XSEL</code>和<code>ESEL</code>方法(独立地)。配合<code>hotpatch/config.plist</code>中适当的补丁一起使用。通常情况下，这些方法被禁用(因为在它们中没有代码)，以禁用本地<code>ACPI</code>可能在唤醒睡眠或在启动时导致<code>xHCI/EHCI</code>i配置问题的某些动作。</p></blockquote><p><code>SSDT-PluginType1.dsl</code>: This SSDT injects “plugin-type”=1 on CPU0. It assumes ACPI Processor objects are in Scope(_PR). It can be used to enable native CPU power management on Haswell and later CPUs. See guide for more information: <a href="https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/</a>.</p><blockquote><p>这个SSDT在<code>CPU0</code>注入<code>“plugin-type”=1</code>。它要求<code>ACPI</code>处理器对象在<code>Scope(_PR)</code>范围内。它可以用于在<code>Haswell</code>和更新的<code>CPU</code>启用原生电源管理。更多信息见指南：<a href="https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/</a>.</p></blockquote><p><code>SSDT-HDEF.dsl</code> and <code>SSDT-HDAU.dsl</code>: Injects layout-id, hda-gfx, and PinConfiguration properties on HDEF and HDAU in order to implement audio with patched AppleHDA.kext Configured with: RMCF.AUDL.</p><blockquote><p>在<code>HDEF</code>和<code>HDAU</code>上注入<code>layout-id</code>、<code>hda-gfx</code>和<code>PinConfiguration</code>属性，以通过对<code>AppleHDA</code>的<code>patch</code>实现音频。通过<code>RMCF.AUDL</code>配置.</p></blockquote><p><code>SSDT-EH01.dsl</code>,<code>SSDT-EH02.dsl</code>, and <code>SSDT-XHC.dsl</code>:These SSDTs inject USB power properties and control over FakePCIID_XHCIMux (dending on SSDT-Disable_EH*.dsl).</p><blockquote><p>这些SSDT注入<code>USB</code>电源属性并通过<code>FakePCIID_XHCIMux</code>控制(取决于<code>SSDT-Disable_EH*.dsl</code>)。</p></blockquote><p><code>SSDT-ALS0.dsl</code>: Injects a fake ALS device (ambient light sensor). This SSDT is used to fix problems with restoring brightness upon reboot.</p><blockquote><p>注入仿冒<code>ALS</code>设备(环境光传感器)。这个<code>SSDT</code>用于修复重新启动时还原亮度的问题。</p></blockquote><h2 id="Introduction-说明文档"><a href="#Introduction-说明文档" class="headerlink" title="Introduction-说明文档"></a>Introduction-说明文档</h2><p>Patching ACPI is always necessary to enable (near) full functionality when installing OS X on non-Apple hardware.</p><blockquote><p>在非苹果硬件上安装OS X时，修补<code>ACPI</code>以启用(接近)完整的功能总是必要的。</p></blockquote><p>There is a complete guide here: <a href="http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/" target="_blank" rel="noopener">http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/</a></p><blockquote><p>这里有一个完整的指南: <a href="http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/" target="_blank" rel="noopener">http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/</a></p></blockquote><p>That guide uses what is known as “static patching”. In order to inject patched ACPI files, we extract native ACPI, disassemble them, make changes, then recompile and place the files in ACPI/patched, so that Clover injects the patched ACPI instead of native ACPI. With the techniques detailed in this guide, the changes can be made directly to the ACPI binaries provided by BIOS, skipping the extract, disassembly, and recompilation steps.</p><blockquote><p>该指南使用了所谓的“静态补丁”。为了注入打了补丁的<code>ACPI</code>文件，我们提取本地的ACPI，将它们反编译，进行修改，然后重新编译，并将文件放在<code>ACPI/patched</code>中，这样Clover就注入了打过补丁的<code>ACPI</code>，而不是原生的<code>ACPI</code>。通过本指南中详细介绍的技术，可以直接对<code>BIOS</code>提供的<code>ACPI</code>二进制文件进行更改，跳过提取、分解和重新编译步骤。</p></blockquote><p>You should have a solid understanding of static ACPI patching before attempting to hotpatch. You should also have an understanding of the ACPI spec, binary patching, programming, and ACPI concepts. Don’t expect step-by-step and spoon feeding in this thread.</p><blockquote><p>在尝试<code>hotpatch</code>之前，你应该对静态的<code>ACPI</code>补丁有一定的了解。你还应该了解<code>ACPI</code>规范、二进制补丁、语法和<code>ACPI</code>概念。不要指望在这个过程中循序渐进地学习。</p></blockquote><h3 id="Clover-mechanisms-Clover机制"><a href="#Clover-mechanisms-Clover机制" class="headerlink" title="Clover mechanisms-Clover机制"></a>Clover mechanisms-<code>Clover</code>机制</h3><p>Clover provides a few methods for accomplishing ACPI hotpatch:</p><blockquote><p>Clover提供了一些新的方法来实现<code>ACPI hotpatch</code>.</p></blockquote><ul><li>config.plist/ACPI/DSDT/Fixes</li><li>config.plist/ACPI/DSDT/Patches</li><li>ability to inject additional SSDTs</li></ul><p><code>DSDT/Fixes</code> provide fixed function ACPI patching. Each “Fix” can do a particular kind of patching that can be used instead of typical patching you might do with MaciASL and static patching. For example, “IRQ Fix” can be accomplished with “FixHPET_0010” “FixIPIC_0040” “FIX_RTC_20000” and “FIX_TMR_40000”. As an other example, “Fix _WAK Arg0 v2” can be accomplished with “FIX_WAK_200000”. You can read the Clover wiki for more information on each patch. Most of the time, there are not many DSDT “Fixes” needed for basic functionality. DSDT “Fixes” are useful for implementing patches that are difficult or impossible to implement with ACPI/DSDT/Patches or additional SSDTs.</p><blockquote><p><code>DSDT/Fixes</code>提供了具有修复功能的<code>ACPI</code>补丁。每一个<code>Fix</code>都可以使用一种特殊的补丁，从而不需要你使用<code>MaciASL</code>和静态补丁。例如，<code>IRQ Fix</code>可以用<code>FixHPET_0010</code>、<code>FixIPIC_0040</code>、<code>FIX_RTC_20000</code>和<code>FIX_TMR_40000</code>来完成。再举一个例子，<code>Fix _WAK Arg0 v2</code>可以用<code>FIX_WAK_200000</code>来完成。对于每个补丁阅读<code>Clover wiki</code>以获得更多信息。大多数情况下，基本功能所需的DSDT<code>Fix</code>并不多。对于用<code>ACPI/DSDT/Patches</code>或附加的<code>SSDT</code>很难实现甚至不可能实现的补丁,利用DSDT<code>Fixes</code>实现非常有用。</p></blockquote><p>DSDT/Patches allows for binary search and replace by Clover. Clover loads the native ACPI files, applies the patches specified in ACPI/Patches using binary search/replace, then injects the patched ACPI. You need to have an understanding of the binary AML format. It is fully documented in the ACPI spec.</p><blockquote><p><code>DSDT/Patches</code>允许通过<code>Clover</code>对二进制进行查找并替换。<code>Clover</code>加载本地的<code>ACPI</code>文件，在<code>ACPI/Patches</code>中使用二进制查找替换以应用指定的补丁，然后注入打过补丁的<code>ACPI</code>。您需要了解二进制<code>AML</code>格式。它在<code>ACPI</code>规范中有完整的文档记录。</p></blockquote><p>ACPI namespace is built by merging the DSDT and SSDTs at load time. By placing additional SSDTs into ACPI/patched, we can essentially add code to this ACPI set. Since many OS X patches involve adding properties to ioreg with a _DSM method, it is often adequate to simply add an SSDT which contains the additional _DSM method instead of patching the native ACPI files. A perfect example you’re already familiar with is the SSDT.aml that is generated by Pike’s ssdtPRgen.sh.</p><blockquote><p>ACPI命名空间在加载时通过合并<code>DSDT</code>和<code>SSDT</code>构建。通过将额外的<code>SSDT</code>放到<code>ACPI/patched</code>,我们可以添加代码到<code>ACPI</code>集。因为许多<code>OS X</code>补丁涉及<code>_DSM</code>方法添加属性到<code>ioreg</code> ,通常是适当的<code>SSDT</code>包含额外的一个<code>_DSM</code>方法而不是对本地<code>ACPI</code>文件打补丁。你已经熟悉的一个很好的例子是<code>Pike</code>的<code>ssdtprgensh.sh</code>脚本生成的<code>SSDT.aml</code>。</p></blockquote><p>In some cases, more than one mechanism must be used to accomplish a single goal. For example, you might use binary patching to disable or rename components in the native ACPI set, and then replace it with additional SSDTs.</p><blockquote><p>在某些情况下，必须使用不止一个机制来完成某一个目标。例如，你可能使用二进制补丁来禁用或重命名本地<code>ACPI</code>集合中的组件，然后用额外的<code>SSDT</code>替换它。</p></blockquote><h3 id="Renaming-ACPI-objects-重命名ACPI对象"><a href="#Renaming-ACPI-objects-重命名ACPI对象" class="headerlink" title="Renaming ACPI objects-重命名ACPI对象"></a>Renaming ACPI objects-重命名<code>ACPI</code>对象</h3><p>Since OS X can depend on specific ACPI object names used by Macs, a common patch is to rename an object in the native ACPI set. For example, most PC laptops use GFX0 for the integrated Intel GPU object (Intel HD Graphics). In OS X, power management for Intel graphics is not enabled unless this device is named IGPU. Using static patching, we apply “Rename IGPU to GFX0” in order to rename this object. The patch must be applied to the DSDT and all SSDTs that reference it.</p><blockquote><p>由于<code>OS X</code>可以依赖于<code>Mac</code>所使用的特定的<code>ACPI</code>对象名称，一个常见的补丁是在本地的ACPI集合中重命名一个对象，例如，大多数<code>PC</code>笔记本使用<code>GFX0</code>作为集成的<code>Intel GPU</code>对象(<code>Intel HD</code>显卡)。在<code>OS X</code>中，除非这个设备被命名为<code>IGPU</code>，否则英特尔图形的电源管理是不能启用的。使用静态补丁，我们应用<code>Rename IGPU to GFX0</code>来重命名这个对象。这个补丁必须应用到<code>DSDT</code>和所有有引用<code>GFX0</code>的<code>SSDT</code>上。</p></blockquote><p>With hotpatch, we can rename GFX0 to IGPU using a simple Clover patch in ACPI/DSDT/Patches. Such patches apply to DSDT and all native SSDTs (DSDT/Patches do not apply to SSDTs that are added via ACPI/patched). The patch for the rename would be:</p><blockquote><p>使用<code>hotpatch</code>，我们可以在<code>ACPI/DSDT/Patches</code>使用一个简单的四叶草补丁将<code>GFX0</code>重命名为<code>IGPU</code>。这些补丁适用于<code>DSDT</code>和所有本地的<code>SSDTs</code>(<code>(DSDT/Patches</code>不能被应用到通过<code>ACPI/patched</code>添加的<code>SSDT</code>)。重命名的补丁是:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comment: Rename GFX0 to IGPU</span><br><span class="line">Find: &lt;4746 5830&gt;</span><br><span class="line">Replace: &lt;4947 5055&gt;</span><br></pre></td></tr></table></figure><p>The hex values in Find and Replaces are the ASCII codes for GFX0 and IGPU, respectively.</p><blockquote><p>查找和替换的十六进制值分别是<code>GFX0</code>和<code>IGPU</code>的<code>ASCII</code>码,分别是：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ echo -n GFX0|xxd</span><br><span class="line">0000000: 4746 5830                                GFX0</span><br><span class="line">$ echo -n IGPU|xxd</span><br><span class="line">0000000: 4947 5055                                IGPU</span><br></pre></td></tr></table></figure><p>There are number of common renames, and most are in the config.plist that are part of my Clover/hoptpatch project:</p><p><a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch" target="_blank" rel="noopener">https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch</a></p><blockquote><p>有许多通用的重命名，而且很多都在<code>config.plist</code>里，这个<code>config.plist</code>是我的<code>Clover/hotpatch</code>项目的一部分:<a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch" target="_blank" rel="noopener">https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch</a></p></blockquote><p>In fact, the hotpatch SSDTs that are part of the same project depend on the renames being implemented.</p><blockquote><p>事实上，这些<code>hotpach</code>的<code>SSDT</code>也是上面那个项目的一部分，并且它们要求这些重命名必须被实现。</p></blockquote><p>Common renames:</p><blockquote><p>通用的重命名：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GFX0 -&gt; IGPU</span><br><span class="line">SAT0 -&gt; SATA</span><br><span class="line">EHC1 -&gt; EH01</span><br><span class="line">EHC2 -&gt; EH02</span><br><span class="line">XHCI -&gt; XHC</span><br><span class="line">HECI -&gt; IMEI</span><br><span class="line">MEI -&gt; IMEI</span><br><span class="line">LPC -&gt; LPCB</span><br><span class="line">HDAS -&gt; HDEF</span><br><span class="line">AZAL -&gt; HDEF</span><br></pre></td></tr></table></figure><p>Note: All ACPI identifiers are 4 characters. Shorter names are padded with underscore. So, for example, XHC is represented in the AML binary as XHC_, EC would be EC__, EC0 would be EC_, MEI would be MEI_, etc.</p><blockquote><p>注意：所有的<code>ACPI</code>标识符都是4个字符。较短的名字用下划线填充。例如，<code>XHC</code>在<code>AML</code>二进制文件中被表示为<code>XHC_</code>，<code>EC</code>是<code>EC__</code>，<code>EC0</code>是<code>EC0_</code>，<code>MEI</code>是<code>MEI_</code>，等等。</p></blockquote><h3 id="Removing-methods-移除方法"><a href="#Removing-methods-移除方法" class="headerlink" title="Removing methods-移除方法"></a>Removing methods-移除方法</h3><p>It is very difficult to remove ACPI objects, (methods, names, devices, etc) using Clover binary patches. Commonly, we must add _DSM methods to inject properties that describe various hardware properties. But added _DSM methods can conflict with existing _DSM methods that may already be in the native ACPI files. With static patching, “Remove _DSM methods” would be used.</p><blockquote><p>使用<code>Clover</code>二进制补丁来移除<code>ACPI</code>对象(方法、名称、设备等等)是非常困难的。通常，我们必须添加<code>_DSM</code>方法来注入各种描述硬件属性的属性。但是，添加<code>_DSM</code>方法可能与本地<code>ACPI</code>文件现有的<code>_DSM</code>方法冲突。这时，就会用到静态补丁<code>Remove _DSM methods</code>。</p></blockquote><p>Since it is difficult to remove the methods, but we don’t want the native methods to conflict with new _DSM methods that are added, the fix is to rename the native methods to something else.</p><blockquote><p>由于很难删除这些方法，但是我们又不希望本地方法与添加的新<code>_DSM</code>方法相冲突，所以就将本地方法重命名为其他名字来修复这个问题。</p></blockquote><p>So… again, we use a simple rename patch:</p><blockquote><p>那么…同样地，我们使用一个简单的重命名补丁:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comment: Rename _DSM to XDSM</span><br><span class="line">Find: &lt;5f44534d&gt;</span><br><span class="line">Replace: &lt;5844534d&gt;</span><br></pre></td></tr></table></figure><p>Sometimes, you might rename an object to effectively disable it so it does not cause problems. For example, my Intel DH67GD DSDT defines an APSS object. If this object is left in the DSDT it interferes with power management (causes panic). I use a rename from APSS -&gt; APXX. Because AppleIntelCPUPowerManagement is looking for APSS, it does not cause a problem once renamed to APXX.</p><blockquote><p>有时，你可能会重命名一个对象，以便有效地禁用它，这样它就不会造成问题。例如，我的<code>Intel DH67GD</code>的 <code>DSDT</code>定义了<code>APSS</code>对象。如果这个对象留在<code>DSDT</code>中，它会干扰电源管理(引起<code>KP</code>)。我使用<code>APSS-&gt;APXX</code>的重命名。因为<code>AppleIntelCPUPowerManagement</code>会查找<code>APSS</code>,只要改名为<code>APXX</code>就不会引起问题。</p></blockquote><h3 id="Redirect-and-Replace-重定向和替换"><a href="#Redirect-and-Replace-重定向和替换" class="headerlink" title="Redirect and Replace-重定向和替换"></a>Redirect and Replace-重定向和替换</h3><p>In some cases, we would like to replace code to change the behavior. For this, we can rename the object and provide an alternate implementation in an SSDT.</p><blockquote><p>在某些情况下，我们希望替换代码来改变某些动作。为此，我们可以重命名这个对象，并在<code>SSDT</code>中提供一个用来替代的对象以达到目的。</p></blockquote><p>A common fix is spoofing the ACPI code in DSDT and SSDTs such that it behaves as if a certain version of Windows is the ACPI host. When static patching, we might use “OS Check Fix (Windows 8)”. When applied, it changes code from:</p><blockquote><p>一个常见的修复是在<code>DSDT</code>和<code>SSDT</code>中仿冒<code>ACPI</code>代码，使其表现得就像是<code>ACPI</code>主机的某个版本的<code>Windows</code>一样。当利用静态补丁时，我们可能会使用<code>OS Check Fix (Windows 8)</code>。当应用这个补丁时，它会将代码从:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If (_OSI(&quot;Windows 2012&quot;))</span><br></pre></td></tr></table></figure><p>To:</p><blockquote><p>改为：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If (LOr(_OSI(&quot;Darwin&quot;),_OSI(&quot;Windows 2012&quot;))</span><br></pre></td></tr></table></figure><p>Since the _OSI implementation in OS X only responds to “Darwin” the code is changed so that this specific _OSI check also accomodates “Darwin”.</p><blockquote><p>由于<code>OS X</code>中<code>_OSI</code>方法的实现只对被修改了代码的<code>Darwin</code>作出响应，所以这个特定的<code>_OSI check</code>补丁也能响应<code>Darwin</code>。</p></blockquote><p>With hotpatching, the opposite approach is taken. Instead of changing the code using _OSI, we change the code so it calls a different method that emulates the _OSI implementation that would be in the Windows ACPI host.</p><blockquote><p>而热补丁则采用相反的方法，我们不使用<code>_OSI</code>修改代码，而是改变代码让它调用一种不同的方法来模拟在<code>Windows ACPI</code>主机上的<code>_OSI</code>实现。</p></blockquote><p>This technique relies on two of the techniques… a patch to change all calls from _OSI to XOSI… and an implementation of XOSI that emulates what Windows would do for a certain Windows version.</p><blockquote><p>这项技术依赖于两种技术，一个补丁来改变从<code>_OSI</code>到<code>XOSI</code>的所有调用。另一个是<code>XOSI</code>的实现，即模拟<code>Windows</code>对某个<code>Windows</code>版本的操作。</p></blockquote><p>First, changing the code to call XOSI instead of _OSI:</p><blockquote><p>首先，改变代码来调用<code>XOSI</code>而不是<code>_OSI</code>:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comment: Change _OSI to XOSI</span><br><span class="line">Find: &lt;5f4f 5349&gt;</span><br><span class="line">Replace: &lt;584f 5349&gt;</span><br></pre></td></tr></table></figure><p>The hex codes above should be no mystery (they are ASCII for _OSI and XOSI, respectively).</p><blockquote><p>上面的十六进制代码没有什么神秘的(它们分别是<code>_OSI</code>和<code>XOSI</code>的<code>ASCII</code>码)。</p></blockquote><p>Now the code mentioned above, after patching by Clover, will read:</p><blockquote><p>现在，上面提到的代码，在通过<code>Clover</code>打了补丁之后，将会读到:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If (XOSI(&quot;Windows 2012&quot;))</span><br></pre></td></tr></table></figure><p>Now we need an SSDT that implements XOSI. You will find such an implementation in the repository (SSDT-XOSI.dsl).</p><blockquote><p>现在我们需要一个实现<code>XOSI</code>的<code>SSDT</code>。你可以我的<code>GitHub</code>仓库中找到这样的实现(SSDT-XOSI.dsl).</p></blockquote><p>Note that without the SSDT that implements the XOSI method, the (patched) calls to XOSI would cause an ACPI abort (ACPI abort causes execution of the ACPI method to be terminated immediately with an error). Don’t use the _OSI-&gt;XOSI patch without the XOSI method.</p><blockquote><p>注意，如果没有实现<code>XOSI</code>方法的<code>SSDT</code>，这个补丁对<code>XOSI</code>的调用将导致<code>ACPI</code>的加载被终止(<code>ACPI</code>中止导致<code>ACPI</code>方法的执行被错误立即终止)。如果没有<code>XOSI</code>方法不要使用<code>_OSI</code>-&gt;<code>XOSI</code>补丁。</p></blockquote><h3 id="Rename-and-Replace-重命名和替换"><a href="#Rename-and-Replace-重命名和替换" class="headerlink" title="Rename and Replace-重命名和替换"></a>Rename and Replace-重命名和替换</h3><p>A second pattern, similar to “Redirect and Replace” is “Rename and Replace”. In this case, instead of changing all the call sites, we change the method definition such that the method is named something different than it was originally, but leave the original method name at the call sites. This allows the method that is the target of the calls to be replaced.</p><p>For example, it is very common for USB devices to cause “instant wake”. As a work around, wake on USB can be disabled. Most laptops don’t have a BIOS option for it, so instead the _PRW methods that control this feature are patched.</p><p>For example, the native _SB.PCI0.EHC1._PRW method might read:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake</span><br><span class="line">&#123;</span><br><span class="line">Return (GPRW (0x6D, 0x03))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In order to patch it so USB devices on EHCI#1 cannot cause wake, it would be changed:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake</span><br><span class="line">&#123;</span><br><span class="line">Return (GPRW (0x6D, 0))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Usually, there are several such call sites to GPRW that need to be changed (also, keep in mind not all ACPI sets use the specific name GPRW). Instead of trying to patch all the call sites as above, we can instead patch the method definition of GPRW instead:</p><p>With the original code:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Method (GPRW, 2, NotSerialized)</span><br><span class="line">&#123;</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>If we change it to:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Method (XPRW, 2, NotSerialized)</span><br><span class="line">&#123;</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Since you don’t want to change any call sites, the patch must be constructed such that it affects only the method itself and not the call sites. According to ACPI spec, a method definition starts with bytecode 14, is followed by the method size, the method name, argument count/flags. You can use the “-l” option in iasl to generate a mixed listing of your ACPI file. For example, the Lenovo u430 GPRW method mixed listing:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4323:          Method (GPRW, 2, NotSerialized)</span><br><span class="line">00003F95:  14 45 08 47 50 52 57 02     &quot;.E.GPRW.&quot;</span><br><span class="line">4324:          &#123;</span><br><span class="line">4325:              Store (Arg0, Index (PRWP, Zero))</span><br><span class="line">00003F9D:  70 68 ..................    &quot;ph&quot;</span><br><span class="line">00003F9F:  88 50 52 57 50 00 00 ...    &quot;.PRWP..&quot;</span><br></pre></td></tr></table></figure><p>We could do a find replace using the method header bytes:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;14 45 08 47 50 52 57 02&gt;</span><br><span class="line">Replace: &lt;14 45 08 58 50 52 57 02&gt;</span><br></pre></td></tr></table></figure><p>But what happens if the method differs slightly between different versions of BIOS or models that are similar, but not exactly the same? In that case, the byte following the 14 will change due to the change in the method length.</p><p>My thought is that the beginning of the method body is less likely to be different than the total length of the method, so it helps to add a few extra bytes from the body of the method to the find/replace specification:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;47 50 52 57 02 70 68&gt;</span><br><span class="line">Replace: &lt;58 50 52 57 02 70 68&gt;</span><br></pre></td></tr></table></figure><p>The number of follow-on bytes that you use depends on how many you need to make the find/replace affect only the method definition. You can verify by looking at the native AML binary in a hex editor such as Hex Fiend (it is a nice hex editor and is also open source).</p><p>Note: Although you could search just for the method name + arg count/flags, it is possible that the same pattern will find a call site to the method which you don’t want to change. In the case of the u430 that wasn’t the case, so I was able to find/replace with just the method name+flags.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;47505257 02&gt;</span><br><span class="line">Replace: &lt;58505257 02&gt;</span><br></pre></td></tr></table></figure><p>In the case of the ProBook UPRW, it was necessary to use the follow-on bytes that are part of the method body:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;55505257 0a7012&gt;</span><br><span class="line">Replace: &lt;58505257 0a7012&gt;</span><br></pre></td></tr></table></figure><p>Now any code that calls GPRW (or UPRW in the ProBook example) will not call the implementation in XPRW because the name doesn’t match. The original XPRW is now unreachable code. Which means the GPRW implementation can be changed for our purpose:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Method(GPRW, 2)</span><br><span class="line">&#123;</span><br><span class="line">If (0x6d == Arg0) &#123; Return(Package() &#123; 0x6d, 0, &#125;) &#125;</span><br><span class="line">    External(\XPRW, MethodObj)</span><br><span class="line">    Return(XPRW(Arg0, Arg1))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Explaining the code: For any call to GPRW with the first argument set to 0x6d (the GPE we are trying to disable for wake), instead of returning what the original GPRW would, we return a package with 0x6d and 0 (which disables wake). And for other GPE values, the code simply calls the original GPRW method now named XPRW.</p><p>Another simple case is patching EC query methods to fix the brightness keys. A simple rename of the _Qxx methods involved to XQxx, and a new definition of the method with the original name is all that is needed.</p><p>For example, in the HP Envy Haswell repo:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// _Q13 called on brightness/mirror display key</span><br><span class="line">Method (_Q13, 0, Serialized)  // _Qxx: EC Query</span><br><span class="line">&#123;</span><br><span class="line">External(\HKNO, FieldUnitObj)</span><br><span class="line">Store(HKNO, Local0)</span><br><span class="line">If (LEqual(Local0,7))</span><br><span class="line">&#123;</span><br><span class="line">// Brightness Down</span><br><span class="line">Notify(\_SB.PCI0.LPCB.PS2K, 0x0405)</span><br><span class="line">&#125;</span><br><span class="line">If (LEqual(Local0,8))</span><br><span class="line">&#123;</span><br><span class="line">// Brightness Up</span><br><span class="line">Notify(\_SB.PCI0.LPCB.PS2K, 0x0406)</span><br><span class="line">&#125;</span><br><span class="line">If (LEqual(Local0,4))</span><br><span class="line">&#123;</span><br><span class="line">// Mirror toggle</span><br><span class="line">Notify(\_SB.PCI0.LPCB.PS2K, 0x046e)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>And the associated patch:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comment: change Method(_Q13,0,S) to XQ13</span><br><span class="line">Find: &lt;5f513133 08&gt;</span><br><span class="line">Replace: &lt;58513133 08&gt;</span><br></pre></td></tr></table></figure><p>This same “Rename and Replace” mechanism can be used in cases that are much more complex than this. For example, it is typically used to patch battery methods, which need to be patched to avoid access to multibyte EC fields.</p><h4 id="Tips-for-complex-Rename-and-Replace"><a href="#Tips-for-complex-Rename-and-Replace" class="headerlink" title="Tips for complex Rename and Replace"></a>Tips for complex Rename and Replace</h4><p>As you probably already know, patching for battery status (multibyte EC fields) can be very complex and can involve a lot of code changes to many methods.</p><p>This section will detail some of the techniques and procedures used for battery patching.</p><p>It is advisable to patch for battery without using hotpatch first. After you get it working, then attempt hotpatch. Also, the difference between the code not patched for battery and the code patched for battery is very helpful. You can use a tool like ‘diffmerge’ to compare each. This is especially true if there is already a static battery patch for your laptop in my laptop repository.</p><p>General procedure:</p><ul><li>start with native ACPI</li><li>patch for battery status using static patching (verify it works)</li><li>use diffmerge to compare the unpatched code with patched code</li><li>for each method that is different, implement the “Rename and Replace” pattern</li><li>for the EC fields, create another EC OperationRegion (use a name that is different from the original) and Field definition as a sort of “overlay” which contains only the EC fields you need to patch</li><li>to create the EC overlay, you can use the patched Field/OperationRegion in the patched DSDT, then eliminate unpatched fields</li><li>use External to allow the replacement methods in the SSDT to access the fields defined elsewhere in the ACPI set (usually DSDT)</li><li>let the compiler point out where you need to use External</li><li>watch out for symbols with duplicate names in different scopes</li></ul><p>An example is provided in post #2 of this thread.</p><h3 id="Code-value-patching"><a href="#Code-value-patching" class="headerlink" title="Code value patching"></a>Code value patching</h3><p>Consider the case of “Fix Mutex with non-zero SyncLevel”. This patch finds all Mutex objects and replaces the SyncLevel with 0. We use this patch since OS X does not support Mutex debugging correctly and aborts on any Acquire with a Mutex that has a non-zero SyncLevel.</p><p>As an example, the u430 has Mutexes delcared as such:</p><pre><code>Mutex (MSMI, 0x07)</code></pre><p>To make it compatible with OS X it must be changed:</p><pre><code>Mutex (MSMI, 0)</code></pre><p>The ACPI spec defines how a Mutex object is encoded in the AML, but it can be helpful to look at a mixed disassembly of a small ACPI file:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock (&quot;&quot;, &quot;DSDT&quot;, 2, &quot;test&quot;, &quot;test&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">    Mutex(ABCD, 7)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The iasl compiler can create a mixed listing file with the “-l” option.</p><p>If we compile the above file with: iasl -l test.dsl, test.lst contains:</p><pre><code>       1:  DefinitionBlock (&quot;&quot;, &quot;DSDT&quot;, 2, &quot;test&quot;, &quot;test&quot;, 0)00000000:  44 53 44 54 2B 00 00 00     &quot;DSDT+...&quot;00000008:  02 36 74 65 73 74 00 00     &quot;.6test..&quot;00000010:  74 65 73 74 00 00 00 00     &quot;test....&quot;00000018:  00 00 00 00 49 4E 54 4C     &quot;....INTL&quot;00000020:  10 04 16 20 ............    &quot;... &quot;       2:  {       3:          Mutex(ABCD, 7)00000024:  5B 01 41 42 43 44 07 ...    &quot;[.ABCD.&quot;       4:  }   </code></pre><p>As you can see, the <code>Mutex(ABCD, 7)</code>, is encoded as <code>&lt;5B 01 41 42 43 44 07&gt;</code></p><p>It is now very easy to construct a patch for it:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comment: Change Mutex(ABCD,7) to Mutex(ABCD,0)</span><br><span class="line">Find: &lt;5B 01 41 42 43 44 07&gt;</span><br><span class="line">Replace: &lt;5B 01 41 42 43 44 00&gt;</span><br></pre></td></tr></table></figure><h3 id="Clover-ACPI-configuration"><a href="#Clover-ACPI-configuration" class="headerlink" title="Clover ACPI configuration"></a>Clover ACPI configuration</h3><p>With static patching, DropOem=true is used and patched DSDT and SSDTs are added to ACPI/patched. With hotpatch, instead use DropOem=false, and only add-on SSDTs are placed in ACPI/patched.</p><p>It is important to note that config.plist/ACPI/patches are applied only to native SSDTs, and not the SSDTs in ACPI/patched. This means that if you are renaming objects using config.plist, the add-on SSDTs must refer to the new names, not the old names. Unlike SSDTs in ACPI/patched, binary patches in ACPI/Patches <em>do apply</em> to DSDT.aml that might be in ACPI/patched. Keep this in mind if you’re using a combination of static and hotpatching.</p><p>Also, with static patching, SortedOrder is used to specify the order of SSDTs in ACPI/patched. With hotpatch it is not strictly necessary as it is possible to construct the code in each SSDT such that the code is not order dependent. Especially if you place all add-on code in a single SSDT such as many of my laptop repo examples. Unless your add-on SSDTs are order dependent, you do not have to name each one in SortedOrder.</p><p>It is also not necessary to choose “numbered names” for each SSDT. Instead you can use meaningful names, such as “SSDT-USB.aml”, SSDT-XOSI.aml”, etc. Using numbers instead of meaningul names will just confuse you. Don’t do it.</p><h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><p>You can use patchmatic to look at your complete ACPI set as injected by Clover after patching. By runnning ‘patchmatic -extract’, patchmatic will write all injected DSDT.aml and SSDT<em>.aml in the order they were injected by Clover. You can disassemble them with ‘iasl -da -dl </em>.aml’. If iasl shows errors with the disassembly (for example duplicate symbols), it is likley OS X is also rejecting the conflicting SSDTs.</p><p>If you’re a novice with this technique, it is a good idea to implement one patch at a time, and slowly build it up to a full set of working patches + SSDTs. Trying to do all at once can make it difficult to locate your mistake.</p><h2 id="Battery-Status-Hotpatch"><a href="#Battery-Status-Hotpatch" class="headerlink" title="Battery Status Hotpatch"></a>Battery Status Hotpatch</h2><p>This second post is dedicated to patching battery status with Clover hotpatch. To demonstrate the process, we will work through an example DSDT. The example files used are from the guide for disabling discrete graphics, an “Asus UX303LN”.</p><p><a href="https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/</a></p><p>You should download the ACPI/origin files that are attached to that guide, so you can follow along.</p><p>As mentioned in post #1, the general procedures are as follows:</p><ul><li>start with native ACPI</li><li>patch for battery status using static patching (verify it works)</li><li>use diffmerge to compare the unpatched code with patched code</li><li>for each method that is different, implement the “Rename and Replace” pattern</li><li>for the EC fields, create another EC OperationRegion (use a name that is different from the original) and Field definition as a sort of “overlay” which contains only the EC fields you need to patch</li><li>to create the EC overlay, you can use the patched Field/OperationRegion in the patched DSDT, then eliminate unpatched fields</li><li>use External to allow the replacement methods in the SSDT to access the fields defined elsewhere in the ACPI set (usually DSDT)</li><li>let the compiler point out where you need to use External</li><li>watch out for symbols with duplicate names in different scopes</li></ul><h3 id="Using-diffmerge-to-find-patched-vs-native-differences"><a href="#Using-diffmerge-to-find-patched-vs-native-differences" class="headerlink" title="Using diffmerge to find patched vs. native differences"></a>Using diffmerge to find patched vs. native differences</h3><p>Start by disassembling the origin files: iasl -da -dl *.aml<br>(you should be familiar with this part as it is part of normal ACPI patching)</p><p>Next apply the battery patch only using MaciASL to DSDT.dsl. In this case, we apply the “ASUS N55SL/VivoBook”. There is no need to fix any errors, as we are interested only in the differences created by applying the battery patch. Save the patched file as DSDT_patched.dsl.</p><p>Now you can run diffmerge to see the differences between DSDT.dsl and DSDT_patched.dsl. I usually just do this from Terminal:</p><p><code>$ diffmerge DSDT.dsl DSDT_patched.dsl</code></p><p>The initial diffmerge window will look something like this:<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/batthot_diffmerge_initial.png" alt="batthot_diffmerge_initial" title="">                </div>                <div class="image-caption">batthot_diffmerge_initial</div>            </figure></p><p>From there, we can examine the parts that have changes by clicking on the markers in the left column.</p><p>In the examples, the groups of changes you find:</p><ul><li>group 1: is the changes to the EC fields (multibyte to single byte)</li><li>group 2: addition of RDBA, WRBA, RDBB, WRBB methods</li><li>group 3: patched FBST, _BIX, B1FA methods</li><li>group 4: patched SMBR, SMBW, ECSB methods</li><li>group 5: patched TACH method</li><li>final group: addition of B1B2 method</li></ul><h3 id="Constructing-the-initial-SSDT"><a href="#Constructing-the-initial-SSDT" class="headerlink" title="Constructing the initial SSDT"></a>Constructing the initial SSDT</h3><p>Start with an empty SSDT in MaciASL:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Next, add all methods that were added by the patch. In the example, this includes RDBA, WRBA, RDBB, WRBB and B1B2 methods. You can copy them directly from the DSDT_patched.dsl.</p><p>You want to be certain each method is placed in the same scope. For example, here is the “group 2” methods added:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    Scope (_SB.PCI0.LPCB.EC0)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }}</code></pre><p>And with B1B2 added:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }    // added methods (group 2)    Scope (_SB.PCI0.LPCB.EC0)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }}</code></pre><p>Don’t worry that the code does not compile at the moment. It is not expected at this point, due to the EC fields (and other identifiers) that are not defined in this file. They will need to be definined or referenced via External (eventually).</p><p>Now let’s add the patched methods. Just like the methods that were added methods, the patched methods are just copied from the DSDT_patched.dsl:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    // patched methods    Scope (_SB.PCI0)    {        Scope (BAT0)        {            Method (FBST, 4, NotSerialized)            {                And (Arg1, 0xFFFF, Local1)                Store (Zero, Local0)                If (^^LPCB.EC0.ACAP ())                {                    Store (One, Local0)                }                If (Local0)                {                    If (CHGS (Zero)){    Store (0x02, Local0)}Else{    Store (Zero, Local0)}                }                Else                {                    Store (One, Local0)                }                If (BLLO)                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (And (^^LPCB.EC0.EB0S, 0x08))                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (LGreaterEqual (Local1, 0x8000))                {                    Subtract (0xFFFF, Local1, Local1)                }                Store (Arg2, Local2)                If (LEqual (PUNT, Zero))                {                    Multiply (Local1, ^^LPCB.EC0.B0DV, Local1)                    Multiply (Local2, 0x0A, Local2)                }                And (Local0, 0x02, Local3)                If (LNot (Local3))                {                    Subtract (LFCC, Local2, Local3)                    Divide (LFCC, 0xC8, Local4, Local5)                    If (LLess (Local3, Local5))                    {                        Store (LFCC, Local2)                    }                }                Else                {                    Divide (LFCC, 0xC8, Local4, Local5)                    Subtract (LFCC, Local5, Local4)                    If (LGreater (Local2, Local4))                    {                        Store (Local4, Local2)                    }                }                If (LNot (^^LPCB.EC0.ACAP ()))                {                    Divide (Local2, MBLF, Local3, Local4)                    If (LLess (Local1, Local4))                    {                        Store (Local4, Local1)                    }                }                Store (Local0, Index (PBST, Zero))                Store (Local1, Index (PBST, One))                Store (Local2, Index (PBST, 0x02))                Store (Arg3, Index (PBST, 0x03))            }            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended            {                If (LNot (^^LPCB.EC0.BATP (Zero)))                {                    Return (NBIX)                }                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))                {                    Return (NBIX)                }                _BIF ()                Store (DerefOf (Index (PBIF, Zero)), Index (BIXT, One))                Store (DerefOf (Index (PBIF, One)), Index (BIXT, 0x02))                Store (DerefOf (Index (PBIF, 0x02)), Index (BIXT, 0x03))                Store (DerefOf (Index (PBIF, 0x03)), Index (BIXT, 0x04))                Store (DerefOf (Index (PBIF, 0x04)), Index (BIXT, 0x05))                Store (DerefOf (Index (PBIF, 0x05)), Index (BIXT, 0x06))                Store (DerefOf (Index (PBIF, 0x06)), Index (BIXT, 0x07))                Store (DerefOf (Index (PBIF, 0x07)), Index (BIXT, 0x0E))                Store (DerefOf (Index (PBIF, 0x08)), Index (BIXT, 0x0F))                Store (DerefOf (Index (PBIF, 0x09)), Index (BIXT, 0x10))                Store (DerefOf (Index (PBIF, 0x0A)), Index (BIXT, 0x11))                Store (DerefOf (Index (PBIF, 0x0B)), Index (BIXT, 0x12))                Store (DerefOf (Index (PBIF, 0x0C)), Index (BIXT, 0x13))                If (LEqual (DerefOf (Index (BIXT, One)), One))                {                    Store (Zero, Index (BIXT, One))                    Store (DerefOf (Index (BIXT, 0x05)), Local0)                    Multiply (DerefOf (Index (BIXT, 0x02)), Local0, Index (BIXT, 0x02))                    Multiply (DerefOf (Index (BIXT, 0x03)), Local0, Index (BIXT, 0x03))                    Multiply (DerefOf (Index (BIXT, 0x06)), Local0, Index (BIXT, 0x06))                    Multiply (DerefOf (Index (BIXT, 0x07)), Local0, Index (BIXT, 0x07))                    Multiply (DerefOf (Index (BIXT, 0x0E)), Local0, Index (BIXT, 0x0E))                    Multiply (DerefOf (Index (BIXT, 0x0F)), Local0, Index (BIXT, 0x0F))                    Divide (DerefOf (Index (BIXT, 0x02)), 0x03E8, Local0, Index (BIXT, 0x02))                    Divide (DerefOf (Index (BIXT, 0x03)), 0x03E8, Local0, Index (BIXT, 0x03))                    Divide (DerefOf (Index (BIXT, 0x06)), 0x03E8, Local0, Index (BIXT, 0x06))                    Divide (DerefOf (Index (BIXT, 0x07)), 0x03E8, Local0, Index (BIXT, 0x07))                    Divide (DerefOf (Index (BIXT, 0x0E)), 0x03E8, Local0, Index (BIXT, 0x0E))                    Divide (DerefOf (Index (BIXT, 0x0F)), 0x03E8, Local0, Index (BIXT, 0x0F))                }                Store (B1B2(^^LPCB.EC0.XC30,^^LPCB.EC0.XC31), Index (BIXT, 0x08))                Store (0x0001869F, Index (BIXT, 0x09))                Return (BIXT)            }    }    }    Scope (_SB.PCI0.LPCB.EC0)    {        Method (BIFA, 0, NotSerialized)        {            If (ECAV ())            {                If (BSLF)                {                    Store (B1B2(B1S0,B1S1), Local0)                }                Else                {                    Store (B1B2(B0S0,B0S1), Local0)                }            }            Else            {                Store (Ones, Local0)            }            Return (Local0)        }    }    Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }    // added methods (group 2)    Scope (_SB.PCI0.LPCB.EC0)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }            }</code></pre><p>Notice how FBST and _BIX were added to scope _SB.PCI0.BAT0, but BIFA was added to _SB.PCI0.LPCB.EC0. It is important to inject all methods into their original scope.</p><p>Now, we add SMBR, SMBW, ECSB, and TACH:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">// patched methods</span><br><span class="line">    Scope (_SB.PCI0)</span><br><span class="line">    &#123;</span><br><span class="line">        Scope (BAT0)</span><br><span class="line">        &#123;</span><br><span class="line">            Method (FBST, 4, NotSerialized)</span><br><span class="line">            &#123;</span><br><span class="line">                And (Arg1, 0xFFFF, Local1)</span><br><span class="line">                Store (Zero, Local0)</span><br><span class="line">                If (^^LPCB.EC0.ACAP ())</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (One, Local0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (Local0)</span><br><span class="line">                &#123;</span><br><span class="line">                    If (CHGS (Zero))</span><br><span class="line">&#123;</span><br><span class="line">Store (0x02, Local0)</span><br><span class="line">&#125;</span><br><span class="line">Else</span><br><span class="line">&#123;</span><br><span class="line">Store (Zero, Local0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (One, Local0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (BLLO)</span><br><span class="line">                &#123;</span><br><span class="line">                    ShiftLeft (One, 0x02, Local2)</span><br><span class="line">                    Or (Local0, Local2, Local0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (And (^^LPCB.EC0.EB0S, 0x08))</span><br><span class="line">                &#123;</span><br><span class="line">                    ShiftLeft (One, 0x02, Local2)</span><br><span class="line">                    Or (Local0, Local2, Local0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LGreaterEqual (Local1, 0x8000))</span><br><span class="line">                &#123;</span><br><span class="line">                    Subtract (0xFFFF, Local1, Local1)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Store (Arg2, Local2)</span><br><span class="line">                If (LEqual (PUNT, Zero))</span><br><span class="line">                &#123;</span><br><span class="line">                    Multiply (Local1, ^^LPCB.EC0.B0DV, Local1)</span><br><span class="line">                    Multiply (Local2, 0x0A, Local2)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                And (Local0, 0x02, Local3)</span><br><span class="line">                If (LNot (Local3))</span><br><span class="line">                &#123;</span><br><span class="line">                    Subtract (LFCC, Local2, Local3)</span><br><span class="line">                    Divide (LFCC, 0xC8, Local4, Local5)</span><br><span class="line">                    If (LLess (Local3, Local5))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (LFCC, Local2)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Divide (LFCC, 0xC8, Local4, Local5)</span><br><span class="line">                    Subtract (LFCC, Local5, Local4)</span><br><span class="line">                    If (LGreater (Local2, Local4))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Local4, Local2)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LNot (^^LPCB.EC0.ACAP ()))</span><br><span class="line">                &#123;</span><br><span class="line">                    Divide (Local2, MBLF, Local3, Local4)</span><br><span class="line">                    If (LLess (Local1, Local4))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Local4, Local1)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Store (Local0, Index (PBST, Zero))</span><br><span class="line">                Store (Local1, Index (PBST, One))</span><br><span class="line">                Store (Local2, Index (PBST, 0x02))</span><br><span class="line">                Store (Arg3, Index (PBST, 0x03))</span><br><span class="line">            &#125;</span><br><span class="line">            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended</span><br><span class="line">            &#123;</span><br><span class="line">                If (LNot (^^LPCB.EC0.BATP (Zero)))</span><br><span class="line">                &#123;</span><br><span class="line">                    Return (NBIX)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))</span><br><span class="line">                &#123;</span><br><span class="line">                    Return (NBIX)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                _BIF ()</span><br><span class="line">                Store (DerefOf (Index (PBIF, Zero)), Index (BIXT, One))</span><br><span class="line">                Store (DerefOf (Index (PBIF, One)), Index (BIXT, 0x02))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x02)), Index (BIXT, 0x03))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x03)), Index (BIXT, 0x04))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x04)), Index (BIXT, 0x05))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x05)), Index (BIXT, 0x06))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x06)), Index (BIXT, 0x07))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x07)), Index (BIXT, 0x0E))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x08)), Index (BIXT, 0x0F))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x09)), Index (BIXT, 0x10))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x0A)), Index (BIXT, 0x11))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x0B)), Index (BIXT, 0x12))</span><br><span class="line">                Store (DerefOf (Index (PBIF, 0x0C)), Index (BIXT, 0x13))</span><br><span class="line">                If (LEqual (DerefOf (Index (BIXT, One)), One))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (Zero, Index (BIXT, One))</span><br><span class="line">                    Store (DerefOf (Index (BIXT, 0x05)), Local0)</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x02)), Local0, Index (BIXT, 0x02))</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x03)), Local0, Index (BIXT, 0x03))</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x06)), Local0, Index (BIXT, 0x06))</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x07)), Local0, Index (BIXT, 0x07))</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x0E)), Local0, Index (BIXT, 0x0E))</span><br><span class="line">                    Multiply (DerefOf (Index (BIXT, 0x0F)), Local0, Index (BIXT, 0x0F))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x02)), 0x03E8, Local0, Index (BIXT, 0x02))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x03)), 0x03E8, Local0, Index (BIXT, 0x03))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x06)), 0x03E8, Local0, Index (BIXT, 0x06))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x07)), 0x03E8, Local0, Index (BIXT, 0x07))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x0E)), 0x03E8, Local0, Index (BIXT, 0x0E))</span><br><span class="line">                    Divide (DerefOf (Index (BIXT, 0x0F)), 0x03E8, Local0, Index (BIXT, 0x0F))</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Store (B1B2(^^LPCB.EC0.XC30,^^LPCB.EC0.XC31), Index (BIXT, 0x08))</span><br><span class="line">                Store (0x0001869F, Index (BIXT, 0x09))</span><br><span class="line">                Return (BIXT)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Scope (_SB.PCI0.LPCB.EC0)</span><br><span class="line">    &#123;</span><br><span class="line">        Method (BIFA, 0, NotSerialized)</span><br><span class="line">        &#123;</span><br><span class="line">            If (ECAV ())</span><br><span class="line">            &#123;</span><br><span class="line">                If (BSLF)</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (B1B2(B1S0,B1S1), Local0)</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (B1B2(B0S0,B0S1), Local0)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Else</span><br><span class="line">            &#123;</span><br><span class="line">                Store (Ones, Local0)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Return (Local0)</span><br><span class="line">        &#125;</span><br><span class="line">        Method (SMBR, 3, Serialized)</span><br><span class="line">        &#123;</span><br><span class="line">            Store (Package (0x03)</span><br><span class="line">                &#123;</span><br><span class="line">                    0x07,</span><br><span class="line">                    Zero,</span><br><span class="line">                    Zero</span><br><span class="line">                &#125;, Local0)</span><br><span class="line">            If (LNot (ECAV ()))</span><br><span class="line">            &#123;</span><br><span class="line">                Return (Local0)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            If (LNotEqual (Arg0, RDBL))</span><br><span class="line">            &#123;</span><br><span class="line">                If (LNotEqual (Arg0, RDWD))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LNotEqual (Arg0, RDBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        If (LNotEqual (Arg0, RCBT))</span><br><span class="line">                        &#123;</span><br><span class="line">                            If (LNotEqual (Arg0, RDQK))</span><br><span class="line">                            &#123;</span><br><span class="line">                                Return (Local0)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Acquire (MUEC, 0xFFFF)</span><br><span class="line">            Store (PRTC, Local1)</span><br><span class="line">            Store (Zero, Local2)</span><br><span class="line">            While (LNotEqual (Local1, Zero))</span><br><span class="line">            &#123;</span><br><span class="line">                Stall (0x0A)</span><br><span class="line">                Increment (Local2)</span><br><span class="line">                If (LGreater (Local2, 0x03E8))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (SBBY, Index (Local0, Zero))</span><br><span class="line">                    Store (Zero, Local1)</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (PRTC, Local1)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            If (LLessEqual (Local2, 0x03E8))</span><br><span class="line">            &#123;</span><br><span class="line">                ShiftLeft (Arg1, One, Local3)</span><br><span class="line">                Or (Local3, One, Local3)</span><br><span class="line">                Store (Local3, ADDR)</span><br><span class="line">                If (LNotEqual (Arg0, RDQK))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LNotEqual (Arg0, RCBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Arg2, CMDB)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                WRBA(Zero)</span><br><span class="line">                Store (Arg0, PRTC)</span><br><span class="line">                Store (SWTC (Arg0), Index (Local0, Zero))</span><br><span class="line">                If (LEqual (DerefOf (Index (Local0, Zero)), Zero))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LEqual (Arg0, RDBL))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (BCNT, Index (Local0, One))</span><br><span class="line">                        Store (RDBA(), Index (Local0, 0x02))</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    If (LEqual (Arg0, RDWD))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (0x02, Index (Local0, One))</span><br><span class="line">                        Store (B1B2(T2B0,T2B1), Index (Local0, 0x02))</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    If (LEqual (Arg0, RDBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (One, Index (Local0, One))</span><br><span class="line">                        Store (DAT0, Index (Local0, 0x02))</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    If (LEqual (Arg0, RCBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (One, Index (Local0, One))</span><br><span class="line">                        Store (DAT0, Index (Local0, 0x02))</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Release (MUEC)</span><br><span class="line">            Return (Local0)</span><br><span class="line">        &#125;</span><br><span class="line">        Method (SMBW, 5, Serialized)</span><br><span class="line">        &#123;</span><br><span class="line">            Store (Package (0x01)</span><br><span class="line">                &#123;</span><br><span class="line">                    0x07</span><br><span class="line">                &#125;, Local0)</span><br><span class="line">            If (LNot (ECAV ()))</span><br><span class="line">            &#123;</span><br><span class="line">                Return (Local0)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            If (LNotEqual (Arg0, WRBL))</span><br><span class="line">            &#123;</span><br><span class="line">                If (LNotEqual (Arg0, WRWD))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LNotEqual (Arg0, WRBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        If (LNotEqual (Arg0, SDBT))</span><br><span class="line">                        &#123;</span><br><span class="line">                            If (LNotEqual (Arg0, WRQK))</span><br><span class="line">                            &#123;</span><br><span class="line">                                Return (Local0)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Acquire (MUEC, 0xFFFF)</span><br><span class="line">            Store (PRTC, Local1)</span><br><span class="line">            Store (Zero, Local2)</span><br><span class="line">            While (LNotEqual (Local1, Zero))</span><br><span class="line">            &#123;</span><br><span class="line">                Stall (0x0A)</span><br><span class="line">                Increment (Local2)</span><br><span class="line">                If (LGreater (Local2, 0x03E8))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (SBBY, Index (Local0, Zero))</span><br><span class="line">                    Store (Zero, Local1)</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (PRTC, Local1)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            If (LLessEqual (Local2, 0x03E8))</span><br><span class="line">            &#123;</span><br><span class="line">                WRBA(Zero)</span><br><span class="line">                ShiftLeft (Arg1, One, Local3)</span><br><span class="line">                Store (Local3, ADDR)</span><br><span class="line">                If (LNotEqual (Arg0, WRQK))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LNotEqual (Arg0, SDBT))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Arg2, CMDB)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LEqual (Arg0, WRBL))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (Arg3, BCNT)</span><br><span class="line">                    WRBA(Arg4)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LEqual (Arg0, WRWD))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store(Arg4,T2B0) Store(ShiftRight(Arg4,8),T2B1)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LEqual (Arg0, WRBT))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (Arg4, DAT0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LEqual (Arg0, SDBT))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (Arg4, DAT0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Store (Arg0, PRTC)</span><br><span class="line">                Store (SWTC (Arg0), Index (Local0, Zero))</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Release (MUEC)</span><br><span class="line">            Return (Local0)</span><br><span class="line">        &#125;</span><br><span class="line">        Method (ECSB, 7, NotSerialized)</span><br><span class="line">        &#123;</span><br><span class="line">            Store (Package (0x05)</span><br><span class="line">                &#123;</span><br><span class="line">                    0x11,</span><br><span class="line">                    Zero,</span><br><span class="line">                    Zero,</span><br><span class="line">                    Zero,</span><br><span class="line">                    Buffer (0x20)&#123;&#125;</span><br><span class="line">                &#125;, Local1)</span><br><span class="line">            If (LGreater (Arg0, One))</span><br><span class="line">            &#123;</span><br><span class="line">                Return (Local1)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            If (ECAV ())</span><br><span class="line">            &#123;</span><br><span class="line">                Acquire (MUEC, 0xFFFF)</span><br><span class="line">                If (LEqual (Arg0, Zero))</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (PRTC, Local0)</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Store (PRT2, Local0)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Store (Zero, Local2)</span><br><span class="line">                While (LNotEqual (Local0, Zero))</span><br><span class="line">                &#123;</span><br><span class="line">                    Stall (0x0A)</span><br><span class="line">                    Increment (Local2)</span><br><span class="line">                    If (LGreater (Local2, 0x03E8))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (SBBY, Index (Local1, Zero))</span><br><span class="line">                        Store (Zero, Local0)</span><br><span class="line">                    &#125;</span><br><span class="line">                    ElseIf (LEqual (Arg0, Zero))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (PRTC, Local0)</span><br><span class="line">                    &#125;</span><br><span class="line">                    Else</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (PRT2, Local0)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                If (LLessEqual (Local2, 0x03E8))</span><br><span class="line">                &#123;</span><br><span class="line">                    If (LEqual (Arg0, Zero))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Arg2, ADDR)</span><br><span class="line">                        Store (Arg3, CMDB)</span><br><span class="line">                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (DerefOf (Index (Arg6, Zero)), BCNT)</span><br><span class="line">                            WRBA(DerefOf (Index (Arg6, One)))</span><br><span class="line">                        &#125;</span><br><span class="line">                        Else</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (Arg4, DAT0)</span><br><span class="line">                            Store (Arg5, DAT1)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        Store (Arg1, PRTC)</span><br><span class="line">                    &#125;</span><br><span class="line">                    Else</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (Arg2, ADD2)</span><br><span class="line">                        Store (Arg3, CMD2)</span><br><span class="line">                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (DerefOf (Index (Arg6, Zero)), BCN2)</span><br><span class="line">                            WRBB(DerefOf (Index (Arg6, One)))</span><br><span class="line">                        &#125;</span><br><span class="line">                        Else</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (Arg4, DA20)</span><br><span class="line">                            Store (Arg5, DA21)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        Store (Arg1, PRT2)</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    Store (0x7F, Local0)</span><br><span class="line">                    If (LEqual (Arg0, Zero))</span><br><span class="line">                    &#123;</span><br><span class="line">                        While (PRTC)</span><br><span class="line">                        &#123;</span><br><span class="line">                            Sleep (One)</span><br><span class="line">                            Decrement (Local0)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    Else</span><br><span class="line">                    &#123;</span><br><span class="line">                        While (PRT2)</span><br><span class="line">                        &#123;</span><br><span class="line">                            Sleep (One)</span><br><span class="line">                            Decrement (Local0)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    If (Local0)</span><br><span class="line">                    &#123;</span><br><span class="line">                        If (LEqual (Arg0, Zero))</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (SSTS, Local0)</span><br><span class="line">                            Store (DAT0, Index (Local1, One))</span><br><span class="line">                            Store (DAT1, Index (Local1, 0x02))</span><br><span class="line">                            Store (BCNT, Index (Local1, 0x03))</span><br><span class="line">                            Store (RDBA(), Index (Local1, 0x04))</span><br><span class="line">                        &#125;</span><br><span class="line">                        Else</span><br><span class="line">                        &#123;</span><br><span class="line">                            Store (SST2, Local0)</span><br><span class="line">                            Store (DA20, Index (Local1, One))</span><br><span class="line">                            Store (DA21, Index (Local1, 0x02))</span><br><span class="line">                            Store (BCN2, Index (Local1, 0x03))</span><br><span class="line">                            Store (RDBB(), Index (Local1, 0x04))</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        And (Local0, 0x1F, Local0)</span><br><span class="line">                        If (Local0)</span><br><span class="line">                        &#123;</span><br><span class="line">                            Add (Local0, 0x10, Local0)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        Store (Local0, Index (Local1, Zero))</span><br><span class="line">                    &#125;</span><br><span class="line">                    Else</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (0x10, Index (Local1, Zero))</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Release (MUEC)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Return (Local1)</span><br><span class="line">        &#125;</span><br><span class="line">        Method (TACH, 1, Serialized)</span><br><span class="line">        &#123;</span><br><span class="line">            If (ECAV ())</span><br><span class="line">            &#123;</span><br><span class="line">                Switch (Arg0)</span><br><span class="line">                &#123;</span><br><span class="line">                    Case (Zero)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (B1B2(TH00,TH01), Local0)</span><br><span class="line">                        Break</span><br><span class="line">                    &#125;</span><br><span class="line">                    Case (One)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Store (B1B2(TH10,TH11), Local0)</span><br><span class="line">                        Break</span><br><span class="line">                    &#125;</span><br><span class="line">                    Default</span><br><span class="line">                    &#123;</span><br><span class="line">                        Return (Ones)</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Multiply (Local0, 0x02, Local0)</span><br><span class="line">                If (LNotEqual (Local0, Zero))</span><br><span class="line">                &#123;</span><br><span class="line">                    Divide (0x0041CDB4, Local0, Local1, Local0)</span><br><span class="line">                    Return (Local0)</span><br><span class="line">                &#125;</span><br><span class="line">                Else</span><br><span class="line">                &#123;</span><br><span class="line">                    Return (Ones)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Else</span><br><span class="line">            &#123;</span><br><span class="line">                Return (Ones)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Method (B1B2, 2, NotSerialized) &#123; Return (Or (Arg0, ShiftLeft (Arg1, 8))) &#125;</span><br><span class="line"></span><br><span class="line">    // added methods (group 2)</span><br><span class="line">    Scope (_SB.PCI0.LPCB)</span><br><span class="line">    &#123;</span><br><span class="line">        Scope (EC0)</span><br><span class="line">        &#123;</span><br><span class="line">            Method (RDBA, 0, Serialized)</span><br><span class="line">            &#123;</span><br><span class="line">                Name (TEMP, Buffer(0x20) &#123; &#125;)</span><br><span class="line">                Store (BA00, Index(TEMP, 0x00))</span><br><span class="line">                Store (BA01, Index(TEMP, 0x01))</span><br><span class="line">                Store (BA02, Index(TEMP, 0x02))</span><br><span class="line">                Store (BA03, Index(TEMP, 0x03))</span><br><span class="line">                Store (BA04, Index(TEMP, 0x04))</span><br><span class="line">                Store (BA05, Index(TEMP, 0x05))</span><br><span class="line">                Store (BA06, Index(TEMP, 0x06))</span><br><span class="line">                Store (BA07, Index(TEMP, 0x07))</span><br><span class="line">                Store (BA08, Index(TEMP, 0x08))</span><br><span class="line">                Store (BA09, Index(TEMP, 0x09))</span><br><span class="line">                Store (BA0A, Index(TEMP, 0x0A))</span><br><span class="line">                Store (BA0B, Index(TEMP, 0x0B))</span><br><span class="line">                Store (BA0C, Index(TEMP, 0x0C))</span><br><span class="line">                Store (BA0D, Index(TEMP, 0x0D))</span><br><span class="line">                Store (BA0E, Index(TEMP, 0x0E))</span><br><span class="line">                Store (BA0F, Index(TEMP, 0x0F))</span><br><span class="line">                Store (BA10, Index(TEMP, 0x10))</span><br><span class="line">                Store (BA11, Index(TEMP, 0x11))</span><br><span class="line">                Store (BA12, Index(TEMP, 0x12))</span><br><span class="line">                Store (BA13, Index(TEMP, 0x13))</span><br><span class="line">                Store (BA14, Index(TEMP, 0x14))</span><br><span class="line">                Store (BA15, Index(TEMP, 0x15))</span><br><span class="line">                Store (BA16, Index(TEMP, 0x16))</span><br><span class="line">                Store (BA17, Index(TEMP, 0x17))</span><br><span class="line">                Store (BA18, Index(TEMP, 0x18))</span><br><span class="line">                Store (BA19, Index(TEMP, 0x19))</span><br><span class="line">                Store (BA1A, Index(TEMP, 0x1A))</span><br><span class="line">                Store (BA1B, Index(TEMP, 0x1B))</span><br><span class="line">                Store (BA1C, Index(TEMP, 0x1C))</span><br><span class="line">                Store (BA1D, Index(TEMP, 0x1D))</span><br><span class="line">                Store (BA1E, Index(TEMP, 0x1E))</span><br><span class="line">                Store (BA1F, Index(TEMP, 0x1F))</span><br><span class="line">                Return (TEMP)</span><br><span class="line">            &#125;</span><br><span class="line">            Method (WRBA, 1, Serialized)</span><br><span class="line">            &#123;</span><br><span class="line">                Name (TEMP, Buffer(0x20) &#123; &#125;)</span><br><span class="line">                Store (Arg0, TEMP)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x00)), BA00)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x01)), BA01)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x02)), BA02)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x03)), BA03)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x04)), BA04)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x05)), BA05)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x06)), BA06)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x07)), BA07)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x08)), BA08)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x09)), BA09)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x10)), BA10)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x11)), BA11)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x12)), BA12)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x13)), BA13)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x14)), BA14)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x15)), BA15)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x16)), BA16)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x17)), BA17)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x18)), BA18)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x19)), BA19)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)</span><br><span class="line">            &#125;</span><br><span class="line">            Method (RDBB, 0, Serialized)</span><br><span class="line">            &#123;</span><br><span class="line">                Name (TEMP, Buffer(0x20) &#123; &#125;)</span><br><span class="line">                Store (BB00, Index(TEMP, 0x00))</span><br><span class="line">                Store (BB01, Index(TEMP, 0x01))</span><br><span class="line">                Store (BB02, Index(TEMP, 0x02))</span><br><span class="line">                Store (BB03, Index(TEMP, 0x03))</span><br><span class="line">                Store (BB04, Index(TEMP, 0x04))</span><br><span class="line">                Store (BB05, Index(TEMP, 0x05))</span><br><span class="line">                Store (BB06, Index(TEMP, 0x06))</span><br><span class="line">                Store (BB07, Index(TEMP, 0x07))</span><br><span class="line">                Store (BB08, Index(TEMP, 0x08))</span><br><span class="line">                Store (BB09, Index(TEMP, 0x09))</span><br><span class="line">                Store (BB0A, Index(TEMP, 0x0A))</span><br><span class="line">                Store (BB0B, Index(TEMP, 0x0B))</span><br><span class="line">                Store (BB0C, Index(TEMP, 0x0C))</span><br><span class="line">                Store (BB0D, Index(TEMP, 0x0D))</span><br><span class="line">                Store (BB0E, Index(TEMP, 0x0E))</span><br><span class="line">                Store (BB0F, Index(TEMP, 0x0F))</span><br><span class="line">                Store (BB10, Index(TEMP, 0x10))</span><br><span class="line">                Store (BB11, Index(TEMP, 0x11))</span><br><span class="line">                Store (BB12, Index(TEMP, 0x12))</span><br><span class="line">                Store (BB13, Index(TEMP, 0x13))</span><br><span class="line">                Store (BB14, Index(TEMP, 0x14))</span><br><span class="line">                Store (BB15, Index(TEMP, 0x15))</span><br><span class="line">                Store (BB16, Index(TEMP, 0x16))</span><br><span class="line">                Store (BB17, Index(TEMP, 0x17))</span><br><span class="line">                Store (BB18, Index(TEMP, 0x18))</span><br><span class="line">                Store (BB19, Index(TEMP, 0x19))</span><br><span class="line">                Store (BB1A, Index(TEMP, 0x1A))</span><br><span class="line">                Store (BB1B, Index(TEMP, 0x1B))</span><br><span class="line">                Store (BB1C, Index(TEMP, 0x1C))</span><br><span class="line">                Store (BB1D, Index(TEMP, 0x1D))</span><br><span class="line">                Store (BB1E, Index(TEMP, 0x1E))</span><br><span class="line">                Store (BB1F, Index(TEMP, 0x1F))</span><br><span class="line">                Return (TEMP)</span><br><span class="line">            &#125;</span><br><span class="line">            Method (WRBB, 1, Serialized)</span><br><span class="line">            &#123;</span><br><span class="line">                Name (TEMP, Buffer(0x20) &#123; &#125;)</span><br><span class="line">                Store (Arg0, TEMP)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x00)), BB00)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x01)), BB01)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x02)), BB02)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x03)), BB03)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x04)), BB04)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x05)), BB05)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x06)), BB06)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x07)), BB07)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x08)), BB08)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x09)), BB09)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x10)), BB10)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x11)), BB11)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x12)), BB12)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x13)), BB13)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x14)), BB14)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x15)), BB15)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x16)), BB16)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x17)), BB17)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x18)), BB18)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x19)), BB19)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)</span><br><span class="line">                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>With all the nodes expanded in MaciASL, our work looks like this:<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://ovefvi4g3.bkt.clouddn.com/ssd_with_nodes_expanded.png" alt="ssd_with_nodes_expanded" title="">                </div>                <div class="image-caption">ssd_with_nodes_expanded</div>            </figure></p><h3 id="Resolving-errors"><a href="#Resolving-errors" class="headerlink" title="Resolving errors"></a>Resolving errors</h3><p>Now we need to start resolving errors by using External or defining the patched EC fields as necessary.<br>We can use the compiler to help.</p><p>Clicking Compile will show the first error: “3, 6085, Object not found or not accessible from scope (_SB.PCI0)”<br>It is at this line:</p><pre><code>Scope (_SB.PCI0)</code></pre><p>The compiler is indicating that _SB.PCI0 is not declared, so you can’t use it in a Scope operator.</p><p>We need to declare it with External, as the scope is actually defined in another file (DSDT.aml):<br>Add it to the top of the file:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">External(_SB.PCI0, DeviceObj)</span><br><span class="line">Scope (_SB.PCI0)</span><br><span class="line">&#123;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Now the next error is at “Scope(BAT0)”, so, again:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    Scope (_SB.PCI0)    {        Scope (BAT0)        {...</code></pre><p>The next error is “13, 6085, Object not found or not accessible from scope (^^LPCB.EC0.ACAP)”<br>We can tell from the code referencing ACAP that it is a method:</p><pre><code>If (^^LPCB.EC0.ACAP ())</code></pre><p>Note: Method calls are indicated by the “()” (in this case, an empty parameter list).</p><p>So, we know we can add an External as MethodObj:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)...}</code></pre><p>Note: The path ^^LPCB.EC0.ACAP is equivalent to _SB.PCI0.LPCB.EC0.ACAP because the reference was in scope _SB.PCI0.BAT0.FBST (the path of the FBST method). Each ^ (parent of) operator walks up the current scope by one item, so ^ is _SB.PCI0.BAT0, and ^^ is _SB.PCI0.</p><p>In some cases, you need to look at the DSDT to find the path and/or type of a given identifier. For example, the next error has to do with CHGS. Again, we know it is a method as it is the target of a method call, but for the path, we must refer to the DSDT:<br>Code (Text):</p><pre><code>Scope (\){    Method (CHGS, 1, Serialized)    {        Store (\_SB.PCI0.LPCB.EC0.BCHG (Arg0), Local0)        Return (Local0)    }</code></pre><p>So, it is in the root:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)...</code></pre><p>The next undefined symbol, BLLO, is something other than a method:</p><pre><code>If (BLLO){</code></pre><p>Looking in DSDT, we find it is defined with Name (and it happens to be in root scope):</p><pre><code>Name (BLLO, Zero)</code></pre><p>Which makes it an IntObj:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)...</code></pre><p>Fixing all the errors in the FBST method:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)...</code></pre><p>And now continue with the same process.</p><p>Eventually, you will have:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)...</code></pre><p>And will come to an error with XC30/XC31: “153, 6085, Object not found or not accessible from scope (^^LPCB.EC0.XC30)”</p><p>This is one of the 16-bit fields that was broken into two.<br>And this is where it is necessary to create the EC overlay.</p><p>To do this, we use another OperationRegion within EC scope, that has a different name than what we find in DSDT:</p><pre><code>External(_SB.PCI0.LPCB, DeviceObj)External(_SB.PCI0.LPCB.EC0, DeviceObj)Scope(_SB.PCI0.LPCB.EC0){    OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)    Field(ERM2, ByteAcc, NoLock, Preserve)    {    }}</code></pre><p>And from DSDT_patched.dsl, we can get the various patched fields (again refer to the diffmerge).<br>This is the entire set from ECOR in the DSDT_patched.dsl</p><pre><code>Offset (0x04),CMD1,   8,CDT1,   8,CDT2,   8,CDT3,   8,Offset (0x80),Offset (0x81),Offset (0x82),Offset (0x83),EB0R,   8,EB1R,   8,EPWF,   8,Offset (0x87),Offset (0x88),Offset (0x89),Offset (0x8A),HKEN,   1,Offset (0x93),TH00,8,TH01,8,TH10,8,TH11,8,TSTP,   8,Offset (0x9C),CDT4,   8,CDT5,   8,Offset (0xA0),Offset (0xA1),Offset (0xA2),Offset (0xA3),EACT,   8,TH1R,   8,TH1L,   8,TH0R,   8,TH0L,   8,Offset (0xB0),B0PN,   16,Offset (0xB4),Offset (0xB6),Offset (0xB8),Offset (0xBA),Offset (0xBC),Offset (0xBE),B0TM,   16,B0C1,   16,B0C2,   16,XC30,8,XC31,8,B0C4,   16,Offset (0xD0),B1PN,   16,Offset (0xD4),Offset (0xD6),Offset (0xD8),Offset (0xDA),Offset (0xDC),Offset (0xDE),B1TM,   16,B1C1,   16,B1C2,   16,YC30,8,YC31,8,B1C4,   16,Offset (0xF0),Offset (0xF2),Offset (0xF4),B0S0,8,B0S1,8,Offset (0xF8),Offset (0xFA),Offset (0xFC),B1S0,8,B1S1,8</code></pre><p>And if we strip the unpatched identifiers, but keep the offsets correct (very important!):</p><pre><code>Offset (0x93),TH00,8,TH01,8,TH10,8,TH11,8,Offset (0xBE),/*B0TM*/,   16,/*B0C1*/,   16,/*B0C2*/,   16,XC30,8,XC31,8,Offset (0xDE),/*B1TM*/,   16,/*B1C1*/,   16,/*B1C2*/,   16,YC30,8,YC31,8,Offset (0xF4),B0S0,8,B0S1,8,Offset (0xFC),B1S0,8,B1S1,8</code></pre><p>The same thing can be written as follows:</p><pre><code>Offset (0x93),TH00,8,TH01,8,TH10,8,TH11,8,Offset (0xc4),XC30,8,XC31,8,Offset (0xe4),YC30,8,YC31,8,Offset (0xF4),B0S0,8,B0S1,8,Offset (0xFC),B1S0,8,B1S1,8</code></pre><p>So, into our SSDT:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)    External(_SB.PCI0.LPCB, DeviceObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    Scope(_SB.PCI0.LPCB.EC0)    {        OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)        Field(ERM2, ByteAcc, NoLock, Preserve)        {                Offset (0x93),                TH00,8,TH01,8,                TH10,8,TH11,8,                Offset (0xc4),                XC30,8,XC31,8,                Offset (0xe4),                YC30,8,YC31,8,                Offset (0xF4),                B0S0,8,B0S1,8,                Offset (0xFC),                B1S0,8,B1S1,8        }    }</code></pre><p>And then on to fixing more errors, we add some more External:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)    External(_SB.PCI0.LPCB.EC0.ECAV, MethodObj)    External(BSLF, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBL, IntObj)    External(_SB.PCI0.LPCB.EC0.RDWD, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RCBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RDQK, IntObj)    External(_SB.PCI0.LPCB.EC0.MUEC, MutexObj)    External(_SB.PCI0.LPCB.EC0.PRTC, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SBBY, IntObj)    External(_SB.PCI0.LPCB.EC0.ADDR, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.CMDB, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SWTC, MethodObj)    External(_SB.PCI0.LPCB.EC0.BCNT, FieldUnitObj)    External(_SB.PCI0.LPCB, DeviceObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    Scope(_SB.PCI0.LPCB.EC0)    {...</code></pre><p>And then we have errors with T2B0 and T2B1. These are again broken down 16-bit EC fields that need to be defined in our EC overlay. In fact, might as well define the rest we know we need (from diffmerge data).</p><p>There is patched data in SMBX:</p><pre><code>OperationRegion (SMBX, EmbeddedControl, 0x18, 0x28)</code></pre><p>So, we create a similar overlay, with a unique name:</p><pre><code>            OperationRegion (RMB1, EmbeddedControl, 0x18, 0x28)            Field (RMB1, ByteAcc, NoLock, Preserve)            {/* Note: disabling these fields (already defined in DSDT, referenced with External if needed,    but keeping the correct offset! (very important!) */*/                PRTC,   8,                SSTS,   5,                    ,   1,                ALFG,   1,                CDFG,   1,                ADDR,   8,                CMDB,   8, */         Offset(4), // the data above is 4 bytes offset from the start of this region!                //BDAT, 256,BA00,8,BA01,8,BA02,8,BA03,8,BA04,8,BA05,8,BA06,8,BA07,8,BA08,8,BA09,8,BA0A,8,BA0B,8,BA0C,8,BA0D,8,BA0E,8,BA0F,8,BA10,8,BA11,8,BA12,8,BA13,8,BA14,8,BA15,8,BA16,8,BA17,8,BA18,8,BA19,8,BA1A,8,BA1B,8,BA1C,8,BA1D,8,BA1E,8,BA1F,8            }</code></pre><p>And similar withe SMB2 region:</p><pre><code>            OperationRegion(RMB2, EmbeddedControl, 0x40, 0x28)            Field (RMB2, ByteAcc, NoLock, Preserve)            {/*                PRT2,   8,                SST2,   5,                    ,   1,                ALF2,   1,                CDF2,   1,                ADD2,   8,                CMD2,   8, */      Offset(4),                //BDA2, 256,BB00,8,BB01,8,BB02,8,BB03,8,BB04,8,BB05,8,BB06,8,BB07,8,BB08,8,BB09,8,BB0A,8,BB0B,8,BB0C,8,BB0D,8,BB0E,8,BB0F,8,BB10,8,BB11,8,BB12,8,BB13,8,BB14,8,BB15,8,BB16,8,BB17,8,BB18,8,BB19,8,BB1A,8,BB1B,8,BB1C,8,BB1D,8,BB1E,8,BB1F,8            }</code></pre><p>And the T2B0 and T2B1 that are in orginal SMBX, but now RMB1:</p><pre><code>Field (RMB1, ByteAcc, NoLock, Preserve){    Offset (0x04),    T2B0,8,T2B1,8}</code></pre><p>And now we have:</p><pre><code>External(_SB.PCI0, DeviceObj)External(_SB.PCI0.BAT0, DeviceObj)External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)External(CHGS, MethodObj)External(BLLO, IntObj)External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)External(_SB.PCI0.BAT0.PUNT, IntObj)External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)External(_SB.PCI0.BAT0.LFCC, IntObj)External(MBLF, IntObj)External(_SB.PCI0.BAT0.PBST, PkgObj)External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)External(_SB.PCI0.BAT0.NBIX, PkgObj)External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)External(_SB.PCI0.BAT0._BIF, MethodObj)External(_SB.PCI0.BAT0.PBIF, PkgObj)External(_SB.PCI0.BAT0.BIXT, PkgObj)External(_SB.PCI0.LPCB.EC0.ECAV, MethodObj)External(BSLF, IntObj)External(_SB.PCI0.LPCB.EC0.RDBL, IntObj)External(_SB.PCI0.LPCB.EC0.RDWD, IntObj)External(_SB.PCI0.LPCB.EC0.RDBT, IntObj)External(_SB.PCI0.LPCB.EC0.RCBT, IntObj)External(_SB.PCI0.LPCB.EC0.RDQK, IntObj)External(_SB.PCI0.LPCB.EC0.MUEC, MutexObj)External(_SB.PCI0.LPCB.EC0.PRTC, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SBBY, IntObj)External(_SB.PCI0.LPCB.EC0.ADDR, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.CMDB, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SWTC, MethodObj)External(_SB.PCI0.LPCB.EC0.BCNT, FieldUnitObj)External(_SB.PCI0.LPCB, DeviceObj)External(_SB.PCI0.LPCB.EC0, DeviceObj)Scope(_SB.PCI0.LPCB.EC0){        OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)        Field(ERM2, ByteAcc, NoLock, Preserve)        {            Offset (0x93),            TH00,8,TH01,8,            TH10,8,TH11,8,            Offset (0xc4),            XC30,8,XC31,8,            Offset (0xe4),            YC30,8,YC31,8,            Offset (0xF4),            B0S0,8,B0S1,8,            Offset (0xFC),            B1S0,8,B1S1,8        }        OperationRegion (RMB1, EmbeddedControl, 0x18, 0x28)        Field (RMB1, ByteAcc, NoLock, Preserve)        {/* Note: disabling these fields (already defined in DSDT, referenced with External if needed,    but keeping the correct offset! (very important!) */*/            PRTC,   8,            SSTS,   5,                ,   1,            ALFG,   1,            CDFG,   1,            ADDR,   8,            CMDB,   8, */     Offset(4), // the data above is 4 bytes offset from the start of this region!            //BDAT, 256,            BA00,8,BA01,8,BA02,8,BA03,8,BA04,8,BA05,8,BA06,8,BA07,8,BA08,8,BA09,8,BA0A,8,BA0B,8,BA0C,8,BA0D,8,BA0E,8,BA0F,8,BA10,8,BA11,8,BA12,8,BA13,8,BA14,8,BA15,8,BA16,8,BA17,8,BA18,8,BA19,8,BA1A,8,BA1B,8,BA1C,8,BA1D,8,BA1E,8,BA1F,8        }        OperationRegion(RMB2, EmbeddedControl, 0x40, 0x28)        Field (RMB2, ByteAcc, NoLock, Preserve)        {/*            PRT2,   8,            SST2,   5,                ,   1,            ALF2,   1,            CDF2,   1,            ADD2,   8,            CMD2,   8, */  Offset(4),            //BDA2, 256,BB00,8,BB01,8,BB02,8,BB03,8,BB04,8,BB05,8,BB06,8,BB07,8,BB08,8,BB09,8,BB0A,8,BB0B,8,BB0C,8,BB0D,8,BB0E,8,BB0F,8,BB10,8,BB11,8,BB12,8,BB13,8,BB14,8,BB15,8,BB16,8,BB17,8,BB18,8,BB19,8,BB1A,8,BB1B,8,BB1C,8,BB1D,8,BB1E,8,BB1F,8        }        Field (RMB1, ByteAcc, NoLock, Preserve)        {            Offset (0x04),            T2B0,8,T2B1,8        }}                   </code></pre><p>Then continue on with fixing more errors with External (it ends eventually!), by adding these External declarations:</p><pre><code>External(_SB.PCI0.LPCB.EC0.DAT0, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.WRBL, IntObj)External(_SB.PCI0.LPCB.EC0.WRWD, IntObj)External(_SB.PCI0.LPCB.EC0.WRBT, IntObj)External(_SB.PCI0.LPCB.EC0.SDBT, IntObj)External(_SB.PCI0.LPCB.EC0.WRQK, IntObj)External(_SB.PCI0.LPCB.EC0.PRT2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.DAT1, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.ADD2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.CMD2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.BCN2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.DA20, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.DA21, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SSTS, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SST2, FieldUnitObj)</code></pre><p>Note: With DAT0, don’t be confused at the “other” DAT0 in a different scope!</p><p>At this point, the SSDT compiles without any errors:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)    External(_SB.PCI0.LPCB.EC0.ECAV, MethodObj)    External(BSLF, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBL, IntObj)    External(_SB.PCI0.LPCB.EC0.RDWD, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RCBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RDQK, IntObj)    External(_SB.PCI0.LPCB.EC0.MUEC, MutexObj)    External(_SB.PCI0.LPCB.EC0.PRTC, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SBBY, IntObj)    External(_SB.PCI0.LPCB.EC0.ADDR, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.CMDB, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SWTC, MethodObj)    External(_SB.PCI0.LPCB.EC0.BCNT, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DAT0, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.WRBL, IntObj)    External(_SB.PCI0.LPCB.EC0.WRWD, IntObj)    External(_SB.PCI0.LPCB.EC0.WRBT, IntObj)    External(_SB.PCI0.LPCB.EC0.SDBT, IntObj)    External(_SB.PCI0.LPCB.EC0.WRQK, IntObj)    External(_SB.PCI0.LPCB.EC0.PRT2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DAT1, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.ADD2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.CMD2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.BCN2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DA20, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DA21, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SSTS, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SST2, FieldUnitObj)    External(_SB.PCI0.LPCB, DeviceObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    Scope(_SB.PCI0.LPCB.EC0)    {            OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)            Field(ERM2, ByteAcc, NoLock, Preserve)            {                Offset (0x93),                TH00,8,TH01,8,                TH10,8,TH11,8,                Offset (0xc4),                XC30,8,XC31,8,                Offset (0xe4),                YC30,8,YC31,8,                Offset (0xF4),                B0S0,8,B0S1,8,                Offset (0xFC),                B1S0,8,B1S1,8            }            OperationRegion (RMB1, EmbeddedControl, 0x18, 0x28)            Field (RMB1, ByteAcc, NoLock, Preserve)            {/* Note: disabling these fields (already defined in DSDT, referenced with External if needed,    but keeping the correct offset! (very important!) */*/                PRTC,   8,                SSTS,   5,                    ,   1,                ALFG,   1,                CDFG,   1,                ADDR,   8,                CMDB,   8, */         Offset(4), // the data above is 4 bytes offset from the start of this region!                //BDAT, 256,BA00,8,BA01,8,BA02,8,BA03,8,BA04,8,BA05,8,BA06,8,BA07,8,BA08,8,BA09,8,BA0A,8,BA0B,8,BA0C,8,BA0D,8,BA0E,8,BA0F,8,BA10,8,BA11,8,BA12,8,BA13,8,BA14,8,BA15,8,BA16,8,BA17,8,BA18,8,BA19,8,BA1A,8,BA1B,8,BA1C,8,BA1D,8,BA1E,8,BA1F,8            }            OperationRegion(RMB2, EmbeddedControl, 0x40, 0x28)            Field (RMB2, ByteAcc, NoLock, Preserve)            {/*                PRT2,   8,                SST2,   5,                    ,   1,                ALF2,   1,                CDF2,   1,                ADD2,   8,                CMD2,   8, */      Offset(4),                //BDA2, 256,BB00,8,BB01,8,BB02,8,BB03,8,BB04,8,BB05,8,BB06,8,BB07,8,BB08,8,BB09,8,BB0A,8,BB0B,8,BB0C,8,BB0D,8,BB0E,8,BB0F,8,BB10,8,BB11,8,BB12,8,BB13,8,BB14,8,BB15,8,BB16,8,BB17,8,BB18,8,BB19,8,BB1A,8,BB1B,8,BB1C,8,BB1D,8,BB1E,8,BB1F,8             }            Field (RMB1, ByteAcc, NoLock, Preserve)            {                Offset (0x04),                T2B0,8,T2B1,8            }    }    Scope (_SB.PCI0)    {        Scope (BAT0)        {            Method (FBST, 4, NotSerialized)            {                And (Arg1, 0xFFFF, Local1)                Store (Zero, Local0)                If (^^LPCB.EC0.ACAP ())                {                    Store (One, Local0)                }                If (Local0)                {                    If (CHGS (Zero)){    Store (0x02, Local0)}Else{    Store (Zero, Local0)   }                }                Else                {                    Store (One, Local0)                }                If (BLLO)                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (And (^^LPCB.EC0.EB0S, 0x08))                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (LGreaterEqual (Local1, 0x8000))                {                    Subtract (0xFFFF, Local1, Local1)                }                Store (Arg2, Local2)                If (LEqual (PUNT, Zero))                {                    Multiply (Local1, ^^LPCB.EC0.B0DV, Local1)                    Multiply (Local2, 0x0A, Local2)                }                And (Local0, 0x02, Local3)                If (LNot (Local3))                {                    Subtract (LFCC, Local2, Local3)                    Divide (LFCC, 0xC8, Local4, Local5)                    If (LLess (Local3, Local5))                    {                        Store (LFCC, Local2)                    }                }                Else                {                    Divide (LFCC, 0xC8, Local4, Local5)                    Subtract (LFCC, Local5, Local4)                    If (LGreater (Local2, Local4))                    {                        Store (Local4, Local2)                    }                }                If (LNot (^^LPCB.EC0.ACAP ()))                {                    Divide (Local2, MBLF, Local3, Local4)                    If (LLess (Local1, Local4))                    {                        Store (Local4, Local1)                    }                }                Store (Local0, Index (PBST, Zero))                Store (Local1, Index (PBST, One))                Store (Local2, Index (PBST, 0x02))                Store (Arg3, Index (PBST, 0x03))            }            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended            {                If (LNot (^^LPCB.EC0.BATP (Zero)))                {                    Return (NBIX)                }                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))                {                    Return (NBIX)                }                _BIF ()                Store (DerefOf (Index (PBIF, Zero)), Index (BIXT, One))                Store (DerefOf (Index (PBIF, One)), Index (BIXT, 0x02))                Store (DerefOf (Index (PBIF, 0x02)), Index (BIXT, 0x03))                Store (DerefOf (Index (PBIF, 0x03)), Index (BIXT, 0x04))                Store (DerefOf (Index (PBIF, 0x04)), Index (BIXT, 0x05))                Store (DerefOf (Index (PBIF, 0x05)), Index (BIXT, 0x06))                Store (DerefOf (Index (PBIF, 0x06)), Index (BIXT, 0x07))                Store (DerefOf (Index (PBIF, 0x07)), Index (BIXT, 0x0E))                Store (DerefOf (Index (PBIF, 0x08)), Index (BIXT, 0x0F))                Store (DerefOf (Index (PBIF, 0x09)), Index (BIXT, 0x10))                Store (DerefOf (Index (PBIF, 0x0A)), Index (BIXT, 0x11))                Store (DerefOf (Index (PBIF, 0x0B)), Index (BIXT, 0x12))                Store (DerefOf (Index (PBIF, 0x0C)), Index (BIXT, 0x13))                If (LEqual (DerefOf (Index (BIXT, One)), One))                {                    Store (Zero, Index (BIXT, One))                    Store (DerefOf (Index (BIXT, 0x05)), Local0)                    Multiply (DerefOf (Index (BIXT, 0x02)), Local0, Index (BIXT, 0x02))                    Multiply (DerefOf (Index (BIXT, 0x03)), Local0, Index (BIXT, 0x03))                    Multiply (DerefOf (Index (BIXT, 0x06)), Local0, Index (BIXT, 0x06))                    Multiply (DerefOf (Index (BIXT, 0x07)), Local0, Index (BIXT, 0x07))                    Multiply (DerefOf (Index (BIXT, 0x0E)), Local0, Index (BIXT, 0x0E))                    Multiply (DerefOf (Index (BIXT, 0x0F)), Local0, Index (BIXT, 0x0F))                    Divide (DerefOf (Index (BIXT, 0x02)), 0x03E8, Local0, Index (BIXT, 0x02))                    Divide (DerefOf (Index (BIXT, 0x03)), 0x03E8, Local0, Index (BIXT, 0x03))                    Divide (DerefOf (Index (BIXT, 0x06)), 0x03E8, Local0, Index (BIXT, 0x06))                    Divide (DerefOf (Index (BIXT, 0x07)), 0x03E8, Local0, Index (BIXT, 0x07))                    Divide (DerefOf (Index (BIXT, 0x0E)), 0x03E8, Local0, Index (BIXT, 0x0E))                    Divide (DerefOf (Index (BIXT, 0x0F)), 0x03E8, Local0, Index (BIXT, 0x0F))                }                Store (B1B2(^^LPCB.EC0.XC30,^^LPCB.EC0.XC31), Index (BIXT, 0x08))                Store (0x0001869F, Index (BIXT, 0x09))                Return (BIXT)            }    }    }    Scope (_SB.PCI0.LPCB.EC0)    {        Method (BIFA, 0, NotSerialized)        {            If (ECAV ())            {                If (BSLF)                {                    Store (B1B2(B1S0,B1S1), Local0)                }                Else                {                    Store (B1B2(B0S0,B0S1), Local0)                }            }            Else            {                Store (Ones, Local0)            }            Return (Local0)        }        Method (SMBR, 3, Serialized)        {            Store (Package (0x03)                {                    0x07,                    Zero,                    Zero                }, Local0)            If (LNot (ECAV ()))            {                Return (Local0)            }            If (LNotEqual (Arg0, RDBL))            {                If (LNotEqual (Arg0, RDWD))                {                    If (LNotEqual (Arg0, RDBT))                    {                        If (LNotEqual (Arg0, RCBT))                        {                            If (LNotEqual (Arg0, RDQK))                            {                                Return (Local0)                            }                        }                    }                }            }            Acquire (MUEC, 0xFFFF)            Store (PRTC, Local1)            Store (Zero, Local2)            While (LNotEqual (Local1, Zero))            {                Stall (0x0A)                Increment (Local2)                If (LGreater (Local2, 0x03E8))                {                    Store (SBBY, Index (Local0, Zero))                    Store (Zero, Local1)                }                Else                {                    Store (PRTC, Local1)                }            }            If (LLessEqual (Local2, 0x03E8))            {                ShiftLeft (Arg1, One, Local3)                Or (Local3, One, Local3)                Store (Local3, ADDR)                If (LNotEqual (Arg0, RDQK))                {                    If (LNotEqual (Arg0, RCBT))                    {                        Store (Arg2, CMDB)                    }                }                WRBA(Zero)                Store (Arg0, PRTC)                Store (SWTC (Arg0), Index (Local0, Zero))                If (LEqual (DerefOf (Index (Local0, Zero)), Zero))                {                    If (LEqual (Arg0, RDBL))                    {                        Store (BCNT, Index (Local0, One))                        Store (RDBA(), Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RDWD))                    {                        Store (0x02, Index (Local0, One))                        Store (B1B2(T2B0,T2B1), Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RDBT))                    {                        Store (One, Index (Local0, One))                        Store (DAT0, Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RCBT))                    {                        Store (One, Index (Local0, One))                        Store (DAT0, Index (Local0, 0x02))                    }                }            }            Release (MUEC)            Return (Local0)        }        Method (SMBW, 5, Serialized)        {            Store (Package (0x01)                {                    0x07                }, Local0)            If (LNot (ECAV ()))            {                Return (Local0)            }            If (LNotEqual (Arg0, WRBL))            {                If (LNotEqual (Arg0, WRWD))                {                    If (LNotEqual (Arg0, WRBT))                    {                        If (LNotEqual (Arg0, SDBT))                        {                            If (LNotEqual (Arg0, WRQK))                            {                                Return (Local0)                            }                        }                    }                }            }            Acquire (MUEC, 0xFFFF)            Store (PRTC, Local1)            Store (Zero, Local2)            While (LNotEqual (Local1, Zero))            {                Stall (0x0A)                Increment (Local2)                If (LGreater (Local2, 0x03E8))                {                    Store (SBBY, Index (Local0, Zero))                    Store (Zero, Local1)                }                Else                {                    Store (PRTC, Local1)                }            }            If (LLessEqual (Local2, 0x03E8))            {                WRBA(Zero)                ShiftLeft (Arg1, One, Local3)                Store (Local3, ADDR)                If (LNotEqual (Arg0, WRQK))                {                    If (LNotEqual (Arg0, SDBT))                    {                        Store (Arg2, CMDB)                    }                }                If (LEqual (Arg0, WRBL))                {                    Store (Arg3, BCNT)                    WRBA(Arg4)                }                If (LEqual (Arg0, WRWD))                {                    Store(Arg4,T2B0) Store(ShiftRight(Arg4,8),T2B1)                }                If (LEqual (Arg0, WRBT))                {                    Store (Arg4, DAT0)                }                If (LEqual (Arg0, SDBT))                {                    Store (Arg4, DAT0)                }                Store (Arg0, PRTC)                Store (SWTC (Arg0), Index (Local0, Zero))            }            Release (MUEC)            Return (Local0)        }        Method (ECSB, 7, NotSerialized)        {            Store (Package (0x05)                {                    0x11,                    Zero,                    Zero,                    Zero,                    Buffer (0x20){}                }, Local1)            If (LGreater (Arg0, One))            {                Return (Local1)            }            If (ECAV ())            {                Acquire (MUEC, 0xFFFF)                If (LEqual (Arg0, Zero))                {                    Store (PRTC, Local0)                }                Else                {                    Store (PRT2, Local0)                }                Store (Zero, Local2)                While (LNotEqual (Local0, Zero))                {                    Stall (0x0A)                    Increment (Local2)                    If (LGreater (Local2, 0x03E8))                    {                        Store (SBBY, Index (Local1, Zero))                        Store (Zero, Local0)                    }                    ElseIf (LEqual (Arg0, Zero))                    {                        Store (PRTC, Local0)                    }                    Else                    {                        Store (PRT2, Local0)                    }                }                If (LLessEqual (Local2, 0x03E8))                {                    If (LEqual (Arg0, Zero))                    {                        Store (Arg2, ADDR)                        Store (Arg3, CMDB)                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))                        {                            Store (DerefOf (Index (Arg6, Zero)), BCNT)                            WRBA(DerefOf (Index (Arg6, One)))                        }                        Else                        {                            Store (Arg4, DAT0)                            Store (Arg5, DAT1)                        }                        Store (Arg1, PRTC)                    }                    Else                    {                        Store (Arg2, ADD2)                        Store (Arg3, CMD2)                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))                        {                            Store (DerefOf (Index (Arg6, Zero)), BCN2)                            WRBB(DerefOf (Index (Arg6, One)))                        }                        Else                        {                            Store (Arg4, DA20)                            Store (Arg5, DA21)                        }                        Store (Arg1, PRT2)                    }                    Store (0x7F, Local0)                    If (LEqual (Arg0, Zero))                    {                        While (PRTC)                        {                            Sleep (One)                            Decrement (Local0)                        }                    }                    Else                    {                        While (PRT2)                        {                            Sleep (One)                            Decrement (Local0)                        }                    }                    If (Local0)                    {                        If (LEqual (Arg0, Zero))                        {                            Store (SSTS, Local0)                            Store (DAT0, Index (Local1, One))                            Store (DAT1, Index (Local1, 0x02))                            Store (BCNT, Index (Local1, 0x03))                            Store (RDBA(), Index (Local1, 0x04))                        }                        Else                        {                            Store (SST2, Local0)                            Store (DA20, Index (Local1, One))                            Store (DA21, Index (Local1, 0x02))                            Store (BCN2, Index (Local1, 0x03))                            Store (RDBB(), Index (Local1, 0x04))                        }                        And (Local0, 0x1F, Local0)                        If (Local0)                        {                            Add (Local0, 0x10, Local0)                        }                        Store (Local0, Index (Local1, Zero))                    }                    Else                    {                        Store (0x10, Index (Local1, Zero))                    }                }                Release (MUEC)            }            Return (Local1)        }        Method (TACH, 1, Serialized)        {            If (ECAV ())            {                Switch (Arg0)                {                    Case (Zero)                    {                        Store (B1B2(TH00,TH01), Local0)                        Break                    }                    Case (One)                    {                        Store (B1B2(TH10,TH11), Local0)                        Break                    }                    Default                    {                        Return (Ones)                    }                }                Multiply (Local0, 0x02, Local0)                If (LNotEqual (Local0, Zero))                {                    Divide (0x0041CDB4, Local0, Local1, Local0)                    Return (Local0)                }                Else                {                    Return (Ones)                }            }            Else            {                Return (Ones)            }        }        }    Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }    Scope (_SB.PCI0.LPCB)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }}//EOF   </code></pre><p>The resulting file can be saved as AML (suggested name: SSDT-BATT.aml), and placed in ACPI/patched.</p><p>But you can’t expect battery status to work with native DSDT yet!</p><h3 id="Renaming-existing-methods"><a href="#Renaming-existing-methods" class="headerlink" title="Renaming existing methods"></a>Renaming existing methods</h3><p>For now, there are duplicate methods in DSDT and this SSDT-BATT.aml. For each method in DSDT that the SSDT-BATT.aml version will replace, we must rename the method in DSDT to something else, which will allow the SSDT version to override.</p><p>Just as in post #1, this part follows the “Rename/Replace” pattern.<br>The methods that need replacements are FBST, _BIX, BIFA, SMBR, SMBW, ECSB, and TACH.</p><p>For this step, it is useful to create a mixed bytecode listing for the native DSDT.aml.<br>It can be created with: “iasl -l -dl DSDT.aml”, which creates a mixed listing in DSDT.dsl</p><p>For the FBST method:</p><pre><code>Method (FBST, 4, NotSerialized){    And (Arg1, 0xFFFF, Local1)    Store (Zero, Local0)FF74: 14 43 12 46 42 53 54 04 7B 69 0B FF FF 61 70 00  // .C.FBST.{i...ap.FF84: 60</code></pre><p>A potential rename patch (FBST-&gt;XBST):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;46 42 53 54 04&gt;</span><br><span class="line">Replace: &lt;58 42 53 54 04&gt;</span><br></pre></td></tr></table></figure><p>It is a good idea to verify that there is only one match for the Find hex data by searching for it in a hex editor such as Hex Fiend. Because the patch should ONLY apply to the method definition, not other code that may be present in the DSDT (or native SSDTs).</p><p>The target name you choose must be unique within the scope that the method resides. Creating a duplicate method will cause kernel panic. Changing the first letter to ‘X’ is usually ok, but no guarantee.</p><p>Patches for the rest of the methods:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_BIX-&gt;XBIX:</span><br><span class="line">Find: &lt;5F 42 49 58 00&gt;</span><br><span class="line">Replace: &lt;58 42 49 58 00&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BIFA-&gt;XIFA:</span><br><span class="line">Find: &lt;42 49 46 41 00&gt;</span><br><span class="line">Replace: &lt;58 49 46 41 00&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SMBR-&gt;XMBR:</span><br><span class="line">Find: &lt;53 4D 42 52 0B&gt;</span><br><span class="line">Replace: &lt;58 4D 42 52 0B&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SMBW-&gt;XMBW:</span><br><span class="line">Find: &lt;53 4D 42 57 0D&gt;</span><br><span class="line">Replace: &lt;58 4D 42 57 0D&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ECSB-&gt;XCSB:</span><br><span class="line">Find: &lt;45 43 53 42 07&gt;</span><br><span class="line">Replace: &lt;58 43 53 42 07&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TACH-&gt;XACH:</span><br><span class="line">Find: &lt;54 41 43 48 09&gt;</span><br><span class="line">Replace: &lt;58 41 43 48 09&gt;</span><br></pre></td></tr></table></figure><p>After adding those patches to config.plist/ACPI/DSDT/Patches, the methods in native DSDT will be renamed by Clover. And as a result of the renaming, the patched methods defined in SSDT-BATT.aml will override.</p><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Hotpatching for battery status is one of the most complex hotpatch tasks possible. The process of writing all the ‘External’ refernences is tedious and boring.</p><p>It will take some time (several hours into the text you’re reading here). Do not rush it.</p><h2 id="Disabling-discrete-switched-GPU-with-Hotpatch"><a href="#Disabling-discrete-switched-GPU-with-Hotpatch" class="headerlink" title="Disabling discrete/switched GPU with Hotpatch"></a>Disabling discrete/switched GPU with Hotpatch</h2><p>This third post is dedicated to hotpatching required for disabling the discrete GPU in a switched dual-GPU laptop, using the same example ACPI fils as the static patch guide.</p><p><a href="https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/</a></p><p>You should download the ACPI/origin files that are attached to that guide, so you can follow along.</p><p>As in the static patch guide, the goal is relatively simple: call the _OFF method (from an _INI method) for the discrete GPU during ACPI initialization. But the details make it more complex due to the fact that _OFF can contain EC related code which needs to be executed in _REG instead of _INI.</p><h3 id="Building-the-replacement-INI-OFF-REG-methods"><a href="#Building-the-replacement-INI-OFF-REG-methods" class="headerlink" title="Building the replacement _INI/_OFF/_REG methods"></a>Building the replacement _INI/_OFF/_REG methods</h3><p>In the example, the target _INI method is in SSDT-7, _OFF is in SSDT-8. The path of the discrete device is _SB.PCI0.RP05.PEGP. In the example files, _OFF contains EC related code that must be moved to _REG. To complete this patching process, we need to replace _INI, _OFF, and _REG, therefore each will need to be renamed to XINI, XOFF, and XREG</p><p>Note: The methods you need to patch may in fact be different. It all depends on the code within the _OFF path. For example, with other ACPI sets, it happens that SGOF (may be some other name) has EC related code that must be moved to _REG. In that case, you would need to use rename/replace for the SGOF, and perhaps not the _OFF method. Analyze your existing code carefully.</p><p>The Clover config.plist patches will be worked out later. For now, lets look at the SSDT for the replacement methods.</p><p>The SSDT will consist of the patched methods:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;D-GPU&quot;, 0){    External(_SB.PCI0.RP05.PEGP, DeviceObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.RP05.PEGP.XOFF, MethodObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)    External(_SB.PCI0.LPCB.EC0.SPIN, MethodObj)    Scope(_SB.PCI0.RP05.PEGP)    {        Method(_INI)        {            XINI() // call original _INI, now renamed XINI            _OFF() // call (patched) _OFF        }        Method(_OFF, 0, Serialized)        {            If (LEqual (CTXT, Zero))            {                /* \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) */                If (LNotEqual (GPRF, One))                {                    Store (VGAR, VGAB)                }                Store (One, CTXT)            }            SGOF ()        }    }    Scope(_SB.PCI0.LPCB.EC0)    {        Method(_REG, 2)        {            XREG(Arg0, Arg1) // call original _REG, now renamed XREG            If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?            {                \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) // code that was removed from _OFF            }        }    }</code></pre><p>At this point, the code won’t compile, as some of the symbols referenced in _OFF are not available.<br>Just like the battery patching guide, we must add the appropriate External declarations.</p><p>Use the compiler errors to determine which symbols you need to find, then add the appropriate External declartions. In the example case:</p><pre><code>External(_SB.PCI0.RP05.PEGP.CTXT, IntObj)External(_SB.PCI0.RP05.PEGP.GPRF, IntObj)External(_SB.PCI0.RP05.PEGP.VGAR, FieldUnitObj)External(_SB.PCI0.RP05.PEGP.VGAB, BuffObj)External(_SB.PCI0.RP05.PEGP.SGOF, MethodObj)</code></pre><p>The resulting SSDT:</p><pre><code>DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;D-GPU&quot;, 0){    External(_SB.PCI0.RP05.PEGP, DeviceObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.RP05.PEGP.XOFF, MethodObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)    External(_SB.PCI0.LPCB.EC0.SPIN, MethodObj)    External(_SB.PCI0.RP05.PEGP.CTXT, IntObj)    External(_SB.PCI0.RP05.PEGP.GPRF, IntObj)    External(_SB.PCI0.RP05.PEGP.VGAR, FieldUnitObj)    External(_SB.PCI0.RP05.PEGP.VGAB, BuffObj)    External(_SB.PCI0.RP05.PEGP.SGOF, MethodObj)    Scope(_SB.PCI0.RP05.PEGP)    {        Method(_INI)        {            XINI() // call original _INI, now renamed XINI            _OFF() // call (patched) _OFF        }        Method(_OFF, 0, Serialized)        {            If (LEqual (CTXT, Zero))            {                /* \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) */                If (LNotEqual (GPRF, One))                {                    Store (VGAR, VGAB)                }                Store (One, CTXT)            }            SGOF ()        }    }    Scope(_SB.PCI0.LPCB.EC0)    {        Method(_REG, 2)        {            XREG(Arg0, Arg1) // call original _REG, now renamed XREG            If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?            {                \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) // code that was removed from _OFF            }        }    }}</code></pre><p>Now it compiles without error, but there is one warning: “39, 3079, _REG has no corresponding Operation Region”. And this warning is important. The _REG will not be called unless we add a dummy EC OperationRegion.</p><p>We can add it:</p><pre><code>...Scope(_SB.PCI0.LPCB.EC0){    OperationRegion(RME3, EmbeddedControl, 0x00, 0xFF)    Method(_REG, 2)    {...</code></pre><p>Resulting complete SSDT:</p><pre><code>External(_SB.PCI0.RP05.PEGP, DeviceObj)External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)External(_SB.PCI0.RP05.PEGP.XOFF, MethodObj)External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)External(_SB.PCI0.LPCB.EC0, DeviceObj)External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)External(_SB.PCI0.LPCB.EC0.SPIN, MethodObj)External(_SB.PCI0.RP05.PEGP.CTXT, IntObj)External(_SB.PCI0.RP05.PEGP.GPRF, IntObj)External(_SB.PCI0.RP05.PEGP.VGAR, FieldUnitObj)External(_SB.PCI0.RP05.PEGP.VGAB, BuffObj)External(_SB.PCI0.RP05.PEGP.SGOF, MethodObj)Scope(_SB.PCI0.RP05.PEGP){    Method(_INI)    {        XINI() // call original _INI, now renamed XINI        _OFF() // call (patched) _OFF    }    Method(_OFF, 0, Serialized)    {        If (LEqual (CTXT, Zero))        {            /* \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) */            If (LNotEqual (GPRF, One))            {                Store (VGAR, VGAB)            }            Store (One, CTXT)        }        SGOF ()    }}Scope(_SB.PCI0.LPCB.EC0){    OperationRegion(RME3, EmbeddedControl, 0x00, 0xFF)    Method(_REG, 2)    {        XREG(Arg0, Arg1) // call original _REG, now renamed XREG        If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?        {            \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) // code that was removed from _OFF        }    }}</code></pre><p>At this point, you can save the SSDT (suggestion: SSDT-DGPU.aml).<br>It is ready to go to ACPI/patched.</p><p>But we still need to rename the original methods in native ACPI.</p><h3 id="Renaming-the-methods"><a href="#Renaming-the-methods" class="headerlink" title="Renaming the methods"></a>Renaming the methods</h3><p>As mentioned earlier, the following methods need renaming:<br>_SB.PCI0.RP05.PEGP._INI -&gt; XINI<br>_SB.PCI0.RP05.PEGP._OFF -&gt; XOFF<br>_SB.PCI0.LPCB.EC0._REG -&gt; XREG</p><p>To determine the binary patches needed, we need a mixed listing of DSDT.aml, SSDT-7.aml, and SSDT-8.aml.<br>Create with:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iasl -dl -l DSDT.aml SSDT-7.aml SSDT-8.aml</span><br></pre></td></tr></table></figure><p>The resulting mixed listing is in DSDT.dsl, SSDT-7.dsl, and SSDT-8.dsl.</p><p>Here is the mixed listing for _REG in DSDT.dsl:<br>Code (Text):</p><pre><code>        Method (_REG, 2, NotSerialized)  // _REG: Region Availability        {D2B8: 14 12 5F 52 45 47 02                             // .._REG.            If (LEqual (Arg0, 0x03))            {D2BF: A0 0B 93 68 0A 03                                // ...h..                Store (Arg1, ECFL)                }            }        }    }D2C5: 70 69 45 43 46 4C</code></pre><p>The patch used should rename only this _REG, not other _REG methods in the ACPI set. We can rename it by grabbing the name/header plus a few bytes from the code.</p><p>This pattern grabs enough bytes to be unique for sure:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;5F 52 45 47 02 A0 0B 93 68 0A 03 70 69 45 43 46 4C&gt;</span><br><span class="line">Replace: &lt;58 52 45 47 02 A0 0B 93 68 0A 03 70 69 45 43 46 4C&gt;</span><br></pre></td></tr></table></figure><p>And the mixed listing for the target _INI in SSDT-7.dsl:</p><pre><code>        Method (_INI, 0, NotSerialized)  // _INI: Initialize        {03D1: 14 1F 5F 49 4E 49 00                             // .._INI.            Store (Zero, \_SB.PCI0.RP05.PEGP._ADR)        }03D8: 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP003E8: 35 50 45 47 50 5F 41 44 52                       // 5PEGP_ADR</code></pre><p>​            </p><p>Resulting patch…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;5F 49 4E 49 00 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30 35 50 45 47 50&gt;</span><br><span class="line">Replace: &lt;58 49 4E 49 00 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30 35 50 45 47 50&gt;</span><br></pre></td></tr></table></figure><p>And the _OFF in SSDT-8.dsl:</p><pre><code>    Method (_OFF, 0, Serialized)  // _OFF: Power Off    {032B: 14 45 04 5F 4F 46 46 08                          // .E._OFF.        If (LEqual (CTXT, Zero))        {        \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero)0333: A0 39 93 43 54 58 54 00 5C 2F 05 5F 53 42 5F 50  // .9.CTXT.\/._SB_P0343: 43 49 30 4C 50 43 42 45 43 30 5F 53 50 49 4E 0A  // CI0LPCBEC0_SPIN.0353: 96 00</code></pre><p> The patch…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;5F 4F 46 46 08 A0 39 93 43 54 58 54&gt;</span><br><span class="line">Replace: &lt;58 4F 46 46 08 A0 39 93 43 54 58 54&gt;</span><br></pre></td></tr></table></figure><p>Note: Each of these patches could probably be reduced, but you would need to check carefully in all native DSDT and SSDTs for the Find pattern as you don’t want to match on any methods but the target methods. Because _REG, _INI and _OFF are very common names for methods in other scopes, we need to be careful.</p><h3 id="A-simple-example"><a href="#A-simple-example" class="headerlink" title="A simple example"></a>A simple example</h3><p>The files for the ASUS mentioned above were complex due to the need to patch _OFF, _INI, and _REG.</p><p>But let’s take a look at an example that is much simpler. The files are for an Asus K550VX-DM406T, and they are attached to this post. Please download them so you can follow along.</p><p>When we look at the _OFF method in SSDT-14, there is no EC related code. And it calls PGOF, but the PGOF method, defined in SSDT-3, also has no EC related code:</p><pre><code>Method (_OFF, 0, Serialized)  // _OFF: Power Off{    If (LEqual (CTXT, Zero))    {        If (LNotEqual (GPRF, One))        {            Store (VGAR, VGAB)        }        Store (One, CTXT)    }    PGOF (Zero)}</code></pre><p>This means _OFF can be called directly from an _INI.</p><p>If you look at all the _INI methods in the ACPI set, you will find there is no _INI at the path of _OFF (_SB.PCI0.PEG0.PEGP). Which means we can simply add an SSDT that has an _INI at the correct path, and that _INI simply calls _OFF.</p><p>It is a one-liner method:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;DGPU&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">External(_SB.PCI0.PEG0.PEGP._OFF, MethodObj)</span><br><span class="line">Method(_SB.PCI0.PEG0.PEGP._INI) &#123; _OFF() &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Just as mentioned in the main discrete disable guide (static patch), sometimes you need to call _PS3 instead of _OFF. It is a trial and error process to determine which is best.</p><p>Same code as above, but calling _PS3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;DGPU&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">External(_SB.PCI0.PEG0.PEGP._PS3, MethodObj)</span><br><span class="line">Method(_SB.PCI0.PEG0.PEGP._INI) &#123; _PS3() &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Save it as SSDT-DGPU.aml and the Nvidia should be disabled.</p><p>The simple example turned not so simple</p><p>Although the method mentioned above will usually work in this scenario (even with other laptops that present the same scenario: no EC access in _OFF path, no existing _INI at the path), this specific laptop needed additional patching in order to turn off the dedicated Nvidia fan.</p><p>A little investigation was needed. As we can see by looking at the _OFF code, it calls PGOF(Zero) to do most of the work. And if we search for other examples of PGOF being called with Arg0==Zero, we find this code in SSDT-3.dsl:</p><pre><code>ElseIf (LAnd (LGreater (OSYS, 0x07D9), PEGS ())){    FAOF ()    PGOF (Zero)...</code></pre><p>Note the call to FAOF. Could that be for “FAN OFF”? Seems likely.</p><p>And look, we have FAOF and FAON in SSDT-3:</p><pre><code>Method (FAON, 0, Serialized){    \_SB.PCI0.LPCB.EC0.WRAM (0x052B, 0x9E)    \_SB.PCI0.LPCB.EC0.WRAM (0x0520, 0x8B)    Store (\_SB.PCI0.LPCB.EC0.RRAM (0x0521), Local0)    And (Local0, 0xCF, Local0)    Or (Local0, 0x20, Local0)    \_SB.PCI0.LPCB.EC0.WRAM (0x0521, Local0)}Method (FAOF, 0, Serialized){    Store (\_SB.PCI0.LPCB.EC0.RRAM (0x0521), Local0)    And (Local0, 0xCF, Local0)    \_SB.PCI0.LPCB.EC0.WRAM (0x0521, Local0)    \_SB.PCI0.LPCB.EC0.WRAM (0x0520, 0x89)    \_SB.PCI0.LPCB.EC0.WRAM (0x03A4, Zero)    \_SB.PCI0.LPCB.EC0.WRAM (0x03A5, Zero)}</code></pre><p>And you can see it does a bunch of EC manipulations. Typically the EC controls the system fans, so this seems to confirm these methods are for “FAN ON”, and “FAN OFF”.</p><p>Since these methods manipulate the EC, we cannot call FAOF without the EC being ready. To do that, we need to patch _REG.</p><p>So, adding the necessary code to our SSDT:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;DGPU&quot;, 0)</span><br><span class="line">&#123;</span><br><span class="line">External(_SB.PCI0.PEG0.PEGP._OFF, MethodObj)</span><br><span class="line">Method(_SB.PCI0.PEG0.PEGP._INI) &#123; _OFF() &#125;</span><br><span class="line">External(_SB.PCI0.LPCB.EC0, DeviceObj)</span><br><span class="line">External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)</span><br><span class="line">External(_SB.PCI0.PEG0.FAOF, MethodObj)</span><br><span class="line">Scope(_SB.PCI0.LPCB.EC0)</span><br><span class="line">&#123;</span><br><span class="line">    OperationRegion(RME3, EmbeddedControl, 0x00, 0xFF)</span><br><span class="line">    Method(_REG, 2)</span><br><span class="line">    &#123;</span><br><span class="line">        XREG(Arg0, Arg1) // call original _REG, now renamed XREG</span><br><span class="line">        If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?</span><br><span class="line">        &#123;</span><br><span class="line">             \_SB.PCI0.PEG0.FAOF() // turn dedicated Nvidia fan off</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>And the patch we need to rename _REG to XREG (again, based on a mixed listing of DSDT.aml):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Find: &lt;5F 52 45 47 02 A0 0B 93 68 0A 03&gt;</span><br><span class="line">Replace: &lt;58 52 45 47 02 A0 0B 93 68 0A 03&gt;</span><br></pre></td></tr></table></figure><p>With the patch in config.plist, EC0._REG is renamed XREG. The eventual call to _REG by the system lands in our modified _REG, which, in turn, calls the original _REG (renamed to XREG) and calls FAOF to turn the fan off.</p><h3 id="Conclusion-1"><a href="#Conclusion-1" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Hotpatching discrete GPU disable code is a bit simpler than battery status, but involves similar concepts.</p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p><a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config" target="_blank" rel="noopener">https://github.com/RehabMan/OS-X-Clover-Laptop-Config</a><br><a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="noopener">https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/</a></p>]]></content>
    
    <summary type="html">
    
      Using Clover to &quot;hotpatch&quot; ACPI
    
    </summary>
    
      <category term="Hackintosh" scheme="https://blog.iamzhl.top/categories/Hackintosh/"/>
    
    
      <category term="Hacintosh" scheme="https://blog.iamzhl.top/tags/Hacintosh/"/>
    
      <category term="SSDT" scheme="https://blog.iamzhl.top/tags/SSDT/"/>
    
      <category term="hotpatch" scheme="https://blog.iamzhl.top/tags/hotpatch/"/>
    
      <category term="ACPI" scheme="https://blog.iamzhl.top/tags/ACPI/"/>
    
  </entry>
  
</feed>
