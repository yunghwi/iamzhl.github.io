<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Athlonreg&#39;s Blog</title>
  
  <subtitle>套陆的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-08T13:52:22.772Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>athlonreg/套陆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>     谈谈黑果的声卡</title>
    <link href="http://yoursite.com/2017/11/06/%E8%B0%88%E8%B0%88%E9%BB%91%E6%9E%9C%E7%9A%84%E5%A3%B0%E5%8D%A1/"/>
    <id>http://yoursite.com/2017/11/06/谈谈黑果的声卡/</id>
    <published>2017-11-05T16:00:00.000Z</published>
    <updated>2017-11-08T13:52:22.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>在<code>vit9696</code>推出<code>AppleALC</code>后，经过越来越多人仿冒声卡得到的数据的提交整理，<code>AppleALC</code>的数据越来越集中，也使声卡驱动变得越来越简单。</p><p>本文提供使用<code>AppleALC</code>驱动声卡的思路以及常见错误和驱动后的问题进行修复。</p></blockquote><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ul><li><p>需要下载<code>Xcode</code></p><blockquote><p>在<code>AppleStore</code>下载</p></blockquote></li><li><p>下载<code>AppleALC</code></p><blockquote><p>通过终端执行下面的命令，会下载到你的用户根目录</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/vit9696/AppleALC</div></pre></td></tr></table></figure><ul><li>下载<code>Lilu</code><blockquote><p>在下面的网址下载<code>DEBUG</code>和<code>RELEASE</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://github.com/vit9696/Lilu/releases</div></pre></td></tr></table></figure><ul><li>提取<code>Codec</code><blockquote><p>这一步需要用到<code>Linux</code>环境，首先下载<code>Ubuntu</code>镜像，我个人提供一个</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">链接:http://pan.baidu.com/s/1i47I0jN  密码:de4v</div></pre></td></tr></table></figure><blockquote><p>当然也可以去官网下载，下载好镜像之后，将<code>U</code>盘格式化为<code>Fat32</code>，然后将镜像解压到<code>U</code>盘，重启以<code>U</code>盘启动，选择试用进入<code>Ubuntu</code>系统界面，打开终端输入</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /proc/asound/card0/codec#0 &gt; ~/Desktop/Codec.txt</div></pre></td></tr></table></figure><blockquote><p>执行完后会将<code>Codec.txt</code>提取到桌面，将其保存到<code>U</code>盘</p></blockquote><p><strong>PS: 一般来说提取的<code>Codec</code>会有<code>10k</code>左右大小，如果大小不够，很有可能提取错误，可以尝试以下命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /proc/asound/card0/codec#1 &gt; ~/Desktop/Codec.txt</div></pre></td></tr></table></figure><blockquote><p>或者</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /proc/asound/card0/codec#2 &gt; ~/Desktop/Codec.txt</div></pre></td></tr></table></figure><blockquote><p>或者</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /proc/asound/card1/codec#0 &gt; ~/Desktop/Codec.txt</div></pre></td></tr></table></figure><h2 id="Codec-txt的数据整理"><a href="#Codec-txt的数据整理" class="headerlink" title="Codec.txt的数据整理"></a><code>Codec.txt</code>的数据整理</h2><ul><li>记录<code>Address</code>和<code>Vendor Id</code>值</li></ul><blockquote><p><code>Codec.txt</code>开头部分</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-05.png" alt="2017-11-06-05"></p><ul><li>提取节点信息</li></ul><blockquote><p>搜索<code>Pin Default</code>记录<code>Node</code>和节点描述，以我的为例</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-03.png" alt="2017-11-06-03"></p><p><strong>PS: N/A节点无效无需整理，如下面的不需要整理</strong></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-04.png" alt="2017-11-06-04"></p><ul><li>记录<code>HP Out at Ext Left</code>节点的<code>tag</code>和<code>enable</code>值</li></ul><blockquote><p>PS: Unsolicited Response的设定是为了解决耳机和外放切换的问题。<br>需设定 HP Out at Ext 所在的节点，并且节点信息中有Unsolicited: tag=xx, enabled=1 这一行。<br>设定命令为Address+NodeID+708+&lt;设定值&gt;</p><p>设定值是8位的一个二进制数，记作a7 a6 a5 a4 a3 a2 a1 a0，推算出此二进制数之后，四四拆分转换为2位的十进制数加1即为此设定值</p><p>a7表示enabled。<br>a6=0，没具体应用，不用管。<br>a5~a0，存放tag。**</p></blockquote><ul><li>记录<code>Mic at Ext</code>节点的<code>Pin-ctls</code>值</li></ul><blockquote><p>PS: Pin Control Widget的设定是为了解决耳机杂音的。</p><p>需要设定的是 Mic at Ext  所在的节点，设定的值可以从codec dump中读取。</p><p>设定命令是 Address+NodeID+707+Pin-ctls值。</p><p>整理完后，会得到如下所示的数据集合</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-06.png" alt="2017-11-06-06"></p><p><strong>PS: 常见的节点设备描述如下：</strong></p><blockquote><p><code>Mic at Ext</code>–线路输入(耳麦)</p><p><code>Mic at In</code>–内建输入</p><p><code>HP Out</code>–耳机扬声器</p><p><code>Speaker</code>–内建扬声器(外放)</p></blockquote><p align="center"><b>至此，Codec 数据的整理到此结束</b></p><h2 id="AppleALC中数据的筛选"><a href="#AppleALC中数据的筛选" class="headerlink" title="AppleALC中数据的筛选"></a><code>AppleALC</code>中数据的筛选</h2><blockquote><p>依次打开下载的<code>AppleALC</code>源码里面<code>/AppleALC/Resources/PinConfigs.kext/Contents</code>下的<code>Info.plist</code></p><p>搜索之前记录的<code>CodecID</code></p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-07.png" alt="2017-11-06-07"></p><blockquote><p>记录搜索到的所有的<code>ID</code>中的<code>configdata</code>，如下整理</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-08.png" alt="2017-11-06-08"></p><blockquote><p>每一行的每一串的第一个字符代表<code>Address</code>值</p><p>每一行的第三串倒数第二个字符代表这个节点的设备描述，具体对应关系如下</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-01.png" alt="2017-11-06-01"></p><blockquote><p>根据上图设备对应关系和<code>Address</code>值排除掉无效的<code>ID</code>数据</p></blockquote><h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><ul><li>将下载的<code>Debug</code>的<code>Lilu.kext</code>放进 AppleALC 源码根目录；</li><li>删除<code>/AppleALC/Resources</code>中多余文件夹，只留下你的声卡型号文件夹、<code>Pinconfigs.kext</code>以及四个<code>plist</code>文件，以<code>cx20751</code>这个声卡为例剩下如下文件</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-2.png" alt="ALC-2"></p><ul><li>然后打开计算器，显示为编程器</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-3.png" alt="ALC-3"></p><ul><li>打开你整理的<code>Codec</code>，找到<code>Vendor Id</code>，拷贝后面的字符串，在计算器选中十六进制，粘贴这个字符串</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-4.png" alt="ALC-4"></p><ul><li>然后选中十进制，就换转换成十进制形式</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-5.png" alt="ALC-5"></p><ul><li>拷贝这个十进制数，打开<code>/AppleALC/Resources/CX20751_2/Info.plist</code>(此处的<code>CX20751_2</code>需要换成你的声卡型号)，把<code>codecid</code>换成刚才拷贝的十进制数</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-6.png" alt="ALC-6"></p><ul><li><p>保存退出，右键<code>PinConfigs.kext</code>显示包内容，打开里面的<code>Info.plist</code>，搜索刚才拷贝的十进制数，记下<code>LayoutID</code>数据，有几个记几个，都记下来，然后将<code>IOKitPersonalities-&gt;HDA Hardware Config Resource-&gt;HDAConfigDefault</code>中的其他型号删除，(为避免出错，这里的删除可以不操作，删除只是为了精简做出来的<code>AppleALC</code>)，保存退出。</p></li><li><p>然后双击打开 AppleALC 中的工程文件：</p></li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-7.png" alt="ALC-7"></p><ul><li>按图示操作</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-8.png" alt="ALC-8"></p><ul><li>点击右面的<code>export</code> </li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-9.png" alt="ALC-9"></p><ul><li>next </li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-10.png" alt="ALC-10"></p><ul><li><code>where</code>填上桌面，点<code>export</code>就生成<code>AppleALC</code>在桌面上了，一层一层打开它，将其中的<code>AppleALC.kext</code>放到<code>clover</code>驱动目录，注意之前下载的<code>Release</code>的<code>Lilu</code>也要放到<code>clover</code>驱动目录，最后不要忘了在<code>config</code>注入<code>LayoutID</code>：</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-11.png" alt="ALC-11"></p><ul><li>如图<code>Audio</code>处写上刚才记下的<code>LayoutID</code>，如果重启后你的声卡不能驱动，或者已驱动但是没有输入或输出，这时很有可能是该<code>LayoutID</code>对应的<code>configdata</code>数据有错误，这时就挨个尝试刚才记录的所有<code>ID</code>。</li></ul><p align="center"><b>至此， AppleALC 驱动声卡部分结束。</b></p><h2 id="关于解决耳机与内建输入的切换"><a href="#关于解决耳机与内建输入的切换" class="headerlink" title="关于解决耳机与内建输入的切换"></a>关于解决耳机与内建输入的切换</h2><blockquote><p>如果驱动工作完成后，声卡可以工作，但不能自动切换，请接着往下看</p></blockquote><ul><li>打开终端，输入 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/goodwin/ALCPlugFix</div></pre></td></tr></table></figure><ul><li>回车就将<code>ALCPlugFix</code>下载到了你的用户目录，打开此目录中的<code>ALCPlugFix</code>中的<code>main.m</code>下拉到最下方，注意这一部分：</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-12.png" alt="ALC-12"></p><ul><li>下载<a href="https://github.com/athlonreg/ALCPlugFix" target="_blank" rel="external"><code>had-tools</code></a>,将<code>codec</code>复制到<code>had-tools</code>目录，打开终端，<code>cd</code>到此目录，输入 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./widget_dump.sh</div></pre></td></tr></table></figure><ul><li>回车</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-13.png" alt="ALC-13"></p><ul><li>找到<code>nid = 0x19</code>和<code>nid = 0x1a</code>，这里我的<code>19</code>为 <code>line in</code>，<code>1a</code>为<code>mic in</code>，记录下最后两位，我的是<code>04</code>和<code>24</code>就这么改</li></ul><p><strong>PS: 这里需要设定的节点数据分别是<code>line in</code>和<code>mic in</code>，其他节点无效，思想就是捕获系统在不插耳机时由于其输入输出正常的这两个节点的输出值，然后就可以知道插耳机正常应该输出的值，进而利用<code>AppleALC</code>守护进程动态守护。如果出现插耳机正常，不插无效的情况，请按照这个思路反过来操作，思想都是一样的。其中图上的高亮处最上面一部分是默认情况，中间是耳机移除，最下面是耳机插入，请结合自身使用情况合理设定</strong></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-14.png" alt="ALC-14"></p><ul><li>保存退出，双击按照<code>AppleALC</code>的编译方法编译这个</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-15.png" alt="ALC-15"></p><ul><li>然后将生成的<code>ALCPlugFix</code>替换<code>alc_fix</code>中的<code>ALCPlugFix</code>，终端<code>cd</code>到<code>alc_fix</code>目录，执行 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./install.sh</div></pre></td></tr></table></figure><ul><li>耳机就可以自动切换了，三节点的朋友运气好的话杂音应该也解决了，这时插入耳机在执行 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./widget_dump.sh</div></pre></td></tr></table></figure><ul><li>就可以发现之前的<code>19</code>和<code>1a</code>后面的数据反过来了</li></ul><blockquote><p>其实这里的数据就是侦测耳机插拔状态，向系统发送相关指令来做到切换正常</p><p>需要设定的就是两个节点<code>Mic at Ext</code>(有时是<code>Line In</code>)和<code>Mic at In</code></p><p><code>Mic at Ext</code>(有时是<code>Line In</code>)表示线路输入，即<code>耳麦</code>，多为<code>0x19</code>节点</p><p><code>Mic at In</code>为内建输入</p></blockquote><ul><li><strong>PS: 如果<code>widget_dump.sh</code>脚本得不到想要的结果，请在<a href="https://bitbucket.org/RehabMan/os-x-eapd-codec-commander/downloads/" target="_blank" rel="external">点击这里</a>下载<code>CodecCommander</code>，将<code>Release</code>里面的<code>hda-verb</code>利用命令拷贝到<code>/usr/bin/</code></strong></li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/ALC-16.png" alt="ALC-16"></p><ul><li>如果不行重启一次应该就好了。</li></ul><p align="center"><b>至此，解决耳机与内建输入的切换部分结束。</b></p><h2 id="关于唤醒无声"><a href="#关于唤醒无声" class="headerlink" title="关于唤醒无声"></a>关于唤醒无声</h2><blockquote><p>可以先尝试下面两个驱动</p><p><a href="https://github.com/RehabMan/EAPD-Codec-Commander" target="_blank" rel="external">CodecCommander</a><br><a href="http://pan.baidu.com/s/1nuTUVS9" target="_blank" rel="external">EAPDFix</a> 提取密码:<code>w4yr</code></p></blockquote><p><strong>PS: 关于<code>CodecCommander</code>，可以<a href="https://github.com/RehabMan/EAPD-Codec-Commander/blob/master/README.md" target="_blank" rel="external">点击这里</a>参考<code>RehabMan</code>的说明</strong></p><blockquote><p>另外四叶草助手中也提供了相关选项(<code>ResetHDA</code>和<code>dartweak</code>)，但是本人没有亲自尝试，大家可以自行尝试这些组合：</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-09.png" alt="2017-11-06-09"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-06-10.png" alt="2017-11-06-10"></p><p align="center"><b>本人对唤醒无声研究不多，至此，解决耳机与内建输入的切换部分结束，欢迎补充。</b></p><h2 id="关于万能声卡"><a href="#关于万能声卡" class="headerlink" title="关于万能声卡"></a>关于万能声卡</h2><blockquote><p>很多人不喜欢万能声卡，说万能有杂音(但是<code>有一些人的AppleALC</code>也可能有杂音)，甚至说用万能声卡是不完美的表现，其实我认为不然，万能是一种很好的渠道，有不少人用万能声卡，他们的切换、输入甚至<code>HDMI</code>都能很好的输出，而且杂音也是可以减小的。</p><p>这里我给出官方的项目地址，有兴趣的可以试一下</p><p><a href="https://sourceforge.net/projects/voodoohda/" target="_blank" rel="external">https://sourceforge.net/projects/voodoohda/</a></p></blockquote><p><strong>PS: 需要注意的是有人用的是<code>VoodooHDA.pkg</code>安装的，这种情况需要将<code>AppleHDADisabler.kext</code>放到<code>Clover</code>的驱动目录来禁用<code>AppleHDA</code>，否则很有可能会造成<code>KP</code>五果，所以我建议直接用<code>kext</code>，让<code>Clover</code>注入器注入即可。</strong></p><h2 id="关于完整仿冒"><a href="#关于完整仿冒" class="headerlink" title="关于完整仿冒"></a>关于完整仿冒</h2><h3 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h3><blockquote><p>声卡型号众多，虽然<code>AppleALC</code>让数据更集中了，但还是有些声卡不在目前的<code>AppleALC</code>支持的列表里面，对于这种情况来说，我们只能完整制作仿冒声卡。</p><p>接下来以我的<code>CX20751</code>为例简述仿冒声卡制作过程。</p></blockquote><h3 id="完整制作仿冒声卡思路"><a href="#完整制作仿冒声卡思路" class="headerlink" title="完整制作仿冒声卡思路"></a>完整制作仿冒声卡思路</h3><ul><li>整理<code>Codec</code>，提取所有有效<code>Node</code>值</li><li>将整理出的所有<code>Node</code>的<code>Pin Default</code>值进行转换得出需要的值</li><li>根据某些规律或者规则得出<code>ConfigData</code></li><li><code>PathMap</code>的获取和整理</li></ul><h3 id="知识普及"><a href="#知识普及" class="headerlink" title="知识普及"></a>知识普及</h3><blockquote><p>每一个<code>Node</code>的<code>ConfigData</code>值都是由四个八位的字符串组成，这四个串的最后两位分别是一个八位的设定值的1 2、3 4、5 6、7 8位，这四个八位的字符串的设定规则分别是是<code>Address+Node+71C+1 2位设定值</code>、<code>Address+Node+71D+3 4位设定值</code>、<code>Address+Node+71E+5 6位设定值</code>、<code>Address+Node+71F+7 8位设定值</code>。</p><p>这里需要注意，有两个不同的八位被提及，其中一个八位(这八位每一位都有特定的含义，也是仿冒成功最关键的地方，在后面我称之为设定值)是被均分四份从而放到<code>ConfigData</code>的各个节点所对应的四个串的七八位</p><p>而这个八位的设定值每一位的含义如下：</p></blockquote><ul><li>第一位：代表节点设定值(Address)，一般不需要改变；</li><li>第二位：同组装置的优先顺序，一般为 0~3，不可出现字母；</li><li>第三位：插口颜色，笔记本忽略，不作处理；</li><li>第四位：插孔侦测，0为开启(外设基本为0)，1为关闭(内建基本为1)；</li><li>第五位：装置类型，笔记本忽略；</li><li>第六位：连接类型，圆口为1，内接为0，基本可以忽略；</li><li>第七位：代表是否有插孔及插孔位置0=外接，9=内建，耳机扬声器和耳麦均为外接；</li><li>第八位：代表插孔所在位置，0=内建，1=外接；</li></ul><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><h4 id="整理Codec，提取所有有效Node值"><a href="#整理Codec，提取所有有效Node值" class="headerlink" title="整理Codec，提取所有有效Node值"></a>整理<code>Codec</code>，提取所有有效<code>Node</code>值</h4><blockquote><p>与上面利用<code>AppleALC</code>的思路不同，这里我们需要提取的数据有设备描述、<code>Node</code>值和<code>Pin Default</code>值。具体提取方法上文已有说明，这里不再赘述，下面是我的<code>CX20751</code>提取的数据：</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-07-01.png" alt="2017-11-07-01"></p><h4 id="将整理出的所有Node的Pin-Default值进行转换修正得出需要的设定值"><a href="#将整理出的所有Node的Pin-Default值进行转换修正得出需要的设定值" class="headerlink" title="将整理出的所有Node的Pin Default值进行转换修正得出需要的设定值"></a>将整理出的所有<code>Node</code>的<code>Pin Default</code>值进行转换修正得出需要的设定值</h4><ul><li>对于<code>Pin Default</code>值，我们的处理方法为八位四分、二二逆置，例如<code>0x16</code>节点，首先得出<code>40 10 21 03</code>，同理得出：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">0x16: 40 10 21 03</div><div class="line">0x17: 10 01 17 90</div><div class="line">0x19: 30 10 A1 03</div><div class="line">0x1a: 20 01 A7 95</div></pre></td></tr></table></figure><blockquote><p>根据八位设定值的规则描述，对上面得出的设定值进行修正。</p><p>拿<code>0x16</code>为例，这是一个耳机扬声器节点。</p><p>第1、2、3位没什么好说的保持不变；<br>第4位插孔侦测，耳机设备属于外接设备，所以应当是0，这里是0不用动；<br>第5位装置类型笔记本忽略；<br>第6位连接类型，插口为圆口，所以是1，这里是1，保持不变；<br>第7位代表是否有插孔，耳机是外接设备，所以是0，这里是0，保持不变；<br>第8位插孔所在位置，耳机是外接设备，所以是1；</p><p>其他<code>Node</code>节点也是如此设定；</p><p>修正后的数据如下：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">0x16: 40 10 21 01</div><div class="line">0x17: 10 01 17 90</div><div class="line">0x19: 30 10 81 01</div><div class="line">0x1a: 20 01 A0 90</div></pre></td></tr></table></figure><h4 id="根据规律或者规则得出ConfigData"><a href="#根据规律或者规则得出ConfigData" class="headerlink" title="根据规律或者规则得出ConfigData"></a>根据规律或者规则得出<code>ConfigData</code></h4><blockquote><p>根据上面得出的设定值，我可以得出以下<code>ConfigData</code>值：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">01671C40 01671D10 01671E21 01671F01</div><div class="line">01771C10 01771D01 01771E17 01771F90</div><div class="line">01971C30 01971D10 01971E81 01971F01</div><div class="line">01a71C20 01a71D01 01a71EA0 01a71F90</div></pre></td></tr></table></figure><h4 id="PathMap的获取和整理"><a href="#PathMap的获取和整理" class="headerlink" title="PathMap的获取和整理"></a><code>PathMap</code>的获取和整理</h4><h2 id="Credit"><a href="#Credit" class="headerlink" title="Credit"></a>Credit</h2><p><a href="https://github.com/vit9696" target="_blank" rel="external">vit9696</a><br><a href="https://github.com/goodwin/ALCPlugFix" target="_blank" rel="external">goodwin</a><br><a href="https://github.com/RehabMan" target="_blank" rel="external">RehabMan</a><br><a href="https://github.com/Dolnor/EAPD-Codec-Commander" target="_blank" rel="external">Dolnor</a><br><a href="https://github.com/daliansky" target="_blank" rel="external">daliansky</a><br><a href="https://sourceforge.net/projects/voodoohda/" target="_blank" rel="external">VoodooHDA</a></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><blockquote><p>码字不易，如果觉得文章不错，欢迎打赏，你们的支持是我最大的动力。</p></blockquote>]]></content>
    
    <summary type="html">
    
      简单制作 AppleALC 驱动声卡并解决耳机、外放切换、麦克风无输入以及耳机杂音、唤醒无声等问题
    
    </summary>
    
      <category term="Hacintosh" scheme="http://yoursite.com/categories/Hacintosh/"/>
    
    
      <category term="黑苹果" scheme="http://yoursite.com/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Hacintosh" scheme="http://yoursite.com/tags/Hacintosh/"/>
    
  </entry>
  
  <entry>
    <title>基于 JSP 的网站博客系统</title>
    <link href="http://yoursite.com/2017/11/05/%E5%9F%BA%E4%BA%8E%20JSP%20%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2017/11/05/基于 JSP 实现的博客网站系统/</id>
    <published>2017-11-04T16:00:00.000Z</published>
    <updated>2017-11-05T14:15:05.897Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>在日新月异的今天，类似微博这种平台上庞大的信息量让我们找不到自己想要的知识，甚至越来越多的小孩子也加入了这种平台，反而被越来越多的广告信息和毫无营养的东西影响，这让我们无法忍受；</p><p>除此以外，一些静态博客平台例如<code>hexo</code>搭建出来的博客站点虽然不错，但是庞大的知识量也令人头疼；</p><p>鉴于此，本站希望保留博客系统最核心的功能，并省去庞大的工作才能搭建的站点，实现最经典的网站博客系统。</p><p>尊重别人劳动成果，转载请注明来源。</p></blockquote><h2 id="系统实现"><a href="#系统实现" class="headerlink" title="系统实现"></a>系统实现</h2><ul><li>本网站基于<code>JSP</code>实现。</li><li>主要实现博主的日常生活中博文发表、博文浏览、博文和留言板管理以及后台管理。</li><li>实现用户的注册登录(支持第三方登录接口)、博文浏览(支持收藏、转发、评论以及打赏)和留言板留言。</li><li>在博文的发表中实现支持<code>MarkDown</code>文本编辑器在线编辑。</li><li>涉及<code>Web</code>前端、<code>JQuery</code>、 <code>BootStrap+</code>、 <code>JavaScript</code>等实现页面的制作，<code>MySQL</code>实现数据库操作(包括常见的增删查改等)</li></ul><h2 id="本站主要功能脑图如下"><a href="#本站主要功能脑图如下" class="headerlink" title="本站主要功能脑图如下"></a>本站主要功能脑图如下</h2><p><strong>备注：会持续更新</strong></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-11-05-01-1.png" alt="2017-11-05-01"></p><h2 id="关于其他知识创新的使用"><a href="#关于其他知识创新的使用" class="headerlink" title="关于其他知识创新的使用"></a>关于其他知识创新的使用</h2><blockquote><p>在做这个网站的过程中，以不影响网站浏览为前提，尽量使用较多的新技术，将本站做成更适合年轻一代人使用的博客站点系统。</p><p>为体现创新知识的使用，本站的开发文档将会放到博客主站的首页，相关文件也会放到我本人的<a href="https://github.com/athlonreg/Blog-JSP-MySQL" target="_blank" rel="external"><code>GitHub</code>仓库</a>。</p></blockquote><h2 id="关于更新"><a href="#关于更新" class="headerlink" title="关于更新"></a>关于更新</h2><blockquote><p>如果对此项目有兴趣的朋友有更好的建议或者希望加入的经典功能，可以<a href="https://github.com/athlonreg/Blog-JSP-MySQL" target="_blank" rel="external">点击这里</a>来给我留言，我会酌情添加更新站点，做出适合更多人用的博客系统。</p></blockquote>]]></content>
    
    <summary type="html">
    
      基于 JSP 的网站博客系统
    
    </summary>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
    
      <category term="博客系统" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="网站" scheme="http://yoursite.com/tags/%E7%BD%91%E7%AB%99/"/>
    
      <category term="JSP" scheme="http://yoursite.com/tags/JSP/"/>
    
      <category term="Blog" scheme="http://yoursite.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>将 NetBeans 的项目导入 MyEclipse 并减少错误与乱码现象</title>
    <link href="http://yoursite.com/2017/10/30/%E5%B0%86%20NetBeans%20%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5%20MyEclipse%20%E5%B9%B6%E5%87%8F%E5%B0%91%E9%94%99%E8%AF%AF%E4%B8%8E%E4%B9%B1%E7%A0%81%E7%8E%B0%E8%B1%A1/"/>
    <id>http://yoursite.com/2017/10/30/将 NetBeans 的项目导入 MyEclipse 并减少错误与乱码现象/</id>
    <published>2017-10-30T08:03:27.000Z</published>
    <updated>2017-11-01T03:06:28.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>最近，在一次网络编程课中，实验室的 <code>PC</code> 机有好多 <code>NetBeans</code> 打不开，经过一节课的摸索和董老师的帮助，终于找到一种方法将 <code>NetBeans</code> 写的项目导入 <code>MyEclipse</code> 中，并且可以减少很多错误以及乱码的情况出现</p><h3 id="进入主题"><a href="#进入主题" class="headerlink" title="进入主题"></a>进入主题</h3><blockquote><p>将 <code>NetBeans</code> 写的项目导入 <code>MyEclipse</code> 中的时候最常见的错误有以下三种：</p></blockquote><ul><li>在 <code>NetBeans</code> 中如果一条语句过长会有自动换行的情况，但在 <code>MyEclipse</code> 中并不能识别这种换行，于是像 <code>try-catch</code> 和 <code>if</code> 语句这种代码往往在导入工程之后跑到了注释后面，造成语法错误；</li><li><code>MyEclipse</code> 默认编码方式为 <code>GBK</code>,所以将 <code>NetBeans</code> 写的项目导入 <code>MyEclipse</code> 中的时候，项目代码里面的中文注释将会出现乱码；</li><li>如果 <code>NetBeans</code> 中的 <code>Java</code> 代码在一个自己建的 <code>package</code> 下，会出现很多需要将代码移动到这个 <code>package</code> 下的错误。</li></ul><h3 id="针对这些常见的情况，可以找到下面一种方法进行导入操作"><a href="#针对这些常见的情况，可以找到下面一种方法进行导入操作" class="headerlink" title="针对这些常见的情况，可以找到下面一种方法进行导入操作"></a>针对这些常见的情况，可以找到下面一种方法进行导入操作</h3><ul><li>在 <code>MyEclipse</code> 新建一个 <code>Java Project</code>；</li><li>右键这个 <code>Project</code> -&gt; 属性 -&gt; Text file encoding，将编码方式设置为 <code>UTF-8</code>；</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-05.png" alt="2017-10-30-05"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-04.png" alt="2017-10-30-04"></p><ul><li>展开这个 <code>Project</code>，右键其下面的 <code>src</code> 包，新建一个 <code>Package</code>，这里我用 <code>cn.edu.ldu</code> 来表示；</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-06.png" alt="2017-10-30-06"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-07.png" alt="2017-10-30-07"></p><ul><li>右键新建的 <code>cn.edu.ldu</code> 包 -&gt; Import -&gt; General -&gt; File System -&gt; Next，在 <code>From directory</code> 中选择要导入的项目，然后在弹出的对话框中勾选这个项目，选择 <code>Finish</code> 就可以了。</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-01.png" alt="2017-10-30-01"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-02.png" alt="2017-10-30-02"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-03.png" alt="2017-10-30-03"></p><ul><li>操作完成之后只剩下一些内部包的导入工作需要额外操作，其余均比较完美</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-08.png" alt="2017-10-30-08"></p><ul><li>运行结果也很好</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-30-09.png" alt="2017-10-30-09"></p><ul><li>大家快去试一下吧</li></ul><h3 id="收工咯"><a href="#收工咯" class="headerlink" title="收工咯"></a>收工咯</h3>]]></content>
    
    <summary type="html">
    
      将 NetBeans 的项目导入 MyEclipse 并减少错误与乱码现象
    
    </summary>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
    
      <category term="NetBeans" scheme="http://yoursite.com/tags/NetBeans/"/>
    
      <category term="MyEclipse" scheme="http://yoursite.com/tags/MyEclipse/"/>
    
  </entry>
  
  <entry>
    <title>实现 MAC 原生读写 NTFS 分区</title>
    <link href="http://yoursite.com/2017/10/27/%E5%AE%9E%E7%8E%B0%20MAC%20%E5%8E%9F%E7%94%9F%E8%AF%BB%E5%86%99%20NTFS%20%E5%88%86%E5%8C%BA/"/>
    <id>http://yoursite.com/2017/10/27/实现 MAC 原生读写 NTFS 分区/</id>
    <published>2017-10-26T16:00:00.000Z</published>
    <updated>2017-10-27T05:12:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>实现 MAC 原生读写 NTFS 分区</strong></p><blockquote><p>打开终端，输入命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ diskutil list</div></pre></td></tr></table></figure><blockquote><p>输入命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo vim /etc/fstab</div></pre></td></tr></table></figure><blockquote><p>编辑内容如下</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LABEL=Win\040Ntfs\040Drive none ntfs rw,auto,nobrowse</div></pre></td></tr></table></figure><blockquote><p>注意</p></blockquote><p><strong><code>Win\040Ntfs\040Drive</code> 这串字符中<code>\040</code>代表空格，<code>Win\040Ntfs\040Drive</code> 这一串出现在<code>diskutil list</code>那个屏幕里面，比如下图就是<code>HD-E1</code></strong></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-27-01.png" alt="2017-10-27-01"></p><blockquote><p>最后一步</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo ln -s /Volumes ~/Desktop/Volumes</div></pre></td></tr></table></figure><p><strong>Credit</strong></p><blockquote><p>转自<a href="https://www.waitsun.com" target="_blank" rel="external">爱情守望者</a></p><p>转载请注明<a href="https://www.waitsun.com/aboutus/help" target="_blank" rel="external">原帖地址</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      实现 MAC 原生读写 NTFS 分区
    
    </summary>
    
      <category term="Hacintosh" scheme="http://yoursite.com/categories/Hacintosh/"/>
    
    
      <category term="黑苹果" scheme="http://yoursite.com/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Hacintosh" scheme="http://yoursite.com/tags/Hacintosh/"/>
    
      <category term="NTFS" scheme="http://yoursite.com/tags/NTFS/"/>
    
  </entry>
  
  <entry>
    <title>Change launchpad icon grid layout in your MAC</title>
    <link href="http://yoursite.com/2017/10/26/Change%20launchpad%20icon%20grid%20layout%20in%20your%20MAC/"/>
    <id>http://yoursite.com/2017/10/26/Change launchpad icon grid layout in your MAC/</id>
    <published>2017-10-26T01:32:26.000Z</published>
    <updated>2017-10-26T01:57:23.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="preface"><a href="#preface" class="headerlink" title="preface"></a>preface</h3><p>Launchpad is the quick application launcher available from the Mac OS X Dock and a keystroke that looks quite a bit like the Homescreen of iOS. By default, the Launchpad app grid usually displays icons in 7 rows and 5 columns of apps, but with a little adjustment from the command line of OS X you can switch and customize the Launchpad icon grid to any number of apps you’d like to see on the Mac.</p><p>This uses the command line and defaults strings to customize the Launchpad grid layout, if you’re not comfortable with Terminal you’re probably better off leaving this alone and enjoying the default Launchpad app icon grid. We’ll combine the commands into a single syntax string for ease of use first, but you can break them apart as we show you a bit further below.</p><h3 id="How-to-Adjust-the-Icon-Grid-Count-of-Launchpad-in-Mac-OS-X"><a href="#How-to-Adjust-the-Icon-Grid-Count-of-Launchpad-in-Mac-OS-X" class="headerlink" title="How to Adjust the Icon Grid Count of Launchpad in Mac OS X"></a>How to Adjust the Icon Grid Count of Launchpad in Mac OS X</h3><ul><li>Open the Terminal found in /Applications/Utilities/ and enter the following command syntax, replacing the X numbers for the appropriate columns and grid icon counts</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ defaults write com.apple.dock springboard-columns -int X;defaults write com.apple.dock springboard-rows -int X;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</div></pre></td></tr></table></figure><blockquote><p>It is:</p><p>$ defaults write com.apple.dock springboard-columns -int X;defaults write com.apple.dock springboard-rows -int X;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</p></blockquote><p>For example, to set the Launchpad grid to 6×7 you’d use the following syntax:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ defaults write com.apple.dock springboard-columns -int 7;defaults write com.apple.dock springboard-rows -int 6;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</div></pre></td></tr></table></figure><blockquote><p>It is:</p><p>$ defaults write com.apple.dock springboard-columns -int 7;defaults write com.apple.dock springboard-rows -int 6;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</p></blockquote><ul><li><p>Hit Return and wait for the Dock and Launchpad to refresh</p></li><li><p>Open Launchpad as usual to see the layout change</p></li></ul><blockquote><p>The settings change is immediate after the Dock refreshes:</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com//2017-10-26-09.png" alt="2017-10-26-09"></p><h3 id="How-to-return-to-the-default-setting"><a href="#How-to-return-to-the-default-setting" class="headerlink" title="How to return to the default setting"></a>How to return to the default setting</h3><p>If you want to return to the default setting, just change the column and row counts back to what yours was originally. The default on my MacBook Pro Retina display is a 5 x 7 grid, but yours may be different depending on screen size and screen resolution.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ defaults write com.apple.dock springboard-columns -int 7;defaults write com.apple.dock springboard-rows -int 5;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</div></pre></td></tr></table></figure><blockquote><p>It is:</p><p>$ defaults write com.apple.dock springboard-columns -int 7;defaults write com.apple.dock springboard-rows -int 5;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com//2017-10-26-10.png" alt="2017-10-26-10"></p><h4 id="The-commands-for-customizing-the-Launchpad-layout-can-also-be-split-apart-if-desired-like-so"><a href="#The-commands-for-customizing-the-Launchpad-layout-can-also-be-split-apart-if-desired-like-so" class="headerlink" title="The commands for customizing the Launchpad layout can also be split apart if desired like so:"></a><strong>The commands for customizing the Launchpad layout can also be split apart if desired like so:</strong></h4><p><strong>Set the Launchpad Column Icon Count</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ defaults write com.apple.dock springboard-columns -int 3</div></pre></td></tr></table></figure><p><strong>Set the Launchpad Row App Icon Count</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ defaults write com.apple.dock springboard-rows -int 4</div></pre></td></tr></table></figure><p><strong>Reset Launchpad</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ defaults write com.apple.dock ResetLaunchPad -bool TRUE;</div></pre></td></tr></table></figure><p><strong>Relaunch the Dock with killall</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ killall Dock</div></pre></td></tr></table></figure><h3 id="Credit"><a href="#Credit" class="headerlink" title="Credit:"></a>Credit:</h3><p>Original Source: <a href="http://osxdaily.com/2016/03/09/change-launchpad-icon-grid-layout-mac-os-x/" target="_blank" rel="external">OSXDaily</a></p>]]></content>
    
    <summary type="html">
    
      Change launchpad icon grid layout in your MAC
    
    </summary>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
    
      <category term="launchpad" scheme="http://yoursite.com/tags/launchpad/"/>
    
  </entry>
  
  <entry>
    <title>MAC 常用快捷键整理</title>
    <link href="http://yoursite.com/2017/10/26/MAC-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2017/10/26/MAC-常用快捷键整理/</id>
    <published>2017-10-26T00:14:21.000Z</published>
    <updated>2017-10-26T00:47:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote><p>苹果 Mac 系统常用快捷键有很多，但是很多童鞋对于这些 Mac 快捷键都不是很熟悉，今天小编为大家整理了一份 Mac 系统常用快捷键大全，大家快收藏起来吧!平时在使用 Mac 系统的时候可以提高不少工作效率哦!</p><p>本文转自 <a href="http://xclient.info/a/36952668-9577-8ec9-4412-111ae375fde7.html?_=905734269077aa284ba54b095a93d187" target="_blank" rel="external">Xclient.info</a>，转载请注明原出处</p></blockquote><h2 id="小普及"><a href="#小普及" class="headerlink" title="小普及"></a>小普及</h2><ul><li><p>Mac中主要有四个修饰键，分别是 Command，Control，Option 和 Shift。</p></li><li><p>这四个键分别有自己的图案，他们经常出现在Mac应用程序中的菜单栏里，方便你随时学习新的快捷键。</p></li></ul><blockquote><p>如下</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com//2017-10-26-01.png" alt="2017-10-26-01"></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="通用快捷键"><a href="#通用快捷键" class="headerlink" title="通用快捷键"></a>通用快捷键</h3><blockquote><p>Command 是 Mac 里最重要的修饰键，在大多数情况下相当于 Windows 下的 Ctrl，黑果通常是 Alt 键。</p></blockquote><ul><li>Command + Z 撤销。</li><li>Command + X 剪切。</li><li>Command + C 拷贝(Copy)。</li><li>Command + V 粘贴。</li><li>Command + A 全选(All)。</li><li>Command + S 保存(Save)。</li><li>Command + F 查找(Find)。</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com//2017-10-26-02.png" alt="2017-10-26-02"></p><h3 id="系统快捷键"><a href="#系统快捷键" class="headerlink" title="系统快捷键"></a>系统快捷键</h3><ul><li>Option 开机后立即按下，将显示启动管理器。</li><li>Command + R 开机后立即按下，可打开OS X 的恢复功能。</li><li>Command + Option + P + R 开机后立即按下，重置 NVRAM。有些时候电脑会出现些小问题，重置 NVRAM 是你除了重新启动，尝试修复的第一选择。</li><li>Command + Option + Control + Power 退出所有应用程序，允许你进行文稿储存，然后关机。</li><li>按住 Power 按钮 5 秒 强制 Mac 关机。</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com//2017-10-26-03.png" alt="2017-10-26-03"></p><h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3><ul><li>Command + Shift + 3 截取全部屏幕到文件。</li><li>Command + Shift + Control + 3 截取全部屏幕到剪贴板。</li><li>Command + Shift + 4 截取所选屏幕区域到一个文件，或按空格键仅捕捉一个窗口。</li><li>Command + Shift + Control + 4 截取所选屏幕区域到剪贴板，或按空格键仅捕捉一个窗口。</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com//2017-10-26-04.png" alt="2017-10-26-04"></p><h3 id="文件管理器"><a href="#文件管理器" class="headerlink" title="文件管理器"></a>文件管理器</h3><ul><li>Command + Shift + N (New) 新建文件夹。</li><li>Command + Shift + G (Go) 调出窗口，可输入绝对路径直达文件夹。</li><li>return 这个其实不算快捷键，点击文件，按下可重命名文件。</li><li>Command + O 打开所选项。在 Mac 里打开文件不像 Windows 里直接按 Enter。</li><li>Command + Option + V 作用相当于Windows里的文件剪切。在其它位置上对文件复制(Command-C)，在目的位置按下这个快捷键，文件将被剪切到此位置。</li><li>Command + ↑ 打开包含当前文件夹的文件夹，相当于 Windows 里的“向上”。</li><li>Command + Delete 将文件移至废纸篓。</li><li>Command + Shift + Delete 清倒废纸篓。</li><li>Space 快速查看选中的文件，也就是预览功能。</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com//2017-10-26-05.png" alt="2017-10-26-05"></p><h3 id="切换"><a href="#切换" class="headerlink" title="切换"></a>切换</h3><ul><li>Command + Tab 在应用程序间切换。</li><li>Command + Shift + Tab 在应用程序间切换(反向)。</li><li>Command + ~ 在各应用中的窗口间切换。</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com//2017-10-26-06.png" alt="2017-10-26-06"></p><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><ul><li>Command + L 光标直接跳至地址栏。</li><li>Control + Tab 转向下一个标签页。</li><li>Control + Shift + Tab 转向上一个标签页。</li><li>Command + ‘+’或’=’ 放大页面。</li><li>Command + ‘-‘ 缩小页面。</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com//2017-10-26-07.png" alt="2017-10-26-07"></p><h3 id="应用程序中"><a href="#应用程序中" class="headerlink" title="应用程序中"></a>应用程序中</h3><ul><li>Command + H 隐藏(Hide)当前正在运行的应用程序窗口。</li><li>Command + Option + H 隐藏(Hide)其他应用程序窗口。</li><li>Command + Q 退出(Quit)最前面的应用程序。</li><li>Command + Shift + Z 重做，也就是撤销的逆向操作。</li><li>Command + Tab 在打开的应用程序列表中转到下一个最近使用的应用程序，相当于 Windows 中(Alt+Tab)。</li><li>Command + Option + esc 打开“强制退出”窗口，如果有应用程序无响应，可在窗口列表中选择强制退出。</li></ul><h3 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h3><ul><li>Command + B 切换所选文字粗体(Bold)显示。</li><li>fn + Delete 相当于 PC 全尺寸键盘上的 Delete，也就是向后删除。</li><li>fn + ↑ 向上滚动一页(Page Up)。</li><li>fn + ↓ 向下滚动一页(Page Down)。</li><li>fn + ← 滚动至文稿开头(Home)。</li><li>fn + → 滚动至文稿末尾(End)。</li><li>Command + → 将光标移至当前行的行尾。</li><li>Command + ← 将光标移至当前行的行首。</li><li>Command + ↓ 将光标移至文稿末尾。</li><li>Command + ↑ 将光标移至文稿开头。</li><li>Option + → 将光标移至下一个单词的末尾。</li><li>Option + ← 将光标移至上一个单词的开头。</li><li>Control + A 移至行或段落的开头。</li></ul><h3 id="更多快捷键"><a href="#更多快捷键" class="headerlink" title="更多快捷键"></a>更多快捷键</h3><p>如果你还想学习更多快捷键，请点击这里查看<a href="https://support.apple.com/zh-cn/HT201236" target="_blank" rel="external">苹果官方的快捷键帮助文档</a>。</p>]]></content>
    
    <summary type="html">
    
      MAC 常用快捷键整理
    
    </summary>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
      <category term="快捷键" scheme="http://yoursite.com/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>Windows 10 开机自动连接宽带</title>
    <link href="http://yoursite.com/2017/10/15/Windows-10%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5%E5%AE%BD%E5%B8%A6/"/>
    <id>http://yoursite.com/2017/10/15/Windows-10开机自动连接宽带/</id>
    <published>2017-10-15T13:59:01.000Z</published>
    <updated>2017-10-15T14:19:23.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Windows 10 开机自动连接宽带</p></blockquote><h3 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h3><ul><li>首先右击我的电脑-&gt;管理-&gt;任务计划程序-&gt;任务计划程序</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-15-01.png" alt="2017-10-15-01"></p><ul><li>中间窗口空白处右键 -&gt; 创建基本任务</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-15-02.png" alt="2017-10-15-02"></p><ul><li>弹出的下列窗口名称处输入 PPPOE</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-15-03.png" alt="2017-10-15-03"></p><ul><li>继续选择 当用户登录时</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-15-04.png" alt="2017-10-15-04"></p><ul><li>选择 启动程序</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-15-05.png" alt="2017-10-15-05"></p><ul><li>在 程序或脚本 处按照以下格式输入你的本地宽带连接账号</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rasdial 宽带连接 宽带账号 宽带密码</div></pre></td></tr></table></figure><blockquote><p>比如我的则为</p><p>经网友反馈，发现图中“宽带连接”后少了一个空格，请大家自主添加</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-15-06.png" alt="2017-10-15-06"></p><ul><li>一路下一步直到完成</li></ul>]]></content>
    
    <summary type="html">
    
      开拓者开发团队启动会议
    
    </summary>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
    
      <category term="加密" scheme="http://yoursite.com/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Sync your hexo with several terminal</title>
    <link href="http://yoursite.com/2017/10/14/Sync-your-hexo-with-several-terminal/"/>
    <id>http://yoursite.com/2017/10/14/Sync-your-hexo-with-several-terminal/</id>
    <published>2017-10-14T15:35:54.000Z</published>
    <updated>2017-10-14T16:04:37.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Sync your hexo with several terminal<br>转载请注明<a href="https://blog.iamzhl.top/2017/10/14/Sync-your-hexo-with-several-terminal/" target="_blank" rel="external">原出处</a></p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>首先在 GitHub 建立一个分支用于存储 hexo 本地源文件</li></ul><h2 id="本地-hexo-源上到-GitHub"><a href="#本地-hexo-源上到-GitHub" class="headerlink" title="本地 hexo 源上到 GitHub"></a>本地 hexo 源上到 GitHub</h2><ul><li>在本地博客根目录下使用 git 指令上传项目到 GitHub 的 hexo 分支</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git init           </div><div class="line">$ git remote add origin 仓库地址    </div><div class="line">$ git checkout -b hexo     </div><div class="line">$ git add .       </div><div class="line">$ git commit -m &quot;&quot;        </div><div class="line">$ git push origin hexo</div></pre></td></tr></table></figure><hr><h2 id="其它设备同步"><a href="#其它设备同步" class="headerlink" title="其它设备同步"></a>其它设备同步</h2><h3 id="建立同步目录"><a href="#建立同步目录" class="headerlink" title="建立同步目录"></a>建立同步目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mkdir blog</div></pre></td></tr></table></figure><h3 id="同步-hexo-源"><a href="#同步-hexo-源" class="headerlink" title="同步 hexo 源"></a>同步 hexo 源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ cd blog/</div><div class="line">$ git init</div><div class="line">$ git remote add origin 仓库地址</div><div class="line">$ git pull -r origin hexo</div></pre></td></tr></table></figure><h3 id="本地搭建-hexo-环境"><a href="#本地搭建-hexo-环境" class="headerlink" title="本地搭建 hexo 环境"></a>本地搭建 hexo 环境</h3><ul><li>需要安装 Git 和 Node.js </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo --save</div><div class="line">$ npm install</div></pre></td></tr></table></figure><ul><li>第一次运行需要验证 GitHub 和 coding 账号 ( 取决于你用什么部署的 blog )</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.email &quot;you@example.com&quot;</div><div class="line">$ git config --global user.name &quot;Your Name&quot;</div></pre></td></tr></table></figure><hr><h2 id="完工"><a href="#完工" class="headerlink" title="完工"></a>完工</h2><ul><li>做完上面的步骤就可以在这一台设备继续发博文了</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ hexo new post &quot;新建博客名字&quot; </div><div class="line">$ hexo clean </div><div class="line">$ hexo g</div><div class="line">$ hexo d -g</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Sync your hexo with several terminal（对多设备之间 hexo 搭建的 blog 进行同步）
    
    </summary>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="同步" scheme="http://yoursite.com/tags/%E5%90%8C%E6%AD%A5/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Resolve short duration lag after wake and after login on haswell or broadwell</title>
    <link href="http://yoursite.com/2017/10/07/Resolve%20short%20duration%20lag%20after%20wake%20and%20after%20login%20on%20haswell%20or%20broadwell/"/>
    <id>http://yoursite.com/2017/10/07/Resolve short duration lag after wake and after login on haswell or broadwell/</id>
    <published>2017-10-06T19:06:04.000Z</published>
    <updated>2017-10-14T16:17:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><blockquote><p>本文来自 <a href="https://www.tonymacx86.com/threads/readme-common-some-unsolved-problems-in-10-12-sierra.202316/page-94#post-1485104" target="_blank" rel="external">tonymacx86.com</a><br>原作者 <a href="https://www.tonymacx86.com/members/rehabman.429483/" target="_blank" rel="external">RehabMan</a><br>转载请注明 <a href="https://blog.iamzhl.top/2017/10/07/Resolve%20short%20duration%20lag%20after%20wake%20and%20after%20login%20on%20haswell%20or%20broadwell/" target="_blank" rel="external">原出处</a></p></blockquote><h3 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h3><blockquote><p>在 macOS Sierra 10.12.4 中，有不少 Haswell 和 Broadwell 机器出现了一种情况，就是在开机后的登录界面会有大约 20s 的无响应延迟状态，这种情况在之前是没有出现的，如果你的机器恰好是这两个平台的一种并且出现了这种情况，那么请注意，你会需要对你的 config.plist 做一些调整，如下: </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Comment: 0x0a260006 9MB cursor bytes (vbo), 2 ports only (RehabMan)</div><div class="line">Find: &lt;0600260a 01030303 00000002 00003001 00006000&gt;</div><div class="line">Replace: &lt;0600260a 01030202 00000002 00003001 00009000&gt;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Comment: 0x0a260006 disable 0204 port, change 0105 DP port to 0204 HDMI (RehabMan)</div><div class="line">Find: &lt;01050900 00040000 87000000 02040900 00040000 87000000&gt;</div><div class="line">Replace: &lt;02040900 00080000 87000000 FF000000 01000000 40000000&gt;</div></pre></td></tr></table></figure><p>将这两个 patch 打到 config.plist -&gt; Kernel and Kext Patches -&gt; KextsToPatch 处，保存即可，如果你的机器是 Haswell 的 HD4600 并且上面的 patch 不能解决这个问题，请尝试放 AzulPatcher4600.kext 到 /EFI/CLOVER/Kexts/Other ，此项目 GitHub 地址: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://github.com/coderobe/AzulPatcher4600</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Resolve short duration lag after wake and after login on haswell or broadwell
    
    </summary>
    
      <category term="Hacintosh" scheme="http://yoursite.com/categories/Hacintosh/"/>
    
    
      <category term="黑苹果" scheme="http://yoursite.com/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="short duration lag" scheme="http://yoursite.com/tags/short-duration-lag/"/>
    
  </entry>
  
  <entry>
    <title>Disable the discrete GPU in laptop</title>
    <link href="http://yoursite.com/2017/10/04/Disable%20the%20discrete%20GPU%20in%20laptop/"/>
    <id>http://yoursite.com/2017/10/04/Disable the discrete GPU in laptop/</id>
    <published>2017-10-03T16:00:00.000Z</published>
    <updated>2017-10-19T01:17:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Disable the discrete GPU to fix “Window Server Service only ran for 0 seconds” in High Sierra</p></blockquote><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>最近我根据 RehabMan 的 hotpatch 添加了一些路径做了一个屏蔽独显得 hotpatch 来屏蔽独显解决一些升级 10.13 后因为 nv_disable 参数失效而卡在 Window Server Service only ran for 0 seconds 的错误，发现有些成功，有些失败。于是把我琢磨到的一种方法分享给大家！希望该帖子能帮助到各位！</p><blockquote><p>感谢：</p></blockquote><ul><li><p>PCBETA (远景论坛) <a href="http://bbs.pcbeta.com/viewthread-1760319-1-5.html" target="_blank" rel="external">yearjinheng 版主的帖子</a></p></li><li><p>tonymacx86.com <a href="https://www.tonymacx86.com/threads/fix-window-server-service-only-ran-for-0-seconds-with-dual-gpu.233092/" target="_blank" rel="external">Rehabman 的帖子</a></p></li><li><p>转载请注明 <a href="https://blog.iamzhl.top/2017/10/04/%E5%B1%8F%E8%94%BD%E7%8B%AC%E6%98%BE/" target="_blank" rel="external">原贴地址</a></p></li></ul><blockquote><p>屏蔽独显方法不一：</p></blockquote><ul><li>第一种：直接在 DSDT SSDT 上做修改</li><li>第二种：手动制作一个适合自己机器的 hotpatch 屏蔽独显达到屏蔽独显的作用</li></ul><h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><blockquote><p>本帖主要采用第二种方法，大致思路如下：</p></blockquote><ul><li>提取 ACPI 原始表单</li><li>反编译这些文件</li><li>搜索一个名为 _OFF 的方法</li><li>检查文件的结果以确定 _OFF 的路径</li><li>修改 RehabMan 的 hotpatch 加入自己的路径</li></ul><h3 id="提取-ACPI-原始表单并提取-OFF-路径"><a href="#提取-ACPI-原始表单并提取-OFF-路径" class="headerlink" title="提取 ACPI 原始表单并提取 _OFF 路径"></a>提取 ACPI 原始表单并提取 _OFF 路径</h3><ul><li>打开电脑进入四叶草引导界面，按下 F4 或者 FN+F4 即可提取原始表单到 /EFI/CLOVER/ACPI/origin ，然后进入 MAC 将 origin 拷贝到桌面删掉除 SSDT DSDT 之外的所有 aml 文件，打开终端：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ cd ~/Desktop/origin </div><div class="line">$ iasl -da -dl *.aml </div><div class="line">$ rm *.aml </div><div class="line">$ grep -l Method.*_OFF *.dsl</div></pre></td></tr></table></figure><ul><li>以我修改的一个机器为例，上一条命令得到的结果如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">DSDT.dsl</div><div class="line">SSDT-7.dsl</div><div class="line">SSDT-8.dsl</div><div class="line">SSDT-9.dsl</div></pre></td></tr></table></figure><ul><li>依次打开这四个表单搜索 _OFF ，找到一个类似于下面这个函数：</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-04-01.png" alt="2017-10-04-01"></p><ul><li>图片左下角的路径就是我们最终所需要的: </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">_SB.PCI0.RP05.PEGP</div></pre></td></tr></table></figure><h3 id="修改-RehabMan-的-hotpatch-添加这个路径"><a href="#修改-RehabMan-的-hotpatch-添加这个路径" class="headerlink" title="修改 RehabMan 的 hotpatch 添加这个路径"></a>修改 RehabMan 的 hotpatch 添加这个路径</h3><ul><li>首先去 RehanMan 的 GitHub 下载 hotpatch 包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://github.com/RehabMan/OS-X-Clover-Laptop-Config.git</div></pre></td></tr></table></figure><ul><li>我们只需要 SSDT-Disable_DGPU 这个文件，编译成 aml 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ iasl SSDT-Disable_DGPU.dsl</div></pre></td></tr></table></figure><ul><li>打开编译后得到的 aml 文件</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-04-02.png" alt="2017-10-04-02"></p><ul><li>按照这个格式添加自己的路径</li></ul><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-10-04-03.png" alt="2017-10-04-03"></p><ul><li>保存放到 /EFI/CLOVER/ACPI/patched </li></ul><h3 id="一个注意点"><a href="#一个注意点" class="headerlink" title="一个注意点"></a>一个注意点</h3><ul><li>如果在 Config.plist 中使用了 SortedOrder (通常 Clover 安装后默认没有设置)，需要在其内添加 SSDT-Disable_DGPU.aml 这一项。因为如果指定了 SortedOrder ，则 Clover 只加载其中指定的 SSDT 。如果没有出现在列表中,即使在 ACPI/patched 中，它也不会加载。</li></ul><h2 id="完工"><a href="#完工" class="headerlink" title="完工"></a>完工</h2>]]></content>
    
    <summary type="html">
    
      Disable the discrete GPU to fix &quot;Window Server Service only ran for 0 seconds&quot; in High Sierra
    
    </summary>
    
      <category term="Hacintosh" scheme="http://yoursite.com/categories/Hacintosh/"/>
    
    
      <category term="黑苹果" scheme="http://yoursite.com/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Hacintosh" scheme="http://yoursite.com/tags/Hacintosh/"/>
    
      <category term="Window Server Service only ran for 0 seconds" scheme="http://yoursite.com/tags/Window-Server-Service-only-ran-for-0-seconds/"/>
    
      <category term="Disable DGPU" scheme="http://yoursite.com/tags/Disable-DGPU/"/>
    
      <category term="屏蔽独显" scheme="http://yoursite.com/tags/%E5%B1%8F%E8%94%BD%E7%8B%AC%E6%98%BE/"/>
    
  </entry>
  
  <entry>
    <title>Sync the codes between native and remote by git</title>
    <link href="http://yoursite.com/2017/09/27/Sync%20the%20codes%20between%20native%20and%20remote%20by%20git/"/>
    <id>http://yoursite.com/2017/09/27/Sync the codes between native and remote by git/</id>
    <published>2017-09-27T14:54:26.000Z</published>
    <updated>2017-10-14T16:18:09.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Sync the codes between native and remote by git<br>转载请注明<a href="https://blog.iamzhl.top/2017/09/27/Sync%20the%20codes%20between%20native%20and%20remote%20by%20git/" target="_blank" rel="external">原出处</a></p></blockquote><h2 id="代码放到-git-仓库，然后本地修改同步至仓库，这在生活中是很常见的，下面是一个最简单的案例"><a href="#代码放到-git-仓库，然后本地修改同步至仓库，这在生活中是很常见的，下面是一个最简单的案例" class="headerlink" title="代码放到 git 仓库，然后本地修改同步至仓库，这在生活中是很常见的，下面是一个最简单的案例"></a>代码放到 git 仓库，然后本地修改同步至仓库，这在生活中是很常见的，下面是一个最简单的案例</h2><h3 id="远程仓库内容同步到本地仓库"><a href="#远程仓库内容同步到本地仓库" class="headerlink" title="远程仓库内容同步到本地仓库"></a>远程仓库内容同步到本地仓库</h3><blockquote><p>新建一个本地仓库用于后续工作</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cd ~/Desktop/</div><div class="line">$ mkdir test </div><div class="line">$ cd test</div></pre></td></tr></table></figure><blockquote><p>初始化这个本地目录</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git init</div></pre></td></tr></table></figure><blockquote><p>关联到远程仓库(以我新建的 Test 这个仓库为例)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git remote add origin https://github.com/athlonreg/Test.git</div></pre></td></tr></table></figure><blockquote><p>合并远程仓库的文件到本地</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git pull --rebase origin master</div></pre></td></tr></table></figure><hr><h3 id="修改本地仓库并推送到远程仓库"><a href="#修改本地仓库并推送到远程仓库" class="headerlink" title="修改本地仓库并推送到远程仓库"></a>修改本地仓库并推送到远程仓库</h3><blockquote><p>对本地仓库的一些修改</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir inner </div><div class="line">$ cd inner </div><div class="line">$ touch a.txt</div></pre></td></tr></table></figure><h4 id="现在将我新建的-inner-目录和-a-txt-文档推送到远程仓库"><a href="#现在将我新建的-inner-目录和-a-txt-文档推送到远程仓库" class="headerlink" title="现在将我新建的 inner 目录和 a.txt 文档推送到远程仓库"></a>现在将我新建的 inner 目录和 a.txt 文档推送到远程仓库</h4><blockquote><p>git add 命令添加新建目录与文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add .</div></pre></td></tr></table></figure><blockquote><p>git commit 提交修改，引号内为修改的概要</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m &quot;add some files&quot;</div></pre></td></tr></table></figure><blockquote><p>这里会提示配置用户身份(两条命令的引号内分别为你 github 账号绑定的邮箱和用户名)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.email &quot;15563836030@163.com&quot; </div><div class="line">$ git config --global user.name &quot;athlonreg&quot;</div></pre></td></tr></table></figure><blockquote><p>这是继续提交修改就可以了</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m &quot;add some files&quot;</div></pre></td></tr></table></figure><blockquote><p>推送修改后的本地仓库到远程仓库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push -u origin master</div></pre></td></tr></table></figure><blockquote><p>这时终端会让你输入你的 github 用户名和密码，根据提示输入完，就推送完成了，再去 github 网页端就发现仓库已经更新至和本地相同了。</p></blockquote><h3 id="Windows-用户安装好-git-可以利用-git-bash-来操作"><a href="#Windows-用户安装好-git-可以利用-git-bash-来操作" class="headerlink" title="Windows 用户安装好 git 可以利用 git bash 来操作"></a>Windows 用户安装好 git 可以利用 git bash 来操作</h3><blockquote><p>下面是我在 Windows 下利用 git bash 工具的一些截图，大家可以作参考</p></blockquote><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-09-27-2017-09-27-03.PNG" alt="2017-09-27"></p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-09-27-2017-09-27-04.PNG" alt="2017-09-27-04"></p>]]></content>
    
    <summary type="html">
    
      Sync the codes between native and remote by git (利用 git 实现本地和远程之间代码的同步)
    
    </summary>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="同步" scheme="http://yoursite.com/tags/%E5%90%8C%E6%AD%A5/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>How to build Clover from source</title>
    <link href="http://yoursite.com/2017/09/20/How-to-build-Clover-from-source/"/>
    <id>http://yoursite.com/2017/09/20/How-to-build-Clover-from-source/</id>
    <published>2017-09-20T12:30:51.000Z</published>
    <updated>2017-09-20T12:43:35.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>How to build Clover from source<br><a href="https://clover-wiki.zetam.org/Development#Compiling-from-source" target="_blank" rel="external">原出处</a></p></blockquote><h1 id="Compiling-from-source"><a href="#Compiling-from-source" class="headerlink" title="Compiling from source"></a>Compiling from source</h1><p>To compile a project you need a compiler and libraries - it’s a truism. What needs to be done in this particular case? The libraries are covered by the EDK2 environment from <a href="http://sourceforge.net/projects/edk2" target="_blank" rel="external">http://sourceforge.net/projects/edk2</a>. Due to the fact that this project was created for a Hackintosh, focus will be set on the compilation process under Mac OS X. Nevertheless, this is not the only option. EDK2 was designed for a compilation on different systems like Windows, Linux, and others. Visual Studio 20xx is needed for Windows, Xcode Command Line Tools for Mac OS X, and gcc for Linux. The pre-bundled software are still not enough for a successful compilation under Mac. The recommendation is - same as for Linux - to build a new version of gcc using the script “buildgcc.sh” from Clover’s directory. Why not clang? - It still does not produce any working code. Let’s not give up hope, though.</p><p>Now to the real deal. A reader who came to this section cannot be a simple user by definition and thus it is not necessary to explain how to use a terminal.</p><h2 id="How-to-build"><a href="#How-to-build" class="headerlink" title="How to build"></a>How to build</h2><h3 id="Download-the-source-code-and-prepare-the-environment"><a href="#Download-the-source-code-and-prepare-the-environment" class="headerlink" title="Download the source code and prepare the environment"></a>Download the source code and prepare the environment</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mkdir src</div><div class="line">cd src</div><div class="line">svn co  -r 18198 svn://svn.code.sf.net/p/edk2/code/trunk/edk2 edk2</div><div class="line">cd edk2</div><div class="line">make -C BaseTools/Source/C</div><div class="line">svn co svn://svn.code.sf.net/p/cloverefiboot/code Clover </div><div class="line">cd Clover</div></pre></td></tr></table></figure><h3 id="Building-the-compiler-gcc-4-9-This-is-the-compiler-that-can-do-LTO-optimization"><a href="#Building-the-compiler-gcc-4-9-This-is-the-compiler-that-can-do-LTO-optimization" class="headerlink" title="Building the compiler. gcc-4.9. This is the compiler that can do LTO optimization."></a>Building the compiler. gcc-4.9. This is the compiler that can do LTO optimization.</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./buildgettext.sh</div><div class="line">./buildgcc-4.9.sh </div><div class="line">./buildnasm.sh</div></pre></td></tr></table></figure><h3 id="Adapting-the-EDK2-environment-to-our-needs"><a href="#Adapting-the-EDK2-environment-to-our-needs" class="headerlink" title="Adapting the EDK2 environment to our needs"></a>Adapting the EDK2 environment to our needs</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./edksetup.sh </div><div class="line">cp -R Clover/Patches_for_EDK2/* ./</div></pre></td></tr></table></figure><h2 id="How-to-update"><a href="#How-to-update" class="headerlink" title="How to update"></a>How to update</h2><h3 id="In-the-case-you-already-did-all-these-steps-and-just-want-to-update-Clover-then-no-need-to-repeat-this-steps-Just-do"><a href="#In-the-case-you-already-did-all-these-steps-and-just-want-to-update-Clover-then-no-need-to-repeat-this-steps-Just-do" class="headerlink" title="In the case you already did all these steps and just want to update Clover then no need to repeat this steps. Just do:"></a>In the case you already did all these steps and just want to update Clover then no need to repeat this steps. Just do:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd Clover</div><div class="line">svn up</div></pre></td></tr></table></figure><h3 id="Now-it-is-possible-to-build-CloverEFI-For-example-like-this"><a href="#Now-it-is-possible-to-build-CloverEFI-For-example-like-this" class="headerlink" title="Now it is possible to build CloverEFI. For example like this:"></a>Now it is possible to build CloverEFI. For example like this:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./ebuild.sh</div><div class="line">./ebuild.sh -mc</div><div class="line">./ebuild.sh --ia32</div></pre></td></tr></table></figure><blockquote><p>Other compilation scripts are available and usually they are documented. Look, choose and decide for yourself, which one you want to use.</p></blockquote><h3 id="Small-note-HFSPlus-efi-is-not-available-in-the-repository-There-are-two-options-You-can-find-it-somewhere-else-or-change-the-project-definition-files-fdf-to-use-the-open-driver-VboxHfs-instead-of-the-private-one-It-is-a-bit-slower-and-has-some-downsides-that-will-probably-be-corrected-in-future-but-it-is-functional-Change"><a href="#Small-note-HFSPlus-efi-is-not-available-in-the-repository-There-are-two-options-You-can-find-it-somewhere-else-or-change-the-project-definition-files-fdf-to-use-the-open-driver-VboxHfs-instead-of-the-private-one-It-is-a-bit-slower-and-has-some-downsides-that-will-probably-be-corrected-in-future-but-it-is-functional-Change" class="headerlink" title="Small note: HFSPlus.efi is not available in the repository. There are two options: You can find it somewhere else or change the project definition files .fdf to use the open driver VboxHfs instead of the private one. It is a bit slower and has some downsides that will probably be corrected in future, but it is functional. Change:"></a>Small note: HFSPlus.efi is not available in the repository. There are two options: You can find it somewhere else or change the project definition files .fdf to use the open driver VboxHfs instead of the private one. It is a bit slower and has some downsides that will probably be corrected in future, but it is functional. Change:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># foreign file system support</div><div class="line">#INF  Clover/VBoxFsDxe/VBoxHfs.inf</div><div class="line">INF  RuleOverride=BINARY Clover/HFSPlus/HFSPlus.inf</div></pre></td></tr></table></figure><p>to:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># foreign file system support</div><div class="line">INF  Clover/VBoxFsDxe/VBoxHfs.inf</div><div class="line">#INF  RuleOverride=BINARY Clover/HFSPlus/HFSPlus.inf</div></pre></td></tr></table></figure><h3 id="This-project-does-not-stand-still-and-that-is-why-this-instruction-may-become-obsolete-because-of-some-small-change-This-project-is-for-people-who-think-and-for-those-who-can-figure-out-what-is-wrong-and-what-to-do"><a href="#This-project-does-not-stand-still-and-that-is-why-this-instruction-may-become-obsolete-because-of-some-small-change-This-project-is-for-people-who-think-and-for-those-who-can-figure-out-what-is-wrong-and-what-to-do" class="headerlink" title="This project does not stand still and that is why this instruction may become obsolete because of some small change. This project is for people who think and for those who can figure out what is wrong and what to do."></a>This project does not stand still and that is why this instruction may become obsolete because of some small change. This project is for people who think and for those who can figure out what is wrong and what to do.</h3><h3 id="Building-the-installer-package"><a href="#Building-the-installer-package" class="headerlink" title="Building the installer package"></a>Building the installer package</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd ~/src/edk2/Clover/CloverPackage/</div><div class="line">./makepkg</div><div class="line">./makeiso</div></pre></td></tr></table></figure><blockquote><p>That’s all! Some steps can be left out if you do this process repeatedly. For example you can issue an “svn up” instead of re-downloading the whole project one more time, exclude the 32-bit compilation process and skip compiling. New users can use automated scripts CloverGrower and its Pro version, however they should think about just using the pre-made installer package first.<br>And now, as everything is ready, you can do the installation.</p></blockquote>]]></content>
    
    <summary type="html">
    
      How to build Clover from source
    
    </summary>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
    
      <category term="Clover" scheme="http://yoursite.com/tags/Clover/"/>
    
  </entry>
  
  <entry>
    <title>开拓者开发团队启动会议</title>
    <link href="http://yoursite.com/2017/09/19/%E5%BC%80%E6%8B%93%E8%80%85%E5%BC%80%E5%8F%91%E5%9B%A2%E9%98%9F%E5%90%AF%E5%8A%A8%E4%BC%9A%E8%AE%AE/"/>
    <id>http://yoursite.com/2017/09/19/开拓者开发团队启动会议/</id>
    <published>2017-09-19T11:58:18.000Z</published>
    <updated>2017-09-19T12:25:03.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>开拓者开发团队启动会议</p></blockquote><h1 id="团队启动会议"><a href="#团队启动会议" class="headerlink" title="团队启动会议"></a>团队启动会议</h1><h2 id="开拓者开发团队工作章程"><a href="#开拓者开发团队工作章程" class="headerlink" title="开拓者开发团队工作章程"></a>开拓者开发团队工作章程</h2><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><p>1、开拓者开发团队组员：团队由孙永辉，张海陆，罗中运组成，其中罗中运担任团队组长。<br>2、团队宗旨：开发中进步，进步中开发。</p><h3 id="团队开发"><a href="#团队开发" class="headerlink" title="团队开发"></a>团队开发</h3><p>1、由于组内成员为舍友关系，每周周二晚上和周末为开发时间，地点在宿舍和图书馆，以便随时分享个人成果为团队作积极贡献。<br>2、每周二晚上开始团队开发工作前的半个小时召开团队例会，总结上周成果并确定本周任务，各成员简述遇到的开发困难和开发心得，并对项目的开发提出切合实际的想法，最后由组长总结例会内容，制定每周开发计划。</p><h3 id="团队管理"><a href="#团队管理" class="headerlink" title="团队管理"></a>团队管理</h3><p>1、所有团队成员必须参加每次的团队例会，每次的例会计划由组长提前一天通知，如有意外情况需要调整计划，组长务必提前通知。因特殊情况不能参加例会的需要向组长请假。<br>2、为了提高团队的开发积极性和开发效率，所有成员应做好自己的任务，不许迟到早退。<br>3、团队成员应当具有自学和互学的能力和素质，团队之间提倡交流，综合提高团队成员的综合素质，进而使团队成员共同进步。<br>4、组长应积极与老师进行交流，将项目的要求理解到位，并在团队遇到开发困难时主动向老师寻求帮助。<br>5、每周的团体例会应当简短精悍，组长通知后团队成员应当事先认真准备。会议中应当认真做会议内容整理，确保每次会议的意义所在。</p><h3 id="团队建设"><a href="#团队建设" class="headerlink" title="团队建设"></a>团队建设</h3><p>1、为了保证团队成员身体健康，每名组员每周至少三次参加体育锻炼，让自己时刻保持足够的精力进行团队共同建设。<br>2、团队之间要有足够的交流时间，积极分享学习成果和经验，促进团队的共同进步。<br>3、在每次阶段性目标达成之后，团队都要组织一次出游或者聚餐，提高团队的贡献积极性，由组长组织安排。</p>]]></content>
    
    <summary type="html">
    
      开拓者开发团队启动会议
    
    </summary>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="加密" scheme="http://yoursite.com/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>价牌翻转问题</title>
    <link href="http://yoursite.com/2017/09/18/%E4%BB%B7%E7%89%8C%E7%BF%BB%E8%BD%AC%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/09/18/价牌翻转问题/</id>
    <published>2017-09-17T16:00:00.000Z</published>
    <updated>2017-09-18T11:04:03.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>价牌翻转问题</p></blockquote><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-09-18-01-1.png" alt="2017-09-18-01"></p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>1、已知是一个四位数，那么共有1001-9999种情况；<br>2、一个数颠倒之后，数字顺序颠倒并且每个数字颠倒，例如1269颠倒之后就是6921；<br>3、0不能是第一位也不能是最后一位。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">#include&lt;stdio.h&gt;</div><div class="line">#include&lt;math.h&gt;</div><div class="line"></div><div class="line">int array[4]=&#123;0&#125;;</div><div class="line"></div><div class="line">int inverse(int a)&#123;//求一个数颠倒之后的结果 </div><div class="line">int b=0;</div><div class="line">int arr[4]=&#123;0&#125;;</div><div class="line"></div><div class="line">for(int i=0;i&lt;4;i++)&#123;</div><div class="line">arr[i]=(int)(a/pow(10,3-i))%10;</div><div class="line">if(arr[i]==9)</div><div class="line">b+=6*pow(10,i);</div><div class="line">else if(arr[i]==6)</div><div class="line">b+=9*pow(10,i);</div><div class="line">else</div><div class="line">b+=arr[i]*pow(10,i);</div><div class="line">&#125;</div><div class="line">return b;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main()&#123;</div><div class="line">int i,j;</div><div class="line">int k=0,l=0;</div><div class="line">int temp;</div><div class="line">int flag;</div><div class="line">int up[50]=&#123;0&#125;,down[50]=&#123;0&#125;;//分别存放赚钱和赔钱的价牌</div><div class="line"></div><div class="line">for(i=1001;i&lt;10000;i++)&#123;</div><div class="line">temp=i;</div><div class="line">flag=1;</div><div class="line">for(j=0;j&lt;4;j++)&#123;</div><div class="line">array[j]=(int)(temp/pow(10,3-j))%10;</div><div class="line"></div><div class="line">if(array[j]==3||array[j]==4||array[j]==7)&#123;//分割数字排除不能翻转的数字</div><div class="line">flag=0;</div><div class="line">break;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">if(flag)&#123;</div><div class="line"></div><div class="line">if(array[0]==0 || array[3]==0)//0不能位于第一位和最后一位 </div><div class="line">continue;</div><div class="line">if(inverse(i)-i&gt;800&amp;&amp;inverse(i)-i&lt;900)</div><div class="line">up[k++]=i;</div><div class="line">if(i-inverse(i)&gt;200&amp;&amp;i-inverse(i)&lt;300)</div><div class="line">down[l++]=i;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">for(i=0;i&lt;50;i++)&#123;//依次输出赚钱的原价，颠倒价、赚的钱、赔钱的原价、颠倒价、赔的钱</div><div class="line">for(j=0;j&lt;50;j++)&#123;</div><div class="line">if((inverse(up[i])-up[i])-(down[j]-inverse(down[j]))==558)&#123;</div><div class="line">printf(&quot;%d\t%d\t%d\t&quot;,up[i],inverse(up[i]),inverse(up[i])-up[i]);</div><div class="line">printf(&quot;%d\t%d\t%d\n&quot;,down[j],inverse(down[j]),down[j]-inverse(down[j]));</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>运行结果：</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-09-18-02-1.png" alt="2017-09-18-02"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;价牌翻转问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://ovef
      
    
    </summary>
    
      <category term="Arithmetics" scheme="http://yoursite.com/categories/Arithmetics/"/>
    
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="价牌翻转" scheme="http://yoursite.com/tags/%E4%BB%B7%E7%89%8C%E7%BF%BB%E8%BD%AC/"/>
    
  </entry>
  
  <entry>
    <title>派遣敢死队问题</title>
    <link href="http://yoursite.com/2017/09/18/%E6%B4%BE%E9%81%A3%E6%95%A2%E6%AD%BB%E9%98%9F%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/09/18/派遣敢死队问题/</id>
    <published>2017-09-17T16:00:00.000Z</published>
    <updated>2017-09-18T11:04:22.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>派遣敢死队问题</p></blockquote><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-09-18-03-1.png" alt="2017-09-18-03"></p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>1、首先将所有士兵直属上级的编号放于数组a；<br>2、每个人有两种选择，去和不去，用0和1表示，转换为二进制放于数组b；<br>3、最后判断每个士兵是不是与其直属上级同时执行任务，进而对count进行统计。 </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdio.h&gt; </div><div class="line">#include &lt;math.h&gt; </div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">int number;</div><div class="line">int count=0;</div><div class="line">int flag;</div><div class="line">scanf(&quot;%d&quot;,&amp;number);//派遣的人数 </div><div class="line"></div><div class="line">int i,j;</div><div class="line">int temp; </div><div class="line">int a[number],b[number];//a</div><div class="line">a[0]=0;//将军 </div><div class="line"></div><div class="line">for(i=1;i&lt;number;i++)&#123;</div><div class="line">scanf(&quot;%d&quot;,&amp;a[i]);//每个人的直属上级 </div><div class="line">&#125;</div><div class="line"></div><div class="line">for(i=1;i&lt;pow(2,number);i++)&#123;</div><div class="line">temp=i;</div><div class="line">for(j=0;j&lt;number;j++)&#123;</div><div class="line">//遍历所有情况 </div><div class="line">b[j]=temp%2;</div><div class="line">temp/=2;</div><div class="line">&#125;</div><div class="line"></div><div class="line">flag=1;</div><div class="line">for(j=1;j&lt;number;j++)&#123;</div><div class="line">//将军没有上级，不用判断</div><div class="line">if(b[j]==1&amp;&amp;b[a[j]-1]==1)&#123;</div><div class="line">//判断是否士兵和上级同时执行任务 </div><div class="line">//b[j]为编号为j+1的士兵去不去</div><div class="line">//b[a[j]-1]为编号为j+1的士兵的直接上级去不去</div><div class="line">flag=0;</div><div class="line">break;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">if(flag==1)</div><div class="line">count++;</div><div class="line">&#125;</div><div class="line"></div><div class="line">printf(&quot;%d\n&quot;,count);</div><div class="line">return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-09-18-04-1.png" alt="2017-09-18-04"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;派遣敢死队问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://ove
      
    
    </summary>
    
      <category term="Arithmetics" scheme="http://yoursite.com/categories/Arithmetics/"/>
    
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="派遣敢死队" scheme="http://yoursite.com/tags/%E6%B4%BE%E9%81%A3%E6%95%A2%E6%AD%BB%E9%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>警匪110问题</title>
    <link href="http://yoursite.com/2017/09/18/%E8%AD%A6%E5%8C%AA110%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/09/18/警匪110问题/</id>
    <published>2017-09-17T16:00:00.000Z</published>
    <updated>2017-09-18T14:35:59.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>警匪110问题</p></blockquote><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-09-18-05-1.png" alt="2017-09-18-05"></p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>1、一共九个数字，八个操作符；<br>2、每个操作符有三种情况，即留空、加或者减，分别用0、1和2表示；<br>3、共有 3^8 种情况，遍历每种情况判断输出；<br>4、需要注意的是留空和’+’、’-‘需要分开处理，因为留空之后需要将其前后的数据连在一起。<br>5、以12+34+56+7-8+9为例，给和sum赋初值为0，第一次循环操作符为留空，需要先加上第一位的1，然后进行这一次运算，即1x10+2，然后下一次循环操作符为+，需要计算的就是12+3，同理在3、4之间的空需要计算的是3x10+4，而不是（12+3）x10+4，所以需要一个临时变量来记录上次的操作数，还需要一个变量来记录上次的操作符将上次的结果进行统计处理，原因就在于我们无法确定下次的操作符是不是留空。<br>6、由于我们在统计和时，只有在下一次循环才能处理最后一个操作数，所以需要将9最后单独处理。 </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdio.h&gt; </div><div class="line">#include &lt;math.h&gt; </div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">int a[9]=&#123;1,2,3,4,5,6,7,8,9&#125;;</div><div class="line">int sum; </div><div class="line">int temp; </div><div class="line">int oper,lastoper;  </div><div class="line">    int number; </div><div class="line">    int i,j;</div><div class="line">    </div><div class="line">for(i=0;i&lt;pow(3,8);i++)  </div><div class="line">    &#123;  </div><div class="line">        sum=0; </div><div class="line">temp=1; </div><div class="line">lastoper=1;  </div><div class="line">        number=i;  </div><div class="line">        </div><div class="line">        for(j=1;j&lt;=8;j++)  </div><div class="line">        &#123;  //操作八次 </div><div class="line">            oper=number%3; </div><div class="line">number=number/3;  </div><div class="line">            </div><div class="line">if (!oper) </div><div class="line">temp=temp*10+a[j];  //留空单独处理 </div><div class="line"></div><div class="line">            if (oper==1) &#123;  //当前操作符 </div><div class="line">                if(lastoper==1)&#123; //前一次操作符 </div><div class="line">sum=sum+temp; </div><div class="line">temp=a[j];</div><div class="line">&#125;  </div><div class="line">                if(lastoper==2)&#123;</div><div class="line">sum=sum-temp; </div><div class="line">temp=a[j];</div><div class="line">&#125;  </div><div class="line">                lastoper=oper;  //更新上次操作符 </div><div class="line">            &#125;  </div><div class="line">            </div><div class="line">            if(oper==2)&#123;  </div><div class="line">                if(lastoper==1)&#123;</div><div class="line">sum=sum+temp; </div><div class="line">temp=a[j];</div><div class="line">&#125;  </div><div class="line">                if(lastoper==2)&#123;</div><div class="line">sum=sum-temp; </div><div class="line">temp=a[j];</div><div class="line">&#125;  </div><div class="line">                lastoper=oper;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">  </div><div class="line">        if(lastoper==1) //第九次操作单独处理 </div><div class="line">sum=sum+temp;  </div><div class="line">        if(lastoper==2) </div><div class="line">sum=sum-temp;     </div><div class="line">  </div><div class="line">        if(sum==110)  </div><div class="line">        &#123;  </div><div class="line">            number=i;  </div><div class="line">            for(j=1;j&lt;=8;j++)  </div><div class="line">            &#123;  </div><div class="line">                printf(&quot;%d&quot;,a[j-1]);  </div><div class="line">                oper=number%3; </div><div class="line">number=number/3;  </div><div class="line">                if(oper==1) </div><div class="line">printf(&quot;+&quot;);  </div><div class="line">                if(oper==2) </div><div class="line">printf(&quot;-&quot;);</div><div class="line">else</div><div class="line">continue;</div><div class="line">            &#125;             </div><div class="line">            printf(&quot;9\n&quot;);  </div><div class="line">        &#125;  </div><div class="line">    &#125;</div><div class="line">return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-09-18-06-1.png" alt="2017-09-18-06"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;警匪110问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://ove
      
    
    </summary>
    
      <category term="Arithmetics" scheme="http://yoursite.com/categories/Arithmetics/"/>
    
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="警匪110" scheme="http://yoursite.com/tags/%E8%AD%A6%E5%8C%AA110/"/>
    
  </entry>
  
  <entry>
    <title>Allow apps downloaded from anywhere on macOS</title>
    <link href="http://yoursite.com/2017/09/15/Allow%20apps%20downloaded%20from%20anywhere%20on%20macOS/"/>
    <id>http://yoursite.com/2017/09/15/Allow apps downloaded from anywhere on macOS/</id>
    <published>2017-09-15T13:16:31.000Z</published>
    <updated>2017-10-19T01:07:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>macOS 打开任何来源</p></blockquote><p>许多朋友升级到 macOS Sierra 后在”安全性与隐私”中找不到”任何来源”选项，这里我教给大家怎么打开”任何来源”。</p><p>打开终端，输入以下代码回车：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo spctl --master-disable</div></pre></td></tr></table></figure><p>会提示输入密码，根据提示输入密码回车之后就可以在”安全性与隐私”中打开”任何来源”选项了</p>]]></content>
    
    <summary type="html">
    
      Allow apps downloaded from anywhere on macOS.md
    
    </summary>
    
      <category term="Hacintosh" scheme="http://yoursite.com/categories/Hacintosh/"/>
    
    
      <category term="黑苹果" scheme="http://yoursite.com/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="终端" scheme="http://yoursite.com/tags/%E7%BB%88%E7%AB%AF/"/>
    
      <category term="Hacintosh" scheme="http://yoursite.com/tags/Hacintosh/"/>
    
      <category term="任何来源" scheme="http://yoursite.com/tags/%E4%BB%BB%E4%BD%95%E6%9D%A5%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>NexT使用详解</title>
    <link href="http://yoursite.com/2017/09/14/NexT%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2017/09/14/NexT使用详解/</id>
    <published>2017-09-14T11:04:36.000Z</published>
    <updated>2017-09-18T14:50:25.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>NexT基本使用<br>转自<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">官方说明文档</a></p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Hexo 是高效的静态站点生成框架，她基于 Node.js。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 标签插件 来快速的插入特定形式的内容。在这篇文章中，假定你已经成功安装了 Hexo，并使用 Hexo 提供的命令创建了一个站点。</p><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p><p>为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。</p><h2 id="安装-NexT"><a href="#安装-NexT" class="headerlink" title="安装 NexT"></a>安装 NexT</h2><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。具体到 NexT 来说，安装步骤如下。</p><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd your-hexo-site</div><div class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure></p><h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开站点配置文件， 找到 theme 字段，并将其值更改为 next。</p><blockquote><p>启用 NexT 主题</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: next</div></pre></td></tr></table></figure><h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>首先启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是 hexo s –debug 。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO  hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure><p>此时即可使用浏览器访问 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> ，检查站点是否正确运行。</p><p>成功安装并启用了 NexT 主题后。下一步我们将要更改一些主题的设定，包括个性化以及集成第三方服务。</p><h2 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h2><h3 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h3><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</div><div class="line">Mist - Muse 的紧凑版本，整洁有序的单栏外观</div><div class="line">Pisces - 双栏 Scheme，小家碧玉似的清新</div></pre></td></tr></table></figure><p>Scheme 的切换通过更改 主题配置文件，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。</p><blockquote><p>选择 Pisces Scheme</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#scheme: Muse</div><div class="line">#scheme: Mist</div><div class="line">scheme: Pisces</div></pre></td></tr></table></figure><h3 id="设置-语言"><a href="#设置-语言" class="headerlink" title="设置 语言"></a>设置 语言</h3><p>编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">language: zh-Hans</div></pre></td></tr></table></figure><p>目前 NexT 支持的语言如以下表格所示：</p><table><thead><tr><th>语言</th><th>代码</th><th>示例</th></tr></thead><tbody><tr><td>English</td><td>en</td><td>language: en</td></tr><tr><td>简体中文</td><td>zh-Hans</td><td>language: zh-Hans</td></tr><tr><td>Français</td><td>fr-FR</td><td>language: fr-FR</td></tr><tr><td>Português</td><td>pt</td><td>language: pt or language: pt-BR</td></tr><tr><td>繁體中文</td><td>zh-hk 或者 zh-tw</td><td>language: zh-hk</td></tr><tr><td>Русский язык</td><td>ru</td><td>language: ru</td></tr><tr><td>Deutsch</td><td>de</td><td>language: de</td></tr><tr><td>日本語</td><td>ja</td><td>language: ja</td></tr><tr><td>Indonesian</td><td>id</td><td>language: id</td></tr><tr><td>Korean</td><td>ko</td><td>language: ko</td></tr></tbody></table><h3 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h3><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 Font Awesome 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。</p><p>编辑 主题配置文件，修改以下内容：</p><p>设定菜单内容，对应的字段是 menu。 菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。</p><blockquote><p>菜单示例配置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  archives: /archives</div><div class="line">  #about: /about</div><div class="line">  #categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  #commonweal: /404.html</div></pre></td></tr></table></figure><blockquote><p>若你的站点运行在子目录中，请将链接前缀的 / 去掉</p></blockquote><p>NexT 默认的菜单项有</p><table><thead><tr><th>键值</th><th>设定值</th><th>显示文本</th></tr></thead><tbody><tr><td>home</td><td>home: /</td><td>主页</td></tr><tr><td>archives</td><td>archives: /archives</td><td>归档页</td></tr><tr><td>categories</td><td>categories: /categories</td><td>分类页</td></tr><tr><td>tags</td><td>tags: /tags</td><td>标签页</td></tr><tr><td>about</td><td>about: /about</td><td>关于页面</td></tr><tr><td>commonweal</td><td>commonweal: /404.html</td><td>公益 404</td></tr></tbody></table><p>2.设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 languages/{language}.yml （{language} 为你所使用的语言）。</p><p>以简体中文为例，若你需要添加一个菜单项，比如 something。那么就需要修改简体中文对应的翻译文件 languages/zh-Hans.yml，在 menu 字段下添加一项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: 首页</div><div class="line">  archives: 归档</div><div class="line">  categories: 分类</div><div class="line">  tags: 标签</div><div class="line">  about: 关于</div><div class="line">  search: 搜索</div><div class="line">  commonweal: 公益404</div><div class="line">  something: 有料</div></pre></td></tr></table></figure><p>3.设定菜单项的图标，对应的字段是 menu_icons。 此设定格式是 item name: icon name，其中 item name 与上一步所配置的菜单名字对应，icon name 是 Font Awesome 图标的 名字。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。</p><blockquote><p>菜单图标配置示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">menu_icons:</div><div class="line">  enable: true</div><div class="line">  # Icon Mapping.</div><div class="line">  home: home</div><div class="line">  about: user</div><div class="line">  categories: th</div><div class="line">  tags: tags</div><div class="line">  archives: archive</div><div class="line">  commonweal: heartbeat</div></pre></td></tr></table></figure><blockquote><p>在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的 Font Awesome 图标名字） 的情况下，NexT 将会使用 ? 作为图标。</p><p>请注意键值（如 home）的大小写要严格匹配</p></blockquote><h3 id="设置-侧栏"><a href="#设置-侧栏" class="headerlink" title="设置 侧栏"></a>设置 侧栏</h3><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改 主题配置文件 中的 sidebar 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</p><p>1.设置侧栏的位置，修改 sidebar.position 的值，支持的选项有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">left - 靠左放置</div><div class="line">right - 靠右放置</div></pre></td></tr></table></figure><blockquote><p>目前仅 Pisces Scheme 支持 position 配置。影响版本5.0.0及更低版本。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sidebar:</div><div class="line">  position: left</div></pre></td></tr></table></figure><p>2.设置侧栏显示的时机，修改 sidebar.display 的值，支持的选项有：</p><table><thead><tr><th style="text-align:center">post</th><th style="text-align:center">默认行为，在文章页面（拥有目录列表）时显示</th></tr></thead><tbody><tr><td style="text-align:center">always</td><td style="text-align:center">在所有页面中都显示</td></tr><tr><td style="text-align:center">hide</td><td style="text-align:center">在所有页面中都隐藏（可以手动展开）</td></tr><tr><td style="text-align:center">remove</td><td style="text-align:center">完全移除</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sidebar:</div><div class="line">  display: post</div></pre></td></tr></table></figure><blockquote><p>已知侧栏在 use motion: false 的情况下不会展示。 影响版本5.0.0及更低版本。</p></blockquote><h3 id="设置-头像"><a href="#设置-头像" class="headerlink" title="设置 头像"></a>设置 头像</h3><p>编辑 主题配置文件， 修改字段 avatar， 值设置成头像的链接地址。其中，头像的链接地址可以是：</p><table><thead><tr><th style="text-align:center">地址</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:center">完整的互联网URI</td><td style="text-align:center"><a href="http://example.com/avatar.png" target="_blank" rel="external">http://example.com/avatar.png</a></td></tr><tr><td style="text-align:center">站点内的地址</td><td style="text-align:center">将头像放置主题目录下的 source/uploads/ (新建 uploads 目录若不存在)，配置为：avatar: /uploads/avatar.png；或者 放置在 source/images/ 目录下，配置为：avatar: /images/avatar.png</td></tr></tbody></table><blockquote><p>头像设置示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">avatar: http://example.com/avatar.png</div></pre></td></tr></table></figure><h3 id="设置作者昵称"><a href="#设置作者昵称" class="headerlink" title="设置作者昵称"></a>设置作者昵称</h3><p>编辑站点配置文件， 设置 author 为你的昵称。</p><h3 id="站点描述"><a href="#站点描述" class="headerlink" title="站点描述"></a>站点描述</h3><p>编辑站点配置文件， 设置 description 字段为你的站点描述。站点描述可以是你喜欢的一句签名 : )</p><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><h3 id="设置-RSS"><a href="#设置-RSS" class="headerlink" title="设置 RSS"></a>设置 RSS</h3><p>NexT 中 RSS 有三个设置选项，满足特定的使用场景。 更改 主题配置文件，设定 rss 字段的值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">false： 禁用 RSS，不在页面上显示 RSS 连接。</div><div class="line">留空： 使用 Hexo 生成的 Feed 链接。 你可以需要先安装 hexo-generator-feed 插件。</div><div class="line">具体的链接地址：适用于已经烧制过 Feed 的情形。</div></pre></td></tr></table></figure><h3 id="添加「标签」页面"><a href="#添加「标签」页面" class="headerlink" title="添加「标签」页面"></a>添加「标签」页面</h3><p>新建「标签」页面，并在菜单中显示「标签」链接。「标签」页面将展示站点的所有标签，若你的所有文章都未包含标签，此页面将是空的。 底下代码是一篇包含标签的文章的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">title: 标签测试文章</div><div class="line">tags:</div><div class="line">  - Testing</div><div class="line">  - Another Tag</div><div class="line">---</div></pre></td></tr></table></figure><blockquote><p>请参阅 <a href="https://hexo.io/zh-cn/docs/front-matter.html#分类和标签" target="_blank" rel="external">Hexo 的分类与标签文档</a>，了解如何为文章添加标签或者分类。</p></blockquote><h4 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h4><p>在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 tags ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd your-hexo-site</div><div class="line">$ hexo new page tags</div></pre></td></tr></table></figure><h4 id="设置页面类型"><a href="#设置页面类型" class="headerlink" title="设置页面类型"></a>设置页面类型</h4><p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title: 标签</div><div class="line">date: 2014-12-22 12:39:04</div><div class="line">type: &quot;tags&quot;</div><div class="line">---</div></pre></td></tr></table></figure><h4 id="在菜单中添加链接。编辑-主题配置文件-，-添加-tags-到-menu-中，如下"><a href="#在菜单中添加链接。编辑-主题配置文件-，-添加-tags-到-menu-中，如下" class="headerlink" title="在菜单中添加链接。编辑 主题配置文件 ， 添加 tags 到 menu 中，如下:"></a>在菜单中添加链接。编辑 主题配置文件 ， 添加 tags 到 menu 中，如下:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  archives: /archives</div><div class="line">  tags: /tags</div></pre></td></tr></table></figure><blockquote><p>注意：如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如：</p><p>禁用评论示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">title: 标签</div><div class="line">date: 2014-12-22 12:39:04</div><div class="line">type: &quot;tags&quot;</div><div class="line">comments: false</div><div class="line">---</div></pre></td></tr></table></figure><h3 id="添加「分类」页面"><a href="#添加「分类」页面" class="headerlink" title="添加「分类」页面"></a>添加「分类」页面</h3><p>新建「分类」页面，并在菜单中显示「分类」链接。「分类」页面将展示站点的所有分类，若你的所有文章都未包含分类，此页面将是空的。 底下代码是一篇包含分类的文章的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">title: 分类测试文章</div><div class="line">categories: Testing</div><div class="line">---</div></pre></td></tr></table></figure><blockquote><p>请参阅 <a href="https://hexo.io/zh-cn/docs/front-matter.html#分类和标签" target="_blank" rel="external">Hexo 的分类与标签文档</a>，了解如何为文章添加标签或者分类。</p></blockquote><h4 id="新建页面-1"><a href="#新建页面-1" class="headerlink" title="新建页面"></a>新建页面</h4><p>在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 categories ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd your-hexo-site</div><div class="line">$ hexo new page categories</div></pre></td></tr></table></figure><h4 id="设置页面类型-1"><a href="#设置页面类型-1" class="headerlink" title="设置页面类型"></a>设置页面类型</h4><p>编辑刚新建的页面，将页面的 type 设置为 categories ，主题将自动为这个页面显示分类。页面内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title: 分类</div><div class="line">date: 2014-12-22 12:39:04</div><div class="line">type: &quot;categories&quot;</div><div class="line">---</div></pre></td></tr></table></figure><h4 id="修改菜单"><a href="#修改菜单" class="headerlink" title="修改菜单"></a>修改菜单</h4><p>在菜单中添加链接。编辑 主题配置文件 ， 添加 categories 到 menu 中，如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  archives: /archives</div><div class="line">  categories: /categories</div></pre></td></tr></table></figure><blockquote><p>注意：如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如：</p><p>禁用评论示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">title: 分类</div><div class="line">date: 2014-12-22 12:39:04</div><div class="line">type: &quot;categories&quot;</div><div class="line">comments: false</div><div class="line">---</div></pre></td></tr></table></figure><h3 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h3><blockquote><p>注意： 此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后</p></blockquote><p>为了解决 Google Fonts API 不稳定的问题，NexT 在 5.0.1 中引入此特性。 通过此特性，你可以指定所使用的字体库外链地址；与此同时，NexT 开放了 5 个特定范围的字体设定，他们是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">全局字体：定义的字体将在全站范围使用</div><div class="line">标题字体：文章内标题的字体（h1, h2, h3, h4, h5, h6）</div><div class="line">文章字体：文章所使用的字体</div><div class="line">Logo字体：Logo 所使用的字体</div><div class="line">代码字体： 代码块所使用的字体</div><div class="line">各项所指定的字体将作为首选字体，当他们不可用时会自动 Fallback 到 NexT 设定的基础字体组：</div><div class="line"></div><div class="line">非代码类字体：Fallback 到 &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif</div><div class="line">代码类字体： Fallback 到 consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, monospace</div></pre></td></tr></table></figure><p>另外，每一项都有一个额外的 external 属性，此属性用来控制是否使用外链字体库。 开放此属性方便你设定那些已经安装在系统中的字体，减少不必要的请求（请求大小）。</p><blockquote><p>配置示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">font:</div><div class="line">  enable: true</div><div class="line"></div><div class="line">  # 外链字体库地址，例如 //fonts.googleapis.com (默认值)</div><div class="line">  host:</div><div class="line"></div><div class="line">  # 全局字体，应用在 body 元素上</div><div class="line">  global:</div><div class="line">    external: true</div><div class="line">    family: Monda</div><div class="line"></div><div class="line">  # 标题字体 (h1, h2, h3, h4, h5, h6)</div><div class="line">  headings:</div><div class="line">    external: true</div><div class="line">    family: Roboto Slab</div><div class="line"></div><div class="line">  # 文章字体</div><div class="line">  posts:</div><div class="line">    external: true</div><div class="line">    family:</div><div class="line"></div><div class="line">  # Logo 字体</div><div class="line">  logo:</div><div class="line">    external: true</div><div class="line">    family: Lobster Two</div><div class="line">    size: 24</div><div class="line"></div><div class="line">  # 代码字体，应用于 code 以及代码块</div><div class="line">  codes:</div><div class="line">    external: true</div><div class="line">    family: PT Mono</div></pre></td></tr></table></figure><h3 id="设置代码高亮主题"><a href="#设置代码高亮主题" class="headerlink" title="设置代码高亮主题"></a>设置代码高亮主题</h3><p>NexT 使用 Tomorrow Theme 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 normal，night， night blue， night bright， night eighties。</p><p>更改 highlight_theme 字段，将其值设定成你所喜爱的高亮主题，例如：</p><blockquote><p>高亮主题设置示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Code Highlight theme</div><div class="line"># Available value: normal | night | night eighties | night blue | night bright</div><div class="line"># https://github.com/chriskempson/tomorrow-theme</div><div class="line">highlight_theme: normal</div></pre></td></tr></table></figure><h3 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h3><p>侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件 中。</p><p>1.链接放置在 social 字段下，一行一个链接。其键值格式是 显示文本: 链接地址。</p><blockquote><p>配置示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Social links</div><div class="line">social:</div><div class="line">  GitHub: https://github.com/your-user-name</div><div class="line">  Twitter: https://twitter.com/your-user-name</div><div class="line">  微博: http://weibo.com/your-user-name</div><div class="line">  豆瓣: http://douban.com/people/your-user-name</div><div class="line">  知乎: http://www.zhihu.com/people/your-user-name</div></pre></td></tr></table></figure><p>2.设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键: Font Awesome 图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀）。 enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。</p><blockquote><p>配置示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Social Icons</div><div class="line">social_icons:</div><div class="line">  enable: true</div><div class="line">  # Icon Mappings</div><div class="line">  GitHub: github</div><div class="line">  Twitter: twitter</div><div class="line">  微博: weibo</div></pre></td></tr></table></figure><h3 id="开启打赏功能-由-habren-贡献"><a href="#开启打赏功能-由-habren-贡献" class="headerlink" title="开启打赏功能 由 habren 贡献"></a>开启打赏功能 由 habren 贡献</h3><p>越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要 主题配置文件 中填入 微信 和 支付宝 收款二维码图片地址 即可开启该功能。</p><blockquote><p>打赏功能配置示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</div><div class="line">wechatpay: /path/to/wechat-reward-image</div><div class="line">alipay: /path/to/alipay-reward-image</div></pre></td></tr></table></figure><h3 id="友情链接-由-iamwent-贡献"><a href="#友情链接-由-iamwent-贡献" class="headerlink" title="友情链接 由 iamwent 贡献"></a>友情链接 由 iamwent 贡献</h3><p>编辑 主题配置文件 添加：</p><blockquote><p>友情链接配置示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># title</div><div class="line">links_title: Links</div><div class="line">links:</div><div class="line">  MacTalk: http://macshuo.com/</div><div class="line">  Title: http://example.com/</div></pre></td></tr></table></figure><h3 id="站点建立时间"><a href="#站点建立时间" class="headerlink" title="站点建立时间"></a>站点建立时间</h3><p>这个时间将在站点的底部显示，例如 © 2013 - 2015。 编辑 主题配置文件，新增字段 since。</p><blockquote><p>配置示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">since: 2013</div></pre></td></tr></table></figure><h3 id="设置「动画效果」"><a href="#设置「动画效果」" class="headerlink" title="设置「动画效果」"></a>设置「动画效果」</h3><p>NexT 默认开启动画效果，效果使用 JavaScript 编写，因此需要等待 JavaScript 脚本完全加载完毕后才会显示内容。 如果您比较在乎速度，可以将设置此字段的值为 false 来关闭动画。</p><p>编辑 主题配置文件， 搜索 use_motion，根据您的需求设置值为 true 或者 false 即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">use_motion: true  # 开启动画效果</div><div class="line">use_motion: false # 关闭动画效果</div></pre></td></tr></table></figure><h3 id="设置「背景动画」"><a href="#设置「背景动画」" class="headerlink" title="设置「背景动画」"></a>设置「背景动画」</h3><p>NexT 自带两种背景动画效果</p><p>编辑 主题配置文件， 搜索 canvas_nest 或 three_waves，根据您的需求设置值为 true 或者 false 即可：</p><blockquote><p>注意： three_waves 在版本 5.1.1 中引入。只能同时开启一种背景动画效果。</p><p>canvas_nest 配置示例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># canvas_nest</div><div class="line">canvas_nest: true //开启动画</div><div class="line">canvas_nest: false //关闭动画</div><div class="line">three_waves 配置示例</div><div class="line"># three_waves</div><div class="line">three_waves: true //开启动画</div><div class="line">three_waves: false //关闭动画</div></pre></td></tr></table></figure><h3 id="腾讯公益-404-页面-由-xirong-贡献"><a href="#腾讯公益-404-页面-由-xirong-贡献" class="headerlink" title="腾讯公益 404 页面 由 xirong 贡献"></a>腾讯公益 404 页面 由 xirong 贡献</h3><p>腾讯公益404页面，寻找丢失儿童，让大家一起关注此项公益事业！</p><p>效果如下</p><p><img src="http://ovefvi4g3.bkt.clouddn.com/2017-09-14.png" alt="2017-09-14"></p><p>使用方法，新建 404.html 页面，放到主题的 source 目录下，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE HTML&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">  &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8;&quot;/&gt;</div><div class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;</div><div class="line">  &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</div><div class="line">  &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt;</div><div class="line">  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">  &lt;script type=&quot;text/plain&quot; src=&quot;http://www.qq.com/404/search_children.js&quot;</div><div class="line">          charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot;</div><div class="line">          homePageName=&quot;回到我的主页&quot;&gt;</div><div class="line">  &lt;/script&gt;</div><div class="line">  &lt;script src=&quot;https://qzone.qq.com/gy/404/data.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</div><div class="line">  &lt;script src=&quot;https://qzone.qq.com/gy/404/page.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;NexT基本使用&lt;br&gt;转自&lt;a href=&quot;http://theme-next.iissnan.com/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方说明文档&lt;/a&gt;&lt;/p&gt;
&lt;/b
      
    
    </summary>
    
      <category term="Study" scheme="http://yoursite.com/categories/Study/"/>
    
    
      <category term="静态博客" scheme="http://yoursite.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="NexT" scheme="http://yoursite.com/tags/NexT/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Enable BCM94352z on your hacintosh</title>
    <link href="http://yoursite.com/2017/09/13/Enable%20BCM94352z%20on%20your%20hacintosh/"/>
    <id>http://yoursite.com/2017/09/13/Enable BCM94352z on your hacintosh/</id>
    <published>2017-09-12T16:00:00.000Z</published>
    <updated>2017-10-19T01:04:19.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>黑苹果无线网卡 BCM94352z 驱动教程</p></blockquote><h1 id="添加仿冒-ID-启用蓝牙："><a href="#添加仿冒-ID-启用蓝牙：" class="headerlink" title="添加仿冒 ID 启用蓝牙："></a>添加仿冒 ID 启用蓝牙：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">config.plist -&gt; Device -&gt; FakeID -&gt; WIFI 中填写 0x43a014e4</div></pre></td></tr></table></figure><h1 id="在-Clover-的配置文件-config-plist-gt-Kernel-and-Kext-Patches-添加以下代码块"><a href="#在-Clover-的配置文件-config-plist-gt-Kernel-and-Kext-Patches-添加以下代码块" class="headerlink" title="在 Clover 的配置文件 config.plist -&gt; Kernel and Kext Patches 添加以下代码块"></a>在 Clover 的配置文件 config.plist -&gt; Kernel and Kext Patches 添加以下代码块</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;dict&gt;</div><div class="line">    &lt;key&gt;Comment&lt;/key&gt;</div><div class="line">    &lt;string&gt;10.11+-BT4LE-Handoff-Hotspot-lisai9093&lt;/string&gt;</div><div class="line">    &lt;key&gt;Disabled&lt;/key&gt;</div><div class="line">    &lt;false/&gt;</div><div class="line">    &lt;key&gt;Find&lt;/key&gt;</div><div class="line">    &lt;data&gt;</div><div class="line">    SIX/dEdIiwc=</div><div class="line">    &lt;/data&gt;</div><div class="line">    &lt;key&gt;Name&lt;/key&gt;</div><div class="line">    &lt;string&gt;IOBluetoothFamily&lt;/string&gt;</div><div class="line">    &lt;key&gt;Replace&lt;/key&gt;</div><div class="line">    &lt;data&gt;</div><div class="line">    Qb4PAAAA60Q=</div><div class="line">    &lt;/data&gt;</div><div class="line">&lt;/dict&gt;</div></pre></td></tr></table></figure><h1 id="下载并安装驱动"><a href="#下载并安装驱动" class="headerlink" title="下载并安装驱动"></a>下载并安装驱动</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">https://github.com/vit9696/Lilu/releases</div><div class="line">https://bitbucket.org/RehabMan/os-x-fake-pci-id/downloads/   </div><div class="line">https://bitbucket.org/RehabMan/os-x-brcmpatchram/downloads/</div><div class="line">https://sourceforge.net/projects/airportbrcmfixup/files/?source=navbar</div></pre></td></tr></table></figure><p>   将以下驱动拷贝到 CLOVER/EFI/CLOVER/kexts/Other 文件夹下(由于 AirportBrcmFixup.kext 是依赖于 Lilu 运行的插件，所以还需要确保该目录下必须存在 Lilu.kext)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">AirportBrcmFixup.kext </div><div class="line">FakePCIID.kext </div><div class="line">FakePCIID_Broadcom_WiFi.kext </div><div class="line">BrcmPatchRAM2.kext </div><div class="line">BrcmFirmwareData.kext</div><div class="line">Lilu.kext</div></pre></td></tr></table></figure><h1 id="重建缓存"><a href="#重建缓存" class="headerlink" title="重建缓存"></a>重建缓存</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo rm -rf /System/Library/Caches/com.apple.kext.caches/Startup/kernelcache</div><div class="line">sudo rm -rf /System/Library/PrelinkedKernels/prelinkedkernel</div><div class="line">sudo touch /System/Library/Extensions/ &amp;&amp; sudo kextcache -u /</div></pre></td></tr></table></figure><h1 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h1>]]></content>
    
    <summary type="html">
    
      Enable BCM94352z on your hacintosh
    
    </summary>
    
      <category term="Hacintosh" scheme="http://yoursite.com/categories/Hacintosh/"/>
    
    
      <category term="黑苹果" scheme="http://yoursite.com/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Hacintosh" scheme="http://yoursite.com/tags/Hacintosh/"/>
    
      <category term="BCM94352z" scheme="http://yoursite.com/tags/BCM94352z/"/>
    
  </entry>
  
  <entry>
    <title>低碳生活答题问题</title>
    <link href="http://yoursite.com/2017/09/12/%E4%BD%8E%E7%A2%B3%E7%94%9F%E6%B4%BB%E7%AD%94%E9%A2%98%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/09/12/低碳生活答题问题/</id>
    <published>2017-09-11T16:00:00.000Z</published>
    <updated>2017-09-18T14:40:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>低碳生活答题问题</p></blockquote><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>某电视台举办了低碳生活大奖赛。题目的计分规则相当奇怪：</p><p>1、每位选手需要回答10个问题（其编号为1到10），越后面越有难度。答对的，当前分数翻倍；答错了则扣掉与题号相同的分数（选手必须回答问题，不回答按错误处理）。</p><p>2、每位选手都有一个起步的分数为10分。 某获胜选手最终得分刚好是100分，如果不让你看比赛过程，你能推断出他（她）哪个题目答对了，哪个题目答错了吗？</p><p>3、如果把答对的记为1，答错的记为0，则10个题目的回答情况可以用仅含有1和0的串来表示。例如：0010110011 就是可能的情况。</p><p>4、你的任务是算出所有可能情况。每个答案占一行。</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>一共十个问题，每个问题两种情况，要么对要么错，那么结果就会有 0000000000 ~ 1111111111 = pow（2，10）种，就可以用暴力搜索将所有情况枚举出来然后判断符合要求的情况；</p><p>分数的控制可以直接利用遍历所有情况的 for 循环分别判断两种情况； </p><p>如果用输出 1 代表回答正确， 0 代表错误，不难想到任何一个正整数对 2 取余结果只有 1 和 0 两种情况， 输出的时候也就成了进制转换问题； </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdio.h&gt; </div><div class="line">#include &lt;math.h&gt; </div><div class="line">int main() &#123;</div><div class="line">    int i,j;</div><div class="line">    int score,temp;</div><div class="line"></div><div class="line">    for(i=0;i&lt;pow(2,10);i++)&#123;</div><div class="line">        temp=i;</div><div class="line">        score=10;</div><div class="line">            </div><div class="line">        for(j=0;j&lt;10;j++)&#123; </div><div class="line">            if(temp%2 == 1)</div><div class="line">                score*=2;</div><div class="line">            else</div><div class="line">                score-=j+1; </div><div class="line">            temp/=2;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        if(score==100)&#123;</div><div class="line">            temp=i;</div><div class="line">            for(j=0;j&lt;10;j++)&#123;</div><div class="line">                printf(&quot;%d &quot;, temp%2);</div><div class="line">                temp/=2;</div><div class="line">            &#125;</div><div class="line">            printf(&quot;\n&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1 0 1 1 0 1 0 0 0 0 </div><div class="line">0 1 1 1 0 1 0 0 0 0 </div><div class="line">0 0 1 0 1 1 0 0 1 1</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;低碳生活答题问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;某电视台举办了低碳生活大奖赛。题目的计
      
    
    </summary>
    
      <category term="Arithmetics" scheme="http://yoursite.com/categories/Arithmetics/"/>
    
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="低碳生活答题问题" scheme="http://yoursite.com/tags/%E4%BD%8E%E7%A2%B3%E7%94%9F%E6%B4%BB%E7%AD%94%E9%A2%98%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
</feed>
